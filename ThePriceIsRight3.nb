(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    292641,       5498]
NotebookOptionsPosition[    289862,       5400]
NotebookOutlinePosition[    290216,       5416]
CellTagsIndexPosition[    290173,       5413]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Introduction", "Section",
 CellChangeTimes->{{3.6032111392174177`*^9, 3.603211140775433*^9}}],

Cell[TextData[{
 "Setting the right price keeps your business humming; the wrong price can \
lead to a swift and painful demise. What then makes the price right? And how \
do you determine it? That\[CloseCurlyQuote]s what we\[CloseCurlyQuote]re \
going to explore in this simulation.\n\nImagine a game in which you tossed a \
(not necessarily fair) coin every year. If it comes up heads you play again \
next year. If it comes up tails, game over. If the game is played by ",
 StyleBox["n ",
  FontSlant->"Italic"],
 "people to begin with, how many years before it comes to an end for \
everyone? How many survive from year to year? How many will typically drop \
out every year? This simple game can be used to learn about pricing in a \
simple subscription business."
}], "Text",
 CellChangeTimes->{{3.603211149192539*^9, 3.603211342729752*^9}, {
   3.603215919523875*^9, 3.603215958109709*^9}, 3.6032161158246117`*^9, {
   3.603216415252008*^9, 3.6032164583784113`*^9}, {3.6032177840635567`*^9, 
   3.603217785836618*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Business", "Section",
 CellChangeTimes->{{3.603216473953271*^9, 3.603216477931899*^9}}],

Cell["\<\
The subscription business we\[CloseCurlyQuote]re going to start is a simple \
one. You begin at the start of year 1 with an initial number of subscribers. \
You\[CloseCurlyQuote]ve doubtless worked hard to acquire them, so what do you \
have to do to keep them (hopefully) and add even more subscribers?

Well, you have two things you can try to control - the first is your renewal \
rate. By providing good value you hope your subscribers will renew their \
subscription. And you can go out and acquire new subscribers. Together, they \
determine how you grow your customers.\
\>", "Text",
 CellChangeTimes->{{3.603216486395948*^9, 3.6032165359255743`*^9}, {
  3.6032166785919123`*^9, 3.603216819938262*^9}, {3.603216872767179*^9, 
  3.603216956857731*^9}, {3.603217557676421*^9, 3.603217592104938*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Customer Growth", "Section",
 CellChangeTimes->{{3.603217633413114*^9, 3.603217636757106*^9}}],

Cell[TextData[{
 "As you play with the renewal and the acquisition rates \
you\[CloseCurlyQuote]ll notice two things. First, to keep your subscribers \
from dropping to zero, you\[CloseCurlyQuote]ll have to keep the sum of the \
renewal rate and the acquisition rate at or greater than 1. That makes \
intuitive sense. But the second thing you\[CloseCurlyQuote]ll notice -- which \
is surprising -- is how ",
 StyleBox["sensitive ",
  FontSlant->"Italic"],
 "the growth or decay of the number of subscribers is  this sum. As the sum \
approaches 1 from either direction, growth flips into decay or vice versa."
}], "Text",
 CellChangeTimes->{{3.603217668212625*^9, 3.603217760619546*^9}, {
   3.603217846201673*^9, 3.603217989725874*^9}, 3.6039297256334457`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", " ", "=", " ", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"subscribers2", "[", 
       RowBox[{
       "nStart_", ",", " ", "nPeriod_", ",", " ", "renewRate_", ",", " ", 
        "addRate_"}], "]"}], ":=", " ", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", "a", ",", "t", ",", " ", "out"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Take", " ", "the", " ", "nStart", " ", "value", " ", "and", " ", 
          "calcuate", " ", "the", " ", "renewals"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"r", "[", "1", "]"}], " ", "=", " ", 
          RowBox[{"Round", "[", 
           RowBox[{"nStart", " ", "*", " ", "renewRate"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"a", "[", "1", "]"}], " ", "=", " ", 
          RowBox[{"Round", "[", 
           RowBox[{"nStart", " ", "*", " ", "addRate"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"t", "[", "1", "]"}], " ", "=", " ", 
          RowBox[{
           RowBox[{"r", "[", "1", "]"}], " ", "+", " ", 
           RowBox[{"a", "[", "1", "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Both", " ", "the", " ", "renewal", " ", "and", " ", "the", " ", 
           "new", " ", "addition", " ", "rates", " ", "are", " ", "figured", 
           " ", "on", " ", "the", " ", "total", " ", "stock", " ", "in", " ", 
           "the", " ", "current", " ", "year"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"r", "[", "n_", "]"}], " ", ":=", " ", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"t", "[", 
             RowBox[{"n", "-", "1"}], "]"}], " ", "*", " ", "renewRate"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"a", "[", "n_", "]"}], " ", ":=", " ", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"t", "[", 
             RowBox[{"n", "-", "1"}], "]"}], " ", "*", " ", "addRate"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"t", "[", "n_", "]"}], " ", ":=", " ", 
          RowBox[{
           RowBox[{"a", "[", "n", "]"}], " ", "+", " ", 
           RowBox[{"r", "[", "n", "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"out", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"t", "[", "i", "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", "1", ",", " ", "nPeriod"}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Prepend", "[", 
          RowBox[{"out", ",", " ", "nStart"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Tooltip", "[", 
        RowBox[{"subscribers2", "[", 
         RowBox[{"nStart", ",", " ", "10", ",", " ", "r", ",", " ", "b"}], 
         "]"}], "]"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "10"}], "}"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"Ticks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", "10", "]"}], ",", "Automatic"}], "}"}]}], ",", 
       RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"10", ",", " ", "Bold", ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "}"}]}], 
       ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Year\>\"", ",", " ", "\"\<# Subscribers\>\""}], "}"}]}],
        ",", 
       RowBox[{"PlotMarkers", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "12"}], "}"}]}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nStart", ",", "100", ",", " ", "\"\<# of Initial Subscribers\>\""}], 
       "}"}], ",", " ", "50", ",", " ", "1000", ",", " ", "50", ",", " ", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"r", ",", " ", "0.7", ",", " ", "\"\<Renewal Rate\>\""}], 
       "}"}], ",", " ", "0", ",", "1", ",", " ", "0.01", ",", " ", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "b", ",", " ", "0.28", ",", " ", "\"\<Rate of Acquisition\>\""}], 
       "}"}], ",", "0", ",", "1", ",", " ", "0.01", ",", " ", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzFsoQwEAxvEz7UEutRQrs7E6D8ZqJGtlWWeJkVgrZUiZEMr2oIUWSrSV
xKjtYY8sSSFaaVPjBbvUrGSrMylFZjVqaM3tfOfh6/fy9RcbjLqRPIIghMyg
zzxo6j1OUk7XvhWmxOQOzK/Xs3J+VrxQRwuv4EOoLgS/X7pYH0tEETigcqdZ
1dEMtJLhH8g/PuTqGft09gJ44XHy4FwuUgrpfq0AOkR8EXz6yHltjNUZng+a
NhcuoOXs5BJuLKWCUFJTGYWfHUV3sEo4zKrtnExAh1TyCN1DXa+QJmxptlts
2TafJylfbnEHTguUvhlG9VGLH3qWC6+hP6wJwjxjLgb/tr7ikEPfJWBWJr+H
iqUGcpaRNzYlg9mMdNceS1Lk3u0Ra6zxFK6Gm1i9v9XyRDxJVZQ3KyDx9q6E
5PqUCrbeaNpgwDXfDsvMa92QW2vtgc+SgB7etxr6IR07GGd/o9sT8B9WjgXN

  "]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 0.85, $CellContext`nStart$$ = 
    350, $CellContext`r$$ = 0.76, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`nStart$$], 100, "# of Initial Subscribers"}, 50, 
      1000, 50}, {{
       Hold[$CellContext`r$$], 0.7, "Renewal Rate"}, 0, 1, 0.01}, {{
       Hold[$CellContext`b$$], 0.28, "Rate of Acquisition"}, 0, 1, 0.01}}, 
    Typeset`size$$ = {400., {115., 120.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`nStart$14895$$ = 0, $CellContext`r$14896$$ = 
    0, $CellContext`b$14897$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`b$$ = 0.28, $CellContext`nStart$$ = 
        100, $CellContext`r$$ = 0.7}, "ControllerVariables" :> {
        Hold[$CellContext`nStart$$, $CellContext`nStart$14895$$, 0], 
        Hold[$CellContext`r$$, $CellContext`r$14896$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$14897$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`subscribers2[
          Pattern[$CellContext`nStart, 
           Blank[]], 
          Pattern[$CellContext`nPeriod, 
           Blank[]], 
          Pattern[$CellContext`renewRate, 
           Blank[]], 
          Pattern[$CellContext`addRate, 
           Blank[]]] := 
        Module[{$CellContext`r, $CellContext`a, $CellContext`t, \
$CellContext`out}, $CellContext`r[1] = 
           Round[$CellContext`nStart $CellContext`renewRate]; $CellContext`a[
            1] = Round[$CellContext`nStart $CellContext`addRate]; \
$CellContext`t[1] = $CellContext`r[1] + $CellContext`a[1]; $CellContext`r[
             Pattern[$CellContext`n, 
              Blank[]]] := 
           Round[$CellContext`t[$CellContext`n - 
               1] $CellContext`renewRate]; $CellContext`a[
             Pattern[$CellContext`n, 
              Blank[]]] := 
           Round[$CellContext`t[$CellContext`n - 
               1] $CellContext`addRate]; $CellContext`t[
             Pattern[$CellContext`n, 
              
              Blank[]]] := $CellContext`a[$CellContext`n] + \
$CellContext`r[$CellContext`n]; $CellContext`out = Table[
             $CellContext`t[$CellContext`i], {$CellContext`i, 
              1, $CellContext`nPeriod}]; 
          Prepend[$CellContext`out, $CellContext`nStart]]; ListLinePlot[
         Tooltip[
          $CellContext`subscribers2[$CellContext`nStart$$, 
           10, $CellContext`r$$, $CellContext`b$$]], 
         PlotRange -> {{0, 10}, All}, Ticks -> {
           Range[10], Automatic}, GridLines -> Automatic, 
         BaseStyle -> {10, Bold, FontFamily -> "Helvetica"}, 
         AxesLabel -> {"Year", "# Subscribers"}, 
         PlotMarkers -> {Automatic, 12}, ImageSize -> 400]), 
      "Specifications" :> {{{$CellContext`nStart$$, 100, 
          "# of Initial Subscribers"}, 50, 1000, 50, Appearance -> 
         "Labeled"}, {{$CellContext`r$$, 0.7, "Renewal Rate"}, 0, 1, 0.01, 
         Appearance -> 
         "Labeled"}, {{$CellContext`b$$, 0.28, "Rate of Acquisition"}, 0, 1, 
         0.01, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{445., {187., 192.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.60384038655645*^9, 3.603881440552567*^9, 3.6038844894271812`*^9, 
   3.6038845404991903`*^9, 3.603884622234771*^9, {3.6038846766301317`*^9, 
   3.60388471810247*^9}, 3.603884764770164*^9, {3.6038848790602703`*^9, 
   3.603884886610035*^9}, 3.60423791286683*^9}]
}, Open  ]],

Cell["\<\
The renewal and acquisition rates will vary from year to year. They are also \
dependent on the subscriber base. It might be realistic to acquire new \
customers at the rate of 30% a year when you don\[CloseCurlyQuote]t have many \
subscribers to begin with, but this rate of growth is probably unrealistic \
when you already have a thousand subscribers. You can change the acquisition \
rate in the simulation above to see how this affects subscriber growth.\
\>", "Text",
 CellChangeTimes->{{3.603840413113695*^9, 3.603840521343494*^9}, {
   3.6038405579876432`*^9, 3.6038405743368*^9}, {3.603841096150262*^9, 
   3.6038411002040358`*^9}, 3.603841135601211*^9, {3.603929732420232*^9, 
   3.6039297344220057`*^9}}],

Cell["\<\
As you subscribers grow, it becomes hard to keep acquisition rates as high as \
they used to be when you had fewer subscribers. An exception to this rule \
happens when your product has \[OpenCurlyDoubleQuote]network effects\
\[CloseCurlyDoubleQuote] -- the more people who subscribe, the more value it \
provides all subscribers. What are the key attributes of such a product? It\
\[CloseCurlyQuote]s worth thinking about this but let\[CloseCurlyQuote]s move \
on for now.\
\>", "Text",
 CellChangeTimes->{3.6038411560020647`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Cost of Staying Alive", "Section",
 CellChangeTimes->{{3.603841172721046*^9, 3.603841177247963*^9}}],

Cell["\<\
Your subscribers need care and feeding. And that costs money. So does \
acquiring new subscribers. And so does renewing your existing subscribers. \
Add these costs up and you\[CloseCurlyQuote]ll know how much you need to earn \
from your subscriptions to break even. Go ahead and set your costs, your \
renewal and acquisition rates. Then vary your subscription price to see what \
it does to your revenues and your profits. \
\>", "Text",
 CellChangeTimes->{3.60384120479296*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m2", " ", "=", " ", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "To", " ", "set", " ", "up", " ", "to", " ", "add", " ", "costs", " ", 
      "and", " ", "price", " ", "to", " ", "the", " ", "simulation"}], ",", 
     " ", 
     RowBox[{
     "create", " ", "a", " ", "variant", " ", "of", " ", "the", " ", 
      "subscribers2", " ", "function", " ", "that", " ", "generates", " ", 
      "outputs", " ", "that", " ", "can", " ", "be", " ", "used", " ", "to", 
      " ", "figure", " ", "costs"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"subscribers3", "[", 
       RowBox[{
       "nStart_", ",", " ", "nPeriod_", ",", " ", "renewRate_", ",", " ", 
        "addRate_"}], "]"}], ":=", " ", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", "a", ",", "t", ",", " ", "out"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Take", " ", "the", " ", "nStart", " ", "value", " ", "and", " ", 
          "calcuate", " ", "the", " ", "renewals"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"r", "[", "1", "]"}], " ", "=", " ", 
          RowBox[{"Round", "[", 
           RowBox[{"nStart", " ", "*", " ", "renewRate"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"a", "[", "1", "]"}], " ", "=", " ", 
          RowBox[{"Round", "[", 
           RowBox[{"nStart", " ", "*", " ", "addRate"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"t", "[", "1", "]"}], " ", "=", " ", 
          RowBox[{
           RowBox[{"r", "[", "1", "]"}], " ", "+", " ", 
           RowBox[{"a", "[", "1", "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Both", " ", "the", " ", "renewal", " ", "and", " ", "the", " ", 
           "new", " ", "addition", " ", "rates", " ", "are", " ", "figured", 
           " ", "on", " ", "the", " ", "total", " ", "stock", " ", "in", " ", 
           "the", " ", "current", " ", "year"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"r", "[", "n_", "]"}], " ", ":=", " ", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"t", "[", 
             RowBox[{"n", "-", "1"}], "]"}], " ", "*", " ", "renewRate"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"a", "[", "n_", "]"}], " ", ":=", " ", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"t", "[", 
             RowBox[{"n", "-", "1"}], "]"}], " ", "*", " ", "addRate"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"t", "[", "n_", "]"}], " ", ":=", " ", 
          RowBox[{
           RowBox[{"a", "[", "n", "]"}], " ", "+", " ", 
           RowBox[{"r", "[", "n", "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"out", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"r", "[", "i", "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "1", ",", " ", "nPeriod"}], "}"}]}], 
             "]"}], ",", " ", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"a", "[", "i", "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "1", ",", " ", "nPeriod"}], "}"}]}], 
             "]"}]}], "}"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Now", " ", "add", " ", "costs", " ", "to", " ", "the", " ", 
       "equation"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"profits", "[", 
       RowBox[{
       "nStart_", ",", " ", "nPeriod_", ",", " ", "renewRate_", ",", " ", 
        "addRate_", ",", " ", "renewCost_", ",", " ", "addCost_", ",", " ", 
        "maintCost_", ",", " ", "price_"}], "]"}], " ", ":=", " ", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "out", ",", " ", "renewals", ",", " ", "acquisitions", ",", " ", 
          "clients", ",", " ", "costOfRenewals", ",", " ", 
          "costOfAcquisitions", ",", " ", "costOfMaint", ",", " ", 
          "totalCost", ",", " ", "revenue", ",", " ", "profit", ",", " ", 
          "opts"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"out", " ", "=", " ", 
          RowBox[{"subscribers3", "[", 
           RowBox[{
           "nStart", ",", " ", "nPeriod", ",", " ", "renewRate", ",", " ", 
            "addRate"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"renewals", " ", "=", " ", 
          RowBox[{"out", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"acquisitions", " ", "=", " ", 
          RowBox[{"out", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"clients", " ", "=", " ", 
          RowBox[{"renewals", " ", "+", " ", "acquisitions"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"costOfRenewals", " ", "=", " ", 
          RowBox[{"renewCost", " ", "*", " ", "renewals"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"costOfAcquisitions", " ", "=", " ", 
          RowBox[{"addCost", " ", "*", " ", "acquisitions"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"costOfMaint", " ", "=", " ", 
          RowBox[{"maintCost", " ", "*", " ", "clients"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"totalCost", " ", "=", " ", 
          RowBox[{
          "costOfRenewals", " ", "+", " ", "costOfAcquisitions", " ", "+", 
           " ", "costOfMaint"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"revenue", " ", "=", " ", 
          RowBox[{"price", " ", "*", " ", "clients"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"profit", " ", "=", " ", 
          RowBox[{"revenue", " ", "-", " ", "totalCost"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "clients", ",", " ", "costOfRenewals", ",", " ", 
           "costOfAcquisitions", ",", " ", "costOfMaint", ",", " ", 
           "totalCost", ",", " ", "revenue", ",", " ", "profit"}], "}"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Tooltip", "[", 
        RowBox[{"profits", "[", 
         RowBox[{
         "nStart", ",", " ", "10", ",", " ", "r", ",", " ", "b", ",", " ", 
          "rc", ",", " ", "bc", ",", " ", "mc", ",", " ", "pr"}], "]"}], 
        "]"}], ",", " ", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "18"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
       RowBox[{"Ticks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", "10", "]"}], ",", "Automatic"}], "}"}]}], ",", 
       RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<# Subscribers\>\"", ",", "\"\<Renewal Cost\>\"", ",", 
          "\"\<Acquisition Cost\>\"", ",", " ", "\"\<Maint Cost\>\"", ",", 
          " ", "\"\<Total Cost\>\"", ",", "\"\<Revenue\>\"", ",", " ", 
          "\"\<Profit\>\""}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Year\>\"", ",", " ", "None"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"12", ",", "Bold", ",", 
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}]}], 
         "}"}]}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nStart", ",", "1000", ",", " ", "\"\<# Initial Subscribers\>\""}], 
       "}"}], ",", " ", "50", ",", " ", "1000", ",", " ", "50", ",", " ", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"r", ",", " ", "0.75", ",", " ", "\"\<Renewal Rate\>\""}], 
       "}"}], ",", " ", "0", ",", "1", ",", " ", "0.01", ",", " ", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "b", ",", " ", "0.58", ",", " ", "\"\<Rate of Acquisition\>\""}], 
       "}"}], ",", "0", ",", "1", ",", " ", "0.01", ",", " ", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rc", ",", " ", "500", ",", " ", "\"\<Cost of Renewal\>\""}], 
       "}"}], ",", "500", ",", "5000", ",", " ", "100", ",", " ", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "bc", ",", " ", "10000", ",", " ", "\"\<Cost of Acquisition\>\""}], 
       "}"}], ",", "5000", ",", "30000", ",", " ", "1000", ",", " ", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mc", ",", " ", "5000", ",", " ", "\"\<Cost of Maint\>\""}], 
       "}"}], ",", "5000", ",", "30000", ",", " ", "1000", ",", " ", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "pr", ",", " ", "40000", ",", " ", "\"\<Price Per Subscriber\>\""}], 
       "}"}], ",", "20000", ",", "100000", ",", " ", "5000", ",", " ", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583697789180992*^9, 3.5836978025487566`*^9}, {
   3.583697851249542*^9, 3.5836978701986256`*^9}, {3.5836981671736116`*^9, 
   3.5836981683236775`*^9}, {3.5836982047397604`*^9, 3.583698266120271*^9}, {
   3.5836983238895755`*^9, 3.583698361755741*^9}, {3.583698524345041*^9, 
   3.583698580895275*^9}, {3.5837861911408896`*^9, 3.5837861988113284`*^9}, {
   3.5837868467893906`*^9, 3.583786853471773*^9}, {3.5837886702476864`*^9, 
   3.583788671113736*^9}, {3.583788829433791*^9, 3.583788852102088*^9}, {
   3.583789009779106*^9, 3.583789069424518*^9}, {3.583789104577529*^9, 
   3.5837892775164204`*^9}, {3.5837895043413935`*^9, 
   3.5837895175271482`*^9}, {3.583789672868033*^9, 3.583789746355236*^9}, {
   3.5837898431117706`*^9, 3.5837898832350655`*^9}, {3.5841241444888287`*^9, 
   3.58412417147587*^9}, {3.591091662718309*^9, 3.591091683368841*^9}, {
   3.591096796395074*^9, 3.5910969474590273`*^9}, {3.6032172272710876`*^9, 
   3.6032173803791924`*^9}, {3.6038812821599483`*^9, 3.6038812853353777`*^9}, 
   3.603884853037595*^9, {3.603892775183956*^9, 3.603892780498538*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 0.58, $CellContext`bc$$ = 
    10000, $CellContext`mc$$ = 5000, $CellContext`nStart$$ = 
    1000, $CellContext`pr$$ = 95000, $CellContext`r$$ = 
    0.27, $CellContext`rc$$ = 4200, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`nStart$$], 1000, "# Initial Subscribers"}, 50, 1000, 
      50}, {{
       Hold[$CellContext`r$$], 0.75, "Renewal Rate"}, 0, 1, 0.01}, {{
       Hold[$CellContext`b$$], 0.58, "Rate of Acquisition"}, 0, 1, 0.01}, {{
       Hold[$CellContext`rc$$], 500, "Cost of Renewal"}, 500, 5000, 100}, {{
       Hold[$CellContext`bc$$], 10000, "Cost of Acquisition"}, 5000, 30000, 
      1000}, {{
       Hold[$CellContext`mc$$], 5000, "Cost of Maint"}, 5000, 30000, 1000}, {{
      
       Hold[$CellContext`pr$$], 40000, "Price Per Subscriber"}, 20000, 100000,
       5000}}, Typeset`size$$ = {634., {136., 140.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`nStart$14972$$ = 0, $CellContext`r$14973$$ = 
    0, $CellContext`b$14974$$ = 0, $CellContext`rc$14975$$ = 
    0, $CellContext`bc$14976$$ = 0, $CellContext`mc$14977$$ = 
    0, $CellContext`pr$14978$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`b$$ = 0.58, $CellContext`bc$$ = 
        10000, $CellContext`mc$$ = 5000, $CellContext`nStart$$ = 
        1000, $CellContext`pr$$ = 40000, $CellContext`r$$ = 
        0.75, $CellContext`rc$$ = 500}, "ControllerVariables" :> {
        Hold[$CellContext`nStart$$, $CellContext`nStart$14972$$, 0], 
        Hold[$CellContext`r$$, $CellContext`r$14973$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$14974$$, 0], 
        Hold[$CellContext`rc$$, $CellContext`rc$14975$$, 0], 
        Hold[$CellContext`bc$$, $CellContext`bc$14976$$, 0], 
        Hold[$CellContext`mc$$, $CellContext`mc$14977$$, 0], 
        Hold[$CellContext`pr$$, $CellContext`pr$14978$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`subscribers3[
          Pattern[$CellContext`nStart, 
           Blank[]], 
          Pattern[$CellContext`nPeriod, 
           Blank[]], 
          Pattern[$CellContext`renewRate, 
           Blank[]], 
          Pattern[$CellContext`addRate, 
           Blank[]]] := 
        Module[{$CellContext`r, $CellContext`a, $CellContext`t, \
$CellContext`out}, $CellContext`r[1] = 
           Round[$CellContext`nStart $CellContext`renewRate]; $CellContext`a[
            1] = Round[$CellContext`nStart $CellContext`addRate]; \
$CellContext`t[1] = $CellContext`r[1] + $CellContext`a[1]; $CellContext`r[
             Pattern[$CellContext`n, 
              Blank[]]] := 
           Round[$CellContext`t[$CellContext`n - 
               1] $CellContext`renewRate]; $CellContext`a[
             Pattern[$CellContext`n, 
              Blank[]]] := 
           Round[$CellContext`t[$CellContext`n - 
               1] $CellContext`addRate]; $CellContext`t[
             Pattern[$CellContext`n, 
              
              Blank[]]] := $CellContext`a[$CellContext`n] + \
$CellContext`r[$CellContext`n]; $CellContext`out = {
             Table[
              $CellContext`r[$CellContext`i], {$CellContext`i, 
               1, $CellContext`nPeriod}], 
             Table[
              $CellContext`a[$CellContext`i], {$CellContext`i, 
               1, $CellContext`nPeriod}]}]; $CellContext`profits[
          Pattern[$CellContext`nStart, 
           Blank[]], 
          Pattern[$CellContext`nPeriod, 
           Blank[]], 
          Pattern[$CellContext`renewRate, 
           Blank[]], 
          Pattern[$CellContext`addRate, 
           Blank[]], 
          Pattern[$CellContext`renewCost, 
           Blank[]], 
          Pattern[$CellContext`addCost, 
           Blank[]], 
          Pattern[$CellContext`maintCost, 
           Blank[]], 
          Pattern[$CellContext`price, 
           Blank[]]] := 
        Module[{$CellContext`out, $CellContext`renewals, \
$CellContext`acquisitions, $CellContext`clients, $CellContext`costOfRenewals, \
$CellContext`costOfAcquisitions, $CellContext`costOfMaint, \
$CellContext`totalCost, $CellContext`revenue, $CellContext`profit, \
$CellContext`opts}, $CellContext`out = \
$CellContext`subscribers3[$CellContext`nStart, $CellContext`nPeriod, \
$CellContext`renewRate, $CellContext`addRate]; $CellContext`renewals = 
           Part[$CellContext`out, 1]; $CellContext`acquisitions = 
           Part[$CellContext`out, 
             2]; $CellContext`clients = $CellContext`renewals + \
$CellContext`acquisitions; $CellContext`costOfRenewals = \
$CellContext`renewCost $CellContext`renewals; $CellContext`costOfAcquisitions = \
$CellContext`addCost $CellContext`acquisitions; $CellContext`costOfMaint = \
$CellContext`maintCost $CellContext`clients; $CellContext`totalCost = \
$CellContext`costOfRenewals + $CellContext`costOfAcquisitions + \
$CellContext`costOfMaint; $CellContext`revenue = $CellContext`price \
$CellContext`clients; $CellContext`profit = $CellContext`revenue - \
$CellContext`totalCost; {$CellContext`clients, $CellContext`costOfRenewals, \
$CellContext`costOfAcquisitions, $CellContext`costOfMaint, \
$CellContext`totalCost, $CellContext`revenue, $CellContext`profit}]; 
       ListLinePlot[
         Tooltip[
          $CellContext`profits[$CellContext`nStart$$, 
           10, $CellContext`r$$, $CellContext`b$$, $CellContext`rc$$, \
$CellContext`bc$$, $CellContext`mc$$, $CellContext`pr$$]], 
         PlotMarkers -> {Automatic, 18}, PlotRange -> All, Ticks -> {
           Range[10], Automatic}, GridLines -> Automatic, 
         PlotLegends -> {
          "# Subscribers", "Renewal Cost", "Acquisition Cost", "Maint Cost", 
           "Total Cost", "Revenue", "Profit"}, AxesLabel -> {"Year", None}, 
         ImageSize -> 500, 
         LabelStyle -> {12, Bold, FontFamily -> "Helvetica"}]), 
      "Specifications" :> {{{$CellContext`nStart$$, 1000, 
          "# Initial Subscribers"}, 50, 1000, 50, Appearance -> 
         "Labeled"}, {{$CellContext`r$$, 0.75, "Renewal Rate"}, 0, 1, 0.01, 
         Appearance -> 
         "Labeled"}, {{$CellContext`b$$, 0.58, "Rate of Acquisition"}, 0, 1, 
         0.01, Appearance -> 
         "Labeled"}, {{$CellContext`rc$$, 500, "Cost of Renewal"}, 500, 5000, 
         100, Appearance -> 
         "Labeled"}, {{$CellContext`bc$$, 10000, "Cost of Acquisition"}, 5000,
          30000, 1000, Appearance -> 
         "Labeled"}, {{$CellContext`mc$$, 5000, "Cost of Maint"}, 5000, 30000,
          1000, Appearance -> 
         "Labeled"}, {{$CellContext`pr$$, 40000, "Price Per Subscriber"}, 
         20000, 100000, 5000, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{679., {264., 269.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6038412545806427`*^9, 3.603881440781611*^9, 
  3.603884855443646*^9, 3.603892782622192*^9, 3.6042379130971327`*^9}]
}, Open  ]],

Cell["\<\
As you play around with the scenarios, you\[CloseCurlyQuote]ll notice some \
things.

1. The sum of the renewal and acquisition rate needs to be well above 1. When \
it hovers around 1 you can make a profit, but you have to keep costs really \
low and prices relatively high. That\[CloseCurlyQuote]s no fun at all. So you\
\[CloseCurlyQuote]d better invest in some good people who achieve the renewal \
and acquisition rates that are required.

2. The number of subscribers you begin with doesn\[CloseCurlyQuote]t matter \
to your profit trajectory. If you keep everything else the same and change \
only the number of subscribers you begin with, you won\[CloseCurlyQuote]t \
change the trajectory of your earnings. Of course the curves will shift up or \
down, but their trajectories (and hence their relative trajectories) will not \
change.

3. It\[CloseCurlyQuote]s good to hold maintenance costs low -- profits are \
sensitive to that cost.
The cost of acquisition and the acquisition rate are connected. You can slack \
off on one if you perk up on the other.

4. Try this out. Set the renewal and acquisition rates at 1 -- so you\
\[CloseCurlyQuote]re doubling your customer base every year! You\
\[CloseCurlyQuote]ve hit the big time! Or have you? What do you observe about \
the relationship between the three costs and the price?

Simulations like these can help you see the effect of the interplay between \
many different factors as they change simultaneously. They give you a way to \
get an intuitive feel for questions like the following: If I can only renew \
at 62% and acquire new subscribers at 40%  and my customers won\
\[CloseCurlyQuote]t pay more than $25,000 for a subscription, what \
combination of costs do I have to stay under to make a profit of at least $X \
in year 5? What is the maximum profit possible? \
\>", "Text",
 CellChangeTimes->{
  3.60384128779858*^9, {3.60384133507094*^9, 3.603841368672724*^9}, {
   3.603921334462927*^9, 3.603921426271492*^9}}],

Cell["\<\
When there are a number of variables in play, even simple problems can get \
quickly complicated. In these situations are invaluable. In some cases they \
may be the only way to make progress on the problem.\
\>", "Text",
 CellChangeTimes->{{3.603841498536764*^9, 3.60384152334991*^9}, {
  3.6038415834455423`*^9, 3.603841602650579*^9}, {3.603845328402998*^9, 
  3.603845437361231*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Vagaries of the World", "Section",
 CellChangeTimes->{{3.603841627165441*^9, 3.603841631286743*^9}}],

Cell[TextData[{
 StyleBox["If a man will begin with certainties, he shall end in doubts, but \
if he will be content to begin with doubts, he shall end in certainties.",
  FontSlant->"Italic"],
 "\nFrancis Bacon, English Philosopher, 1561 - 1626"
}], "Text",
 CellChangeTimes->{{3.60388347268489*^9, 3.603883528883256*^9}},
 TextAlignment->Right],

Cell["\<\
Real life is more complicated. Renewal and acquisition rates vary from year \
to year due to many factors that are not within your control. So do costs. \
Simulating these variations from year to year will give you a more certain \
sense of how things will evolve. \
\>", "Text",
 CellChangeTimes->{{3.603883238896667*^9, 3.603883361958823*^9}, {
  3.603885658479649*^9, 3.603885660071896*^9}, {3.603885693912034*^9, 
  3.60388574717913*^9}, {3.603894011999452*^9, 3.603894033164353*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s set up this simulation by making some assumptions. 

a) Renewal rates are normally distributed with a mean of 70% and a standard \
deviation of 20% (accounting for some large fluctuations in annual renewal \
rates).\
\>", "Text",
 CellChangeTimes->{{3.603883713236919*^9, 3.603883863207779*^9}, {
   3.603884086926428*^9, 3.603884367355447*^9}, {3.6038852381570063`*^9, 
   3.603885349509665*^9}, {3.603885386264511*^9, 3.603885465204295*^9}, {
   3.60388550762224*^9, 3.6038855732557907`*^9}, {3.6038857651875067`*^9, 
   3.6038857958389673`*^9}, {3.603885947405882*^9, 3.6038860019926567`*^9}, {
   3.603886070879017*^9, 3.603886250631773*^9}, {3.60392714671415*^9, 
   3.603927156787423*^9}, 3.603929736869253*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{".7", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", 
        RowBox[{"{", 
         RowBox[{".75", ",", ".5", ",", ".2"}], "}"}]}], "}"}]}], "]"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Renewal Rate\>\"", ",", " ", "\"\<Probability Density\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Std. Dev. = 0.75\>\"", ",", " ", "\"\<Std. Dev. = 0.5\>\"", ",", 
      " ", "\"\<Std. Dev. = 0.2\>\""}], "}"}]}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Probability Density of Renewal Rates \[Mu] = .7\\n\>\""}]}], 
  "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.603844192674716*^9, 3.6038442996601267`*^9}, {
  3.603844351932991*^9, 3.6038443559710703`*^9}, {3.603844397840981*^9, 
  3.603844412035993*^9}, {3.60384444579349*^9, 3.6038445348489313`*^9}, {
  3.603886292348095*^9, 3.603886479103003*^9}, {3.6038865560695143`*^9, 
  3.603886750630073*^9}, {3.603886862460147*^9, 3.6038869345817633`*^9}, {
  3.603887002705261*^9, 3.603887006015255*^9}, {3.6038870629375257`*^9, 
  3.60388713280931*^9}, {3.6038872249041967`*^9, 3.6038872627914343`*^9}, {
  3.6038920899389257`*^9, 3.603892165856331*^9}, {3.603892284770708*^9, 
  3.603892290993951*^9}, {3.60392716132123*^9, 3.603927163384965*^9}, {
  3.603927329626134*^9, 3.603927348015193*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
f/39/wGNtE0S
     "], {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1:eJwl1He4zmUYB/D32FtWZB0je++tUNnr2CNy7J2QUqJsDauyKRo0FGW0pKXs
BhWlaCoqFFKUz80fn+v7ve/fuc71vs/vud7iqaNTRqVJJBJJjEm6mn9nTCQu
UF0fbXE9gzlmLiT78Kx+iDx6V8brq/iErOZ2tNYH8Ajb+YdG9tVkVapQmUpU
pALlKUdZytCK/jzM21ygof9RWrYklYfYFp+bBp6VkuNYycdksWtLC70fD/IW
56kf30+OZQX7yWzXhub6Gg6S05zCbfoc3uQc9exKymf4ktzmLtyhHyG/3pPl
elHZj316pjgfbtFLyIF8q18ne7NaT5apHNCHyhx0pK95pCzOAL4yD5P56M5s
8whZOP6WN8xD5FlZV5aQo+JzM4ij5uGyILfytLmY7M8Xei7ZmTH611yr92CZ
XiTOhL16RtmKm/VvKKD34kn9M7LrHeL+6IfJq3djlv46f1Envpd8is+5xtyJ
2/Wl7CGDuSU36U/wKdnM7ePz6zN5jT+pbVcs7jFL2E36uAs003szg62coZZ9
cpwPi9lFurgLNNV7MZ0tnKamfVHZhJ5MYzOnqOFZEVmYQhSM9xvnEvcizpF8
cQ7kibsTZx3fOe4bN9KDqWziD6rHPZA30J0HeJXfqeZZdtmYbtzPK/xGVc+y
yUZ0ZQobOUkVz7LKhnRhMhs4QWXPssR9YxE7SRv3lgZ6Z+7jZX6lkn3muH88
zkekiTtBfb0Tk3iJX6honynuH4/xIUnxbqmnp3Av6zlOBXs/TYlhPMqOROLK
j1Yz6qoduYcX+Zny9hnkUBbyAf/T1L6O7MBEXuAnytmnl0NYwPv8F+/XvrZs
z908z4+UtU8nBzOf97gU786+lmzHXTzHD5SxTysHMY93uRjv076mbMsE1vE9
pe3j93kgc3mHf+Md29eQbbiTtXxHKfvLl5GcXw==
          "]]]}, {}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1:eJwl1XfYjXUYwPGDrIiMsleIKDOh7AZNMyOUTdPem2yVvUpZZZRNRptKKBQy
y0r2XiXU577643M99/0973kv3uc8v5OvRfs6byRNJBJJqG7oYLiaMpG4xkzz
imSJREU+YYvXH3SdTTvz99xvfpfbzc/xCRntA/ne+09RXHuLS7TQZ2ipzc/y
MRm0AXynn6SYNpqLNNc/0FKZn2EBd2r9+VY/wQPaKC7QTH9fS2l+mvmk1/qx
Xj/O/dpIzvOSPl1bxzGKaiM4x4tee0/7hj8pog3nLE3j/61NYypTmMwkJvI1
R7nPzw7jDE28Z4KWwvwU80in9eUr/Q8Ka0M5TWN9vJbc/CRzuUPrw5f6S/Yv
yG8fxxGtkH0Ip3ghutbW/B1F7dO4zbyJEvG3pYa5rOtHwZzWtTdfeO8jrgv4
US/lOpMXzeVc5/K5eZHrPYzlsPcsc32Y+fzg9cWuxeLvzL32pa5lmMOb9oWu
J10bxe/w/uWuFfiYn/QlrqWZRRt7edd5cf/NRVynksy8keJx/5P9/1l+yPXD
YE7j2iv+vX7/ZnvJ+BzS1PwZ+cxjOOT1DfYH4t5T0DyYEzSMn/F6a/N67rNP
Ian5CeZwu70nn/m5Jva15LW/w0GtgH0Qx2kQXUtifpzZpNZ6sFY/QH5tIMeo
r78dD6r5MWaRSuvOGv137tEG8CfP629poxnFSEYwnGGs5jfy+dn+HKWe9wzV
VrGfvFo//qCu14Zon7KPPFpfjlAn7qX2L4/aZ5JS68ZKbS+5tT4cprY+WLtF
NfsMUmhdWaHtIZfWm0PU0gdpN6lq/4DkWheWa7vJqfXiIDXjDNJuUMX+Prdp
nVmm7SKH1pMDcXbFGaT9Q2X7dJJpnViq/Up2rQe/x9kVZ5B2nUr290iqdWSJ
tpNsWnd+i7MrziDtbyra3yWJ1oHF2g6yat3YH2dXnAvaX1SwTyOhtWeR1ti+
hjzxmWC7lsXelX1xvsQ5oV2LZ9g+lX95Q1+ovWBeTe74jPCLdre9C3vjvIkz
IL4LeNg+hVu8Ht8FWiPzKnLZR/Ozdpe9M3uoEc+bdoXy9snc5LV4rrWG5k/J
aR/FNi2zvRO7qR7PkXaZcvZJ3ODVOI+0BuaV5LCPZKuWyd6RXfE8xnOkXaKs
fSL/8EqcS1p98wqy20ewRcto78Cv8TzGc6Vd5CH7BK7zcpw92vPm5WSzD49z
Sstgb8/OeD7js69doIx9PH/TLs5NrZ55GVntw+J81e6M+8MOHo1nQWtlXkdh
+2TOaw/ax/EXbePM1uqal5Ilnl82a+njfrGdavGsaC3N31DIPolzWmn7WK7R
Js5LrY55CXfHM88mLV3cP36hajxLWgvz19xrn8hZrZR9DFdpHee8Vtu8mLvi
nGCjdkfcT36mSjxrWnPzVxS0T+CMVtL+Dldopc3WapkXkTnOkfie0dLG/WUb
leNZ1JqZv6SAfTyntRL2t7lMy/he0WqaF5Ipzhk2aGnifrOVStp/6KovEg==

          "]]]}, {}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1:eJwl1mUYFVUXhuEjCAiogKCIRUt3W3Q3SKqkCILS3S3d3SqlqGAnLSkKiJLS
pYhKKaCC372u78e65nnetc+cc/bM7D1Z23Rp0DlJIpG4Q+W7M5F4Vv2ZIpE4
lzSRuOa4L3kicdHxw2SJxCT8Nt5vzEb8E24uL4mfxQ3kE3gHPorP5SvwZvyo
/KZ6EKeWL8ED9Obwz/iHeDd+KsbgUriwvAevy1/lffg8/An+Bx/Uu87P+q0f
4In4Lb0f9TbgI7iZvARuiOvLx/P2fCSfw5fjTfgR+Q2VEaeSL8b99WbzT/kH
+Dv8ZIzBJXEheXdeh7/Ce/O5+GP8Nz6g9xc/4/e9jyfglXo/6K3Hh3FTeXHc
ANeTj+Mv8RF8Nl+GN+KH47+qB3BK+SLcT28W/4S/j7/FT8QYXAIXlHfjtXkn
3ovPwR/hm3i/3p/8tN+3Bo/HK+Ka663Dh3ATeTFcH9eVj+Xt+HA+iy/FG/BD
8V/V/fgu+ULcV28m/5iXiR4vzgvwrrwW78h78hvqR9k12Sm/ZzUeh5frf6/X
mBfl9XgdPoa/yIfxmTxT/BeVgafgC3Af/Rn8I146erwYz8+78Jr8Zd6DX1c/
yK7KTvr+9/BYvEx/r14jXoTX5bX5a7wtH8pn8Afjt6v0PDmfj3vrT49nh5eK
Hi+a4v/PWWdeg3fg3flfap/siuyE738Xj8FL9ffEc8kL8zq8Fh/N2/AhfDrP
GL9d3ceTxf2qSoYbU0SWl7/Kq/P2vFs85+p72WXZcd+5mzfkhXhtY2ryUbw1
H8yn8QfiN6p0/M6471SJcGMKy/LwV3g1/hLvyq+pvbJLsmO+5zvegBfktYyp
wUfyVnwQn8rvj9+l0vKkfI0qHm5MIVlu3olX5e14F35V7ZH9ITvqe77l9XkB
XtOY6nyKyhC/RaWRJeGrVbFw4wrKcsX1UVfUbvnvsdY53y5ej+fnNYyrxier
9PGd6l7ZHfw9VTTcuAKyx2Pu1WX1nfy3WJucryqfpO6L71D3GJvg76oi4cbl
l+WMOVWX1Lfyi7F2+HwVPlGli3Oqu439T54j5kb9oXbJf41nWX5bZZd1VL+r
b/Qu6B2UV461W6WN86vUznVLnk32svpN7ZT/YvwB+Te8Ls/HqxtbiY/gLflA
Pp6nie9Wqfi/cT30zuN5sl54Gn4nri3eFet9zIPj3TyfY9a4Bo5b4plw7Bjz
7FiFv+jYIeY01kn+oePF+J2OO4z7Wbbfd16N9QP/Gt8V193xNf6m407j18b/
jzVFLy+uhivKh/MWfAAfx9/E6/G9MWcqZexBzj8X99SbylcZVyjmjuflWWLu
eGXelrfnv6rtsvOyH31+B6/N8/CqxlSINVbdE3Ot7oq9xLjMspfUBbVNfs74
H+T71E31mLyd+kVt1T+r/728fKyV6u6YE5XC+W7I35YVjGtjXJ7Yn/mL6me1
RX5Gvte47bwWz82rGFcu1j6VOv6DSi67btxbsgIxL8bljv2Ut1Xn1dfy0/I9
xm3jNXkuXtm4srGWqVTxn1Qy2V/GrZTlj/9vXK7Y/3gHXom34W34ObVZdire
HXxmK6/BH+eVjHmGD+Mv8P58FE8Zc6Pu5H/6zApZvpgXYx6PfYy35xV5a96a
n1WbZCfjHcBntvDqPCevaMzTfCh/nvfjI/ldMYcqKb/mM8tleWO+jMkpyxTX
k1fgrXgrfkZtlJ2IvdxnvubVeA5eId6N+BD+HO/LR/AUMbcqCb/qM3NwD/0p
fJl+nphTnoM/GPcIL89b8pb8tNogOx7PoM+vwqPxG/qb9ary7Lx8vPvwwbw5
78OH8+Qx/+oOfsXnZ+Pu+pP5Uv3cMdc8O88Y9xgvx1vwFvyUWi87Jvsm7ks8
Cr+uv0mvCs/Gy8W7DR/Em/HefBhPFtdFJfhln5+Fu+lP4m/q54prwLPxB+Ke
5GX5C/wFflKtkx2V7Yz7GI/ES/Q36n0V6x2uLM+Ky+Iy8oG8Ke/Fh/I38LrY
E+P6qf/4JeebibviiXpvxF4T/zP2hLhmOCu+X96GP8Of58/zWfgDfCLWKL2f
+I54LvAIvFhvg96Xsc7F+ivPgp/BpeUDeBPekw/hr+O1sZfGtVa3+R/ONwN3
wRP0Xo+9K+Yh9py4pjgLziBvzZ/mz/Hn+Ez8Pj4ec6R3hG+P5wkPx4v01ut9
EetcrKnyzPhpXErenzfmPfhgvgR/Fftx3AvqFv/d+abjzni83pLYG2MecI64
5jgzTi9vxZ/izXlzPgOvwcdijvQO823xHOJheKHeOr3PYx2NdVf+GH4Kl5T3
4414dz6IL8Zfxv4e94r6l//mfNPwq3ic3mLj3ol5wNnjHohz4vvkLfGTes14
Mz4dr8ZHY470DvGtzrcMD8UL9NbqfYb34fLyR/GTuIS8L3+Wd+MD+SL8Rbw/
xL2i/uEXnW8qfgWP1Vtk3KqYB5wt7oE4J04nb4Gf0GvKm/Jp+D38U8yR3kG+
xfn2Ol6IZ1s2BM/HXxnzaew3sT/IH8FP4OLyHfg07iNviLviAfKF+PN4X8FH
9P6OPTresRzPyafIOuExeKExb8f8xDtB3BvxHTht7C3y4/Esy8rgJriJfCp+
Fx+JOdQ7wL92/j2Ov8TaIBuM5+Evjfkk9rvYj+QP4zK4WOzV+BTuLW+Au+D+
8gX4M3wbH9a7GfMS70WOZ+WTZR3xa3iBMW/F/MU7Qdw78R04Texf8mPxzMtK
48a4sXwKfgcfjrnV2883xzu648+xlsgG4bn4C2M+jv019jz5Q7g0LhrvCvgk
7iWvjzvjfvL5+FN8Cx/SuxHz4vw7Hc/IJ8lexqPxfGNWxvzhzHFvxXfge2Nf
lB+NNUFWCjfCjeST8Sp8KOZWb1O898e6jgfGtZd/FOsBz+RYJN5bYr3i9WJ/
4//G+4jPTZTNw4/FfRLjnfce/j/z5Tzd
          
          "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJwl1HmYzWUYBuBhjH0fY+wMMwwzYy07RaVibJMoKlG2WQxJkkqkRKHN0mJp
L20oa9GqfaGoqLQKlVCppNL9Xv64z/N87++6zpnzfd+ctJHFeeNLJCQkFHuJ
zPDyrXycq8ilHd3Nj8tXWMAoStLU/Dv5BFPoyymcZv6PfJXbGU0izcy/lyu5
mn6cyunm/8rXuIMxlCLTfK98kqn0pz09zP+Tr3MnY0miufkP8imuYQAd6Gl+
Qm7lLsZRmhbm++TTTGMgHTkjNoM3xN3kU4Yss/3yGa4lj06cGfvHm/pCCihL
ttkB+SzXcR6dOcu8JG/piyikHDlmP8pVXM8gutDLPJG39cUUUZ6WZj/J1Uzn
fLpSgVae/SzXcAOD6UZFWnt2UD7HDIbEGVOJNp79Ip9nJhfEeVKZtp4dkmu5
kQvj7KhCVapRnWRqkEJNUqlFbepQl3rUp533PCzXMYuhcb40iLvk2RG5npsY
FmfJ2ealeEdfwngaxl0y+1Vu4GYuirPkHPMk3tXvoZhGcZfMfpMbmc3F9Der
yEf6ijhbzrUuzXv6vUyIs7Suyif6w6TFXbP+XW7ilthX6xrs1i9hgF6Jj/UH
4vvotdgTd4Leehne1y+V9bkv9lnW5At9YtwLvRqf6pfJRjwSf7+sQwFfW4+W
TYh/8sbWHeVROVa+IIfLehQyJ85appDP59aXyzSKGG49UFZmHDusR8qGPBh7
LWvzlT4qPo9eeh9Zlg/0EbIB98c5y1S+1K+Iu6tX5zP9UZrQyfoP+SJzY0/I
M6vCTv2huAvkWpfjQ30pk0ins9mfcjO3xufHXaCveXm26cu4kgy6mP0lt3Bb
fL84e5rS1bNj8iXmxb7HedGMTJrTgiyyyaElrWhNG7p5j7/ly8yP/Y39oZ95
Bbbry5nMYOtkdumPxf3R6/KNPkamlzj5u93W+n/dtZpc
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJwl1Xf4zWUYwOGDkBVSVvZIsjIzM7OyQrLKHsnKntk7e2XvLTKzEkr2FrJF
9t6zut+rP+7rfZ7P+R1/OOf7nrQN21RtHSUSiXwcNRJpa/goWiRywPwVcdih
9dUS8YO9MrO1RvaH5hF8wE1trJaBzfb6fKMVtR80tyAuO7V+2lsss1dhjtbY
/sg8kpzc0sZpGfnF3oB2WjH7IfPXxGOX1l97m+X2T5mrNbE/No8iF7e18dq7
bLE3pL1W3H7Y3JI32K0N0BLzo70q87Sm9ifm0eTmjjZBy8RWeyM6aCXsR8yt
iM8ebaCWhBX2aszXmtmfmseQh7vaRO09ttkb01EraT9qbk0C9mqDtKSstFdn
gdbc/sw8lrzc0zpRSv/D3oaE7NMGa8lYZf+MhdpX9ufmceTjvtaZj/Vj4bvB
m+zXhmjJWW2vwSKthf2FeTwf8kDrQmn9ePgukIgD2lDtHdbYP2ex9rX9pXkC
+XmodaWMfiJ89rzFQW2YloK19pos0VraX5knUoBHWjfK6n+Gz5q3OaR9p6Xk
J3stlmqt7P+Yv6cgj7XulNNPhs+WxBzWhmupWGevzQ9aa/u/5kkU4onWg/L6
qfBZkoQj2ggtNevtdVimtbFHmGwvzFOtJ59op+2dSMpRbTlt9ShM0YrwTPuW
CtoZe2eS8Yf2I9/oUZmqfcRzrRcVtbP2LiTnmLaCdno0pmlFeaH1ppJ2zt6V
dziuraS9/hrTtWK81PpQWTtv70YKTmir6KBHZ4ZWnFfhnqGKdsHenZT8qa2m
ox6DmVoJ/gn3CJ9qf9l7kIqT2prw3ddjMksryb/hnqCqdtHek9Sc0taGZ55q
XrukfUsaTms/heeX6l77W+tFWs5o68KzGJ6n8EyE73X4bobvV/iO8Jn3XPa3
vUnHWW19eK7015mtlSLCCL2GdsXch/Sc0zaE50iPxZyo/9/TURipf65dNfcl
A+e1kVoaNtjrsjE8R/bYzLWXJmr4ntsz86u5CaP8XU37NXM/MjLVno0d5gte
H2VOy0b7F8w052SPeVN43sxxmGef58xHGfN0Zw52maOFZ8T8Pr+Fu8dZgKbm
2c7c4d5lX3iunYXDPcVo/34t5/XwvDn7O+c684Z7Ndzr9mnO7OF3gJ3hXnIW
DPdk+I54/2hnuvC7wyavL3Dm50vzLGcu9ob7yFmIn8Md4IzLfH2+80PKmmc4
P2C3+TUmm7Ow3dyMMd5b237DPIBMXNTGaOnDv22vx+ZwT9jjscBejuiM1eto
N80DeY9L2i/hXtDfYKFWnhiM0+tqt8yDyMzf2pbwuxd+q8LvC98ziclM4Qvv
ue1vB/M+l7WtTOVLr93RhpCFK9o2plHPa3e1oWTlqvZruIP0+CzSPiFm+Pz1
+to98zCycU37LdxBegIWaxV4Pfzf6g20++bvyM51bXu4g/SELNEqEit8D/WG
2gPzcHJwQ/s93EH6myzVKhGbKfas/G5uzhxzHvablzqLsDrcHd7/H7j4LRM=

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJwl1mXYFWUXhuFNG5RiN6LS3Y0C0t2pYhcdttIgXQatNEh3l9i0dCtId6PA
d67j+7GOua57rZl3v3tmnmdnbNGqdsskiUSiTPJEYn6yROLPlInEvBSJxA5e
R6VWR+UL1EK1SC1WS9RStUwtVyvUSrVKrVbbXGe+6+x0fl2VRj2cKpG4IXtC
Def9HI+Z/Q9/oGo6p73sJ8e8Me9Yks9zXMw/cfyOb3BcE58J75JPc90Bsnq4
Hi6Mm+jtw2twWvkj+F/Zk+pHPFk+Qt4Dv437yw/j3/Bx177muEt208xC+Qj+
IW6Ja+EOeofwzzifvAh+BJeSb8Lz8RL5t/hT/H38r3gjXuv62x0Xynab+UE+
kNfH9XER3FRvP16L08kfxf/JnlLr8BT5SHlP/A4eID+Cf8cnXP+6427ZLTOL
5CP5R7gVro076v2Ff8H55UXxo7i0fDNegJfKh+PP8Dj5cbwJ/+j6OxwXyfaY
mS4fxBvgBrgobqZ3AP+I08sfwzdlGeP+4qnyUfJe+F08UP4P/gOfdP0bjntk
t80slo/iH+PWuA7upPc3/hUXkBfDj+Ey8i14IV4mH4E/x+PlJ/BmvM71d8Yz
JdtrZoZ8MG+IG+JiuLnePfxxfgs/rX7G0/RGy3vj9/Ag+SnX+xfvxQm1RG80
/8RcG1wXfyAvyIvzx/nzfCtehJfLR+Iv8IT4flxvVzw/8QzrzdQbwhvhRrg4
fknvXv4Ev40zqV/wD3pj5F/i9/Fg+el4x/A+nEQt1RvDPzXXFteLZ1teiJfg
T/AX+J94MV4hH4U744nxPbje7ng+4hnVm6U3lDfGjXEJ/LJeBv4kT/Bn+K94
Oh4r74Nb4iHyM653E+/HSdUyvbH8M3PtcP14duWFeUn+JC/Lt+EleKV8NO6C
J8X34Hp74v7HM6g3W29YrAm4CS6JX9G7jz/Fk/Bn+W94Rqwx8r64FR4qP+t6
t/ABnEwt1/uOf26uPW4Qz6a8CC/Fn+Ll+Ha8FK+Sj8Fd8eT4Hlxvb9x3fFBv
jt5X8c7jprgUbqF3P8/Ik/Ln+O94ZqwlsXbi1niY/Jzr3cYHcXK1Qu97/oW5
DrhhPIvyorw0z8jLxxqPl+HV8rG4G54S34Pr7Yv7HmucXrMo/dKyV2UP8Kd5
Mp6Zj+P9eRv+FT/v/AQ/hFOozvodeaN45ngxXoY/zV/ka/h3vDufGv+n8/fH
fY01Sq95lH4Z2WuyB3kmnpxn4eP5AN6Wf80vOD8J/wunVF30O/HG8Uzx4vx5
nolX4Gv597wHn8b/cP6BuG+xxui9FKX/vOx12UP8GZ6CZ+UT+EDejn/DLzo/
Kf8bp1JdY3/jTeKZ4SX4C/wZXjH2I77eOQfjXsQ+xF+OMvOC7A3Zw/xZnpJn
4xP5Jeckkx3md6husg9507j3vCQvy5/llWLf4Buccyj2z9gv+CtRZsrK3pQ9
wp/jqXh2Polfdk5y2RF+p+ou+4g3M9OZl+Ll+HO8cqxffKNz/oq9LtZ13iLK
TDnZW7JHeWZ+B8/BJ/Mrzkkh+4ffpXrE86rKyzKbqxJrD99k7u/Yh/hR/mrs
LyqLuTvlOeVT+FVzKWVH+d2qZ/L//855UZbFXNVYK/hmc4djX4g9mr8W677K
au4ueS75VH7NXCrZMZ5a9YrnSG2RHzH3U+yR/PVYl9V1+db4TaX+0f859iD5
G7EuqhvyO1zvuDyN6h3Phaogy2q+WqwVfJu5o/wXfpK/Gf+zmfKyt+M3Ac/G
7+a5+TQ+iLfn3/J/nX8nP4HTqpV4nN6X5j7GzXEXeVlekWfj1flOvBz/Jh+H
e+JzscfE53Dcwi86bnf9Y/jX2Gv4KfNzHb+WnXd8K75Txxf5Wcd3Yt1zXMcv
xHqkn90xNT/jmCfeQcdZ/Ae9wbgDHh73G6/H//mbd+GTsnSqj7lP+Et6XXk5
Xoln5zViTeE7nHM8/p/4nPztWMfUTfnd8bnl6VXfeObUTvkJ87/HHsXfiXVH
3Yr9WZ3U+yP2B9m7sSao2/LUrnU6fj+ofvG8qd3yU+bXx3rN34v3WeUwm0ae
Vz6dJ1Qa2ZnY31X/eB7UHuefNrch1lf+frynKqfZtPJ88hk8iUorOxv7rxoQ
91RVluUwVzO+W77X9c7wjbFe8pbxPqpc5tLJ88tn8qQqnexc7JdqYHyvqoos
p7lasvV8n+ud5Zti/eOt4j0wU0H2riwLz83T8wJ8Fk+m0svOx16nBvFP+ctm
uvHKvCrPxWvzDXy/v3OOb+aXeOt4n8xUlL0ny8rz8Ht4QT6bJ1f3yC7E3qUG
88/4K2a68yq8Gs/N6/CN/IC/c55v4Zd5m3jvzFSSvS/LxvPye3khPoenUPfK
LsYepYbwz3kLMz14VV49nm9el2/i43kvPj3eCX/zAt6Kr+i1VW/pV5a1lGXn
+XgGXpjP5UN4Rz4i9jqegV+KPUoN5V/wV/V78mq8Bs/L6/HNfALvzWfEXu/v
X8R/4qt67eId0a8iayXLwfPz+3gRPo8P5Z34yNjr+H38cuxXahjvzF/T78Wr
85o8H6/Pt/CJ/Es+M/Z6f/8S3oav6bWPd06/qqy1LCcvwO/nRfl8Pox/wEfF
Hsjv51diH1Or8Pj4TSLvgl/HveU1eC2enzfgu/CK+N7lk3AfPCv2fp/nMt6O
r+vN0/uGd4j3HVfDbfRy8YL8AV4s3gc8Gy+Qf4U/xKNj7+QP8Kux/6nVeEL8
ZpF3xW/EmiyvyWvzArwh341Xxn2RT8Z98Wz5YZ/vCt6Bb+jN1/uWd4z1BVfH
bfVy80L8QV483iM8By+Uf40/wmNiz+UP8mv4MbUGT4zfNPJu+E3cR16L1+EF
eSO+B6+K+yafgvvhOfIjPt9VvDP2IL0FesN5p1i/cA3cTi8PL8wf4iXi/cNz
8SL5N/hjPDb2cP4Qv44fV2vxpNjj5N1jn8F95bV5XV6IN+Z78eq4j/KpuD+e
Kz+Ft+JL8ZvDZ/0f1xxLyg==
         "]]}}}], AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"Renewal Rate\"", TraditionalForm], 
      FormBox["\"Probability Density\"", TraditionalForm]}, 
    AxesOrigin -> {0, 0}, Method -> {"AxesInFront" -> True}, PlotLabel -> 
    FormBox["\"Probability Density of Renewal Rates \[Mu] = .7\\n\"", 
      TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"Std. Dev. = 0.75\"", "\"Std. Dev. = 0.5\"", "\"Std. Dev. = 0.2\""}, 
    "LineLegend", DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
             ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.1421359549995791`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.603886483140298*^9, 3.603886579135324*^9, {3.603886621603841*^9, 
   3.603886751837995*^9}, {3.6038868639531307`*^9, 3.603886935623584*^9}, 
   3.603887007356717*^9, 3.6038870914701357`*^9, 3.603887134238826*^9, 
   3.603887263810368*^9, {3.603892142115645*^9, 3.603892167699367*^9}, 
   3.603892293122622*^9, 3.603927171931017*^9, 3.603927349377334*^9, 
   3.6042379135668697`*^9}]
}, Open  ]],

Cell[TextData[{
 "The figure above will give you a feel for how renewal rates (values along \
the x axis) are distributed (values along the y axis) compared with some \
other potential distributions. Knowing that probabilities can never be \
greater than 1, you might be surprised to see a peak that goes up to 2 on the \
y axis. There is no mistake here -- keep in mind these are probability ",
 StyleBox["density ",
  FontSlant->"Italic"],
 "curves, not raw probabilities. To get the raw probability for a range of \
renewal rates, you\[CloseCurlyQuote]d have to integrate over that range. "
}], "Text",
 CellChangeTimes->{{3.603887177143601*^9, 3.6038872163480186`*^9}, {
  3.6038872817104177`*^9, 3.603887437518673*^9}, {3.603887467916602*^9, 
  3.603887487300996*^9}, {3.6038940697869864`*^9, 3.603894082983266*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"CDF", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{".7", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", 
        RowBox[{"{", 
         RowBox[{".75", ",", ".5", ",", ".2"}], "}"}]}], "}"}]}], "]"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Renewal Rate\>\"", ",", " ", "\"\<Probability Density\>\""}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Std. Dev. = 0.75\>\"", ",", " ", "\"\<Std. Dev. = 0.5\>\"", ",", 
      " ", "\"\<Std. Dev. = 0.2\>\""}], "}"}]}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Cumulative Probabibility of Renewal Rates\\n\>\""}]}], 
  "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.603844192674716*^9, 3.6038442996601267`*^9}, {
  3.603844351932991*^9, 3.6038443559710703`*^9}, {3.603844397840981*^9, 
  3.603844412035993*^9}, {3.60384444579349*^9, 3.6038445348489313`*^9}, {
  3.603886292348095*^9, 3.603886479103003*^9}, {3.6038865560695143`*^9, 
  3.603886750630073*^9}, {3.603886862460147*^9, 3.6038869345817633`*^9}, {
  3.603887002705261*^9, 3.603887006015255*^9}, {3.6038870629375257`*^9, 
  3.60388713280931*^9}, {3.6038872249041967`*^9, 3.6038872627914343`*^9}, {
  3.603887494801715*^9, 3.603887496406268*^9}, {3.60388758547324*^9, 
  3.603887592263762*^9}, {3.6038921900220833`*^9, 3.60389219910789*^9}, {
  3.603892274522574*^9, 3.603892319216888*^9}, {3.603892653880849*^9, 
  3.603892655653714*^9}, {3.6038926862889423`*^9, 3.603892688718302*^9}, {
  3.603927220472227*^9, 3.6039272225109997`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
2bytI8iaepZS6GAw2N1aljl3ZgitNEuLKQuHAY9DNHEkoR8NiZrLU+lFgft3
rlL6xR60/H5Wz78lDhiItP4FGuvwsc/zKoxNwu4Le37nft6AofOvS8QVieAn
1X6dT2MTOacn+tuGc4OkSc7BiN0bSBsdf953XRg4NIZvDWWvIU3/0vdXkCQE
GXY/jrFeRccyRZLommTgTWpUjBfPCpJIuiWtKaUAJT9+KF/sWEKFZvYMh3+r
QK6GubCw1yIazHKX+7JLB3yWDTNUzy6gfSGPkyaOGsAhJv0q24E5ZGci+Nct
3gQ02rYzdQfMoiINO5Nbx55Bn9p0x/4rMyiPS+PjYoEdTC3GP8+nnEZzeUVi
E+yuW+fx0rFkpU2YY1YRdXMigsk+0p+YhE147/L76+MPRODRNGKObNmEhRNq
0ZYRRKDeHnudhbQJxIcPz3V9JYJV4xUd3ZVNWDtgZO0dT84naPfu4ZOv+/Uw
PK9jcwc2JUWfYXheh7ypqtmbnhie17lbNnYwrXzG8Lx+zo7qxB7DVAzP63rd
R4mRqQUYntc3tXQpc2L/YnheV6y4IfrHeBDD8/qRks7kjPsLGJ7XNXlFqU3z
qP7L66f5/CzQQXJeZx0iEhhl2Ml53cZNV6TlvBA5r1cFKWXXVl4k5/Vb8jeU
rSnlyXn9vcHNmqh3d8h5fXTpwwDNtwfkvJ67r1SsWdeMnNc7aTG14Qt25Lxe
8kgSs011I+f1NL7s91eafMh5vdTb87PL1WByXqdys/56jjaCnNe/0TOK9U7F
kfN6rPB8c0JZGjmvNxtXD/3M+0HO61O8qaeICJHzepuscbiTfhE5r9N9YHPm
ZCsn53X2YlXuzpu1/+V1S2v17pS/5LzO0Is1Vsc0k/P6wJW1kL537eS87qPi
eTzE6b+8Hq6X4jU28F9eXzdls2lr6Sfn9bryymXKjkFyXve0vCJ7LHiYnNcZ
aymVdrOPkvN6H91sW9CnMXJen1IZkBIpGyfn9ar8H1QiLRPkvB5Ga3+TM3mS
nNeDOjRFauWI5Lz+sNHwiHANkZzXo1xUJkp4SOS8Xs0kpLr+mETO63lVSg+4
wkjkvK7gYd/H+5tEzuuhcl4lta0kcl7n74jVbQkzxvC8rl+5s9y10Akj53WV
tLzWcT8Mz+uZX0tNZwkxGJ7Xw+jsFNxbszA8r2t2nRV1PFuB4Xmd39WM89XJ
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
ccZUlxfDyxgM58eyCRe29fFmYzg/fhUondrgXIHh/Ljve6d4lU0nhvNj27nT
SZKmJAznx4+O7cK+h25iOD9+PBZC3ytIR+bHm1pG27/vZybzY7YC+pI+F16g
jLxnxGVGQgdW7ztsY5CA1Ia9pSZNE2ghLF3qisoVaCBQvRMUG0Nm68c4wxxu
wbcvz/xVXIbRZEnfQd1WXdjYOV5lNzGABmFh3hIZQ35MiukppT7k9igy1ua+
FdB7npwqNuhGjoUKm8/jncFX1KHu0qk2xDq1LYhD3gs8aysFXqY3oIEIpua6
v/4QOyc7EbCtBt3/XREwZfUFmE9LMB98XYTSFJgLFRqj4XvJ0bxA50VgDQuS
O0NJhO0P7X8Z1y7BbOfTyKv+RKC+5idrdmoFGHfFBpVt2/re3tm1tqK3Co4N
n8ydFUng5qX5Vid5DSooof27BwkwJa+kudV18JFhWU5LJ5F5+uvXqwbnt85z
58+bhn7xm4jmYoiI/hsDbCAxyKpCbwMVDZPuNDDYYrd0FGiu71lHxykZGdcf
+WDpBE9T0z+ryEHvwo8YxwhM35Bm4ojzCvo4G3Nk24tM7JRY9MROvmUUUuVE
IfO3BKv/eZTuV98iMjM9LR+MtWC+PLc7r7ovIGX1XqkTp8awL4xNcjEi8yiu
rIn/TfEK9inzbEflxCwaPTcUuyi6G2KXvk6f+zCDHh0VLR37cRQiDaPbFW5P
o809lkKPfnHCFPtQ6yDtFBr60K8v5CQKgdSvcl5aT6LNWA7RDetLcFZ8lrJ6
YAzx0Qld/TByE8bEx2Py+UbQbQmNGT1HLYge/M7zh2YTlVG03BG8a4b5CnRk
Ps9YR+eHH9TuVnbDFm87fXE1XEM/AntTuIuDMAc/kUcdnKtIgvPv2FutBCxr
CfQ2/i4j5u1BSuKDedhjifKsF15L6OybHq5S71rs63K5WpzwIqLc9rOCZ6AX
w/0FxgKh+pUGEtlfMNeKNgzdOs9xf2E6sfBj/9b3Oe4v+P7Uv+bSSua1iOJ/
f7i/gM+4v4DPuL+Az7i/gM+4v4DPuL+Az7i/gM+4v4DPuL+Az7i/gM+4v4DP
uL+Az7i/gM+4vzDBLU+6nzQiifsLgVaXZAyrRQi4v/B1G63a8UJbAu4vXNbI
/cxYm03A/YUn1HOPL9ssE3B/YYfAJ+/ETkEM9xdaLOsDVRoeYbi/cHtH3r1G
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
     "], {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1:eJwt0/O3FwYABfBvbhnLfFu2bSzrhWW8bNt2Wy2793JttWoLW7Zt23adzunT
Of3wOff+AfcGhXQO7hQ+EAiE48v3DI0cCISRS//MWT6xljN8ZAJrOM0H2jKe
vzjFe8rRkEEsYi+PyMkvNGAgC9nDQ3KQnWxkJQuZyURGMpCedKQlDT/zE0Gk
JhUpSUFykpGUJCQmEQlJwI+UpT4DWMBuHhCfMtSjP/PZxX3iUZq69GMeO7lH
XErxK32Zyw7uEoeS1KEPc9jOHWJTgtr0ZjbbuE0silOLXsxiK7eISRvG8Scn
eUcxatKTmfzPTWLQmrGs5gRvKUowPZjBf9wgOq0YwyqO84Yi1KA709nCdaLR
ktGs5BivKUx1ujGNzVzjB1owihUc5RWFqEZXprKJq0SlOSNZzhFeUpCqdOEP
NnKFKIQwgmUc5gUFqEJnpvAvlzH9QDOGs5RDPCc/lenEZP7hEpFoyjCWcJBn
5KMSHfmdDVwkIk0YymIO8JS8VKQDv7GeC0SgMUMIYz9PyEMF2jOJdZzn258b
MZhQ9vGY3JSnHRP5m3N8BZedf44=
          "]]]}, {}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1:eJwl1WWQVXUAh+G7CyzdIK0iId3dXQoIAhIm0t2odCjdLd3S0imlgHR3d3eD
gM8ZPjxzf+/ZmTOz/3PPbur6rau3Cg+FQmHEMf7zOS0iFJpOVhejRgqF5rke
4fNzn38QxX7gZ5/Zc4msx+gT5NbDuEN13Zl1JNZt2UcWPZrj5NJDuU013Ym1
JNJt2EtmPYpj5NRDuMUXuiNrSKhbs4dMeiRHyaEHc5OqugOrSaCDX3w3GfUI
jpBdD+IGVXR7VhFft2QXGfRwDpNND+Q6lXU7VhJPt2Ann+phHCKrHsA1Ptdt
WUFc3Zx/SR+cLW1YHvb+uTRjB+l0JVqzjNiuNWU7aXVFWrGUWK41YRtp9Cek
5mM+4kNSkZIUJCcZSUlCBVryJzHdozH/8IEuTwuWEMO1RvxNYl2O5iwmumsN
2UoiXZZmLCKaaw3YQkI9lINk0f25ShndlIXBd1H/yGYS6CEcILPuxxVK6yYs
IELXZxPx9WD2k0n/xmVK6cbMJ4r+gY3E04PYR0b9K5coqRsxj8j6e/4irh7I
XjLovlykhG7IH0TS37GBOHoAe/hU9+ECxXUD5hKuv2U9sXV/dpNe9+Y8xfSP
zCFMf8M6Yul+7CKd7sU5iuoblLanBu97cEZ6NiH7a9YSU//GTtLqnpyliL5O
KXsKr4Mz07N4Rz29hhj2r/xLGt2DMxTW1yhpT+ZVcIZ6Jm+pq1cT3e7LjuB7
q7tzmkL6KiXsSbwMzlTP4A119Cqi2X3YHnzndTdOUVBfobg9kRfBGevp/Edt
vZKodm+2Be+L7spJCujLFLN/53lw5noar/lKryDC7sU/wbumu3CC/PoSRe0J
PAvOXE/lFbX0cqLYPfk7eE/1Lxwnn75IEXs8T6mnp/CSmnoZke0ebCWV/plj
5NUXKGyP4wl19WReUEMvJZJ9n0r2nKD9je+ut5BS/8RR8ujzFLLH8pg6ehLP
+VL/Sbh9j4r27KDdr5veTArdmSPk1ucoaI/hEbX1RJ5RXS8hzL5LBXtW0O7X
VW8iue7EYXLpsxSwR/OQr/TvPKWaXhz+/h/gHcrbM4N2vy56I8l0Rw6RU58h
vz2KB9TSE3jCF3oR79ziti5nzwg6eIb6L5LaHThIDn2afPZI7lNTj+cxVfVC
3rrfLV3Wnh508Ez1BpLY7TlAdn2KvPYI7lFDj+MRVfQC3rjfTV3GnhZ08Ez1
ej6w27GfbPokeezh3OVLPZaHVNbz+R87eQlM
          "]]]}, {}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1:eJwl1mW4VdUahuFFSqMo3d0pKd3d3d3dqaQ0GHQIiK2cBGxRMCg7aOyiO0Ti
3N91frzXeJ53zL3m3nOOMdbO3290u1FJE4lEEpmdLJHYJJtTJhLVjD2kqnSX
KpIpeSKx0XhCusmH/KZxpPFR40bje8b1KRKJh/FVqcy/MT6he8C40zjf2NBY
2n02mP8vH8078eN8K34ct9U/gG9JV/0ePhMPMneDv4aX4xH6UjgznqHfwLvx
uvxdvg4/iivor8hJXkn/NV6OJ5i7H+/Aq/HjuAEuhde77j98FO/Ij/E2/H7+
l3Thu/ljeKD563w4L8kf4tPjefCuvA5/h5fnl+WEriL/Ci/D481nxPOkPi/J
15n/Nx/JO/CjvDXPyG9KZ/5BPH88wPw1PoyX4A/yafH38y68Nn+bl+OX5Hi8
J/4lXorHmc+A50o9XoKvNf8vPoK350d4K56B34h3xt/nM3B/81f5UF6cZ+JT
+Vremdfib/Gy/KIc01XgX+AleKz59HiO1OXF+Rrz/+TDeTt+mLfk6fn1eCd8
F5+O+5m/wofwYrHe+BS+hnfiNfmbvAy/IEd15Xk6PFvq8GKuWa37Bx/G2/JD
vAVPx6/Fe+CXZbCuKL/fNZP5at6R1+Bv8NL8vBzRleNp8SypzYu6ZpVuGx/K
2/DveHOell+N580vySBdEZ7RNZP4Kt6BV+ev81L8nBzWleVpYp9ILV7ENStj
r/AhvDX/ljfjafiVeK78ogzUFeYZXDOR75SSurNySF+Gp461LjV5YdetiP0t
TXWpdZfjmfELMkBXiKd33QS+Q0rozsh3sf/507EPpYkule5SPAt+XvrrCvJ0
fn483y7Fdafl29if/KnYP9JYd5/uYvyNfFycK1JMf0q+if3En4z1Lo10KXUX
pBUfG/tciur/lK9j/cf94jNizcmY2ItSxPwf8lW8R/5ErGFpqEuhOy8t+OjY
O1JY/7t8Ge+DL5fPpYEuue6cNOfnpJ+uAE/rbx4Va18K6X6TL+KZ81Sx36UG
L+S6ZbrPpL4ume6sNONnpa8uP0/jupGxrqWg7lf5PH6e3xf7V6rzgq5bqvtU
6umS6s5IU35G+ujy8dRx7vKVvD1/hG/jBfgv8ll8Fk8Ze1Me4QVcs0T3Kh8c
z50f5HV5En5amvDT0luXl6dyzXC+grfj1fhrPD//WT6Nz+Up8DSpxvO7ZrHu
FT6It+QHeB2e4KekMT8lvXR5+H2uGRbrkbflVfmrPB//SQ7G5/LkeKpU5flc
s0j3Mh8Y75zv57X5vVhHukb8T+nJc/OUrhka65a34VX4Kzwv/1EOxOfG+sCL
8RjzyfAUqcLz8oXmX+IDYt3wfbwWvxvrUteQvxfPA/c1/wfvwXPxFHxI7APe
mlfmL/M8/AfZH/eI9YQX4dHmk+LJUpnn4QvMv8j7xzrje3lNfifWua4Bfzee
E+5j/nfenefkyfng2DO8VXwP85fiOwLPwLn138u+uFesQ7wQjzKXBE+SSjw3
n2/+Bd4v1if/hNfgt2O/6Orzd+LZ4d7mf4u1h5fhbvocOBkeFHuSt4zvY/5i
fGfg6TiX/qTsjXvqD+IFeKS5BN6OV8V5iSviXPH/g+ue531jPfOP+bN4Hq6u
/zv2H6+nfzueLe5l7tdYs3gp7qrPjpPigfplvAV/mL8Q3zV4Gs6pPyGfxL31
B/B8PMLcvTgD8co4f/UP45x4nv453if2Af+Ib8Fz8SP6W7GHeV39W/HMcU9z
v8Rax0twF302nAQP0C/lzXkF/nx8R+GpOIf+uHwc99bvx4/j4ebuxpmLV8T5
rq+Ac+C5+q28d+wf/iHfjOfE/6X6v2Lv8zr6N/FE3MPcz7Ev8GLcWZ8VJ3B/
/RLejJfnz8W5hafg7Ppj8lHcW78Pz8PDzN2J8x4/jcfpy+PseE68T94r9hrf
wzfh2biq/macGby2/g08AXc391PsG7wId9Jnwfekn34xb4rLmdsa5x2ejLPp
j8qHcW/9XjwXDzV3O75f8FN4rL4czpby///Hb+E9Yy/y3fwZPAtX0d+Is4bX
0r+Ox+Nu5n6M/YQX4o76zPhunCH6RbwJLmvu2Tgn8SScVX9E9sS99buMm2Iv
6ubgIfjv+B7DT+Ix+rI4K54V6wuvx5v1PWLP4g/0G/FMXFl/Pc4mXjP2s3Gj
fqduHO6Kf4j9hhfgDvqH8J04e+L5G9fGmalvjMvgLXH+4ok4i/6w7I7fKc5N
4zOxZ3Wz8WB8K7438RN4tL4MzoJnxvrD6/AmfffY0/h9/Qb8GK6kvxZnGq8R
+924Qb9DNxZ3wd/HfsTzcXv9g/h2nFnxfoxr4szVN8Kb4+w2ZuaHYg3FWcs/
wrOMf/FtcV7y0vE7xLvHu4wVjdWN241jzHX2uSd5O56J/x3nEP8f1068ag==

          "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        LineBox[{1, 214, 177, 141, 106, 72, 51, 235, 198, 162, 127, 93, 2, 
         215, 178, 142, 107, 73, 52, 236, 199, 163, 128, 94, 3, 216, 179, 143,
          108, 74, 53, 237, 200, 164, 129, 95, 4, 217, 180, 144, 109, 75, 54, 
         238, 201, 165, 130, 96, 5, 218, 181, 145, 110, 76, 55, 239, 202, 166,
          131, 97, 6, 219, 182, 146, 111, 77, 56, 240, 203, 167, 132, 98, 7, 
         220, 183, 147, 112, 78, 57, 241, 204, 168, 133, 99, 8, 221, 184, 148,
          113, 79, 58, 242, 205, 169, 134, 100, 9, 222, 185, 149, 114, 80, 59,
          243, 206, 170, 135, 101, 10, 223, 186, 150, 115, 81, 60, 244, 207, 
         171, 136, 102, 11, 224, 187, 151, 116, 82, 61, 245, 208, 172, 137, 
         103, 12, 225, 188, 152, 117, 83, 62, 246, 209, 173, 138, 104, 13, 
         226, 189, 153, 118, 84, 63, 14, 227, 190, 154, 119, 85, 64, 15, 228, 
         191, 155, 120, 86, 65, 16, 229, 192, 156, 121, 87, 66, 17, 230, 193, 
         157, 122, 88, 67, 18, 231, 194, 158, 123, 89, 68, 19, 232, 195, 159, 
         124, 90, 69, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
         34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 233, 196,
          160, 125, 91, 70, 49, 234, 197, 161, 126, 92, 71, 247, 210, 174, 
         139, 105, 248, 211, 175, 140, 249, 212, 176, 250, 213, 251, 50}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJwl1WMQnFcAhtGNbdtm09i21TRGm7Sxbdu2jQZNG6ON07ixbZs9O/1x5nuf
uzP3x84iRdN21duGCAQCkUMGAp89V3pW4oXDqdTgiR5PTi7orBy3OxKXbbo7
X+z5lORBsN23yq7MSz2NmjzVE8jFRZ2NE3Yn4rFd9+CrvYBSPAy2+1bbVXil
p1OLZ3oiubmks3PS7kx8duiefLMXUppHwXbfGrsqr/UMavNcTyIPl/V3nLK7
kICdulfwTQsVCCzSZXgcbNba1Xhjz+QHXujJ5OWKzsFpuysJ2aV7E8J9i3VZ
ngSbdXZ13tqzqMNLPYV8XNXfc8buRiJ26z6EdN8SXY6nweY3uwbv7Nn8yCs9
lfxc0zn51+5OYvbovoRy31JdnmfBZr1dk/f2HOryWk+jANd1Ls7aPUjCXt2P
0GzQtfhgz6Ueb/R0CnJD5+ac3ZOk/KX7E4aNujYf7XnU562eQSFu6jyct3uR
jL/1AMKySf/AJ3s+DXinZ1KYWzovF+zeJGefHkg4ftd1gt8dewENea9nUYTb
Oh8X7T6kYL8eRHg26x/5Yi+kER/0bIpyR+fnkt2XlBzQg4nAH7ouX+1FNOaj
nkMx7uoCXLb7kYqDeggR+VPX45u9mCZ80nMpzj1dkCt2f1JzSA8lElt0fQIs
0U35bM+jBPd1Ia7aA0jDYT2MyGzVDQjBUt2MwlzTA0nLET2cKGzTDQnJMv0T
RbiuB5GOo3oEUdmuGxGK5fpninJDDyY9/+iRRGOHbkxoVujmFOOmHkIGjulR
RGenbkIYVuoWFOeWHkpGjuvRxGCXbkpYVulfKMFtPYxMnNBjiMlu3YxwrNa/
UpI7ejiZOanHEos9+ifCs0a3pBSx2evsZyKwVreiNHH4y1lzIrJOt6YMcfnb
WQsi8ZtuQ1niEZ8EJCQRiUlCUpKRnBSkJBX73PFLyP//b9br4J9POVKz39mv
RGGDbkd50nDAWUuislG3pwJpOeisFdHYpDtQkbt6BFk4pceRjkO6NdH5XXek
Evf0SLJyWo8nPYd1G2KwWXeiMvf1KLJxRk8gA0d0W2Lyh+5MFR7o0WTnXz2R
jBzV7YjFn7oLVXmox/AdZ/UkMvGPbk9stuiuVOORHksOzunJZOaY7kActupu
VOexHsf3nNdTCO03fpmuwHMdRi+3KwY/s/aK4GfRM4vX/gOaSwf7
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJwl1mW4FWUbhuFFIy0dAgJSohKSAtIqrXRKd3enIijdja20AgaISimllKCU
2AIqISJhf+dzfD/u472u+3n32jOzZmbvAp0HNOmfJJFILE6WSKSWHSkSiRPJ
E4ksspK3l4fkDkkjaSWdpJcMklEyyZ2SWbJIVskmO33W5z4nq6ziT8pfuszS
RHeOt0yZSAzkW3hlXtb6oXWldbz1frP+eL31Dz7R+hF/35qdf4GzyRz+PH/E
OpUv9rnv4A66v61ZpKn+Gf3L+Ct9KzwIv6Vfjt/DVfRfWW/oysUx6JfzHfqa
uC1epV+Kt+IJ+uz4ATxAPxtvwH/qe+BJ+OO4lvgDnEO/y3pSl12G6efyF/QP
4EfxNP0S/C7uqP/HmlWa6afqX8Ff61vjwfht/Qq8HVfVf229qSsvE/Qr+E59
LdwurpN+Gd6GJ+pz4JJ4YFxHvBH/pe+JJ+O98f3hD3FO/W7rKV0OGa6fx1/U
l8SP4Wf1nfi/OJs059PMXsXf6NvgIfgd/cP8G3wLV5CJZiv5Ln1t3D6ujX4S
z8lL8UF8Ln4D/63vhZ/C+/S5+B58GueUEWbz+Uv6Urgufk7fmf8X95C04M+a
vYa/1bfFQ/G7+mr8W3wbV4zjMFvFd+vr4Cfj3PWTeS5emg/m8/Cb+B99b/w0
3q/PzT/CZ+JYZaTZAv6yvjSuh6fru/AEz8Fb8ufw6/g7fTs8DG/VV+ffxbOB
K8VxmD3P98SzgDvEueuf4rl5GT6Ez8eb8L/6PngKPqDPwz/GZ+NYZZTZQv6K
vgyuj2fou/IkPCdvxafj1fj7eGfg4Xibvgb/Pp4H/FAch9kL8QzrH8Ud49z1
T/M8/EE+lC/Am/F/+r74GXxQfxffi7+MY5XRZov4q/oHcQM8U9+NJ+W5eGs+
A6/BP8R7CI/A7+lr8h/ifo/3TxyH2YvxzOofw53i3PVT+F28LB/GF+ItOIH7
4an4E5zXvn34XByrjDFbzF+LdxtuiGfpu/NkPDdvw2fitfhHfQc8Em/X1+I/
xn2Oq8heXte8c5xzvM94Xl6OD+dJpD+fxj/F+cz3x/sujk3Gmi3hr+vL4UZ4
tr4HT87z8Lb8PO/IR/H3eW1+Pu5nXFX28XrmXeLc4r3E8/HyfARPKgP4s/wQ
zm9+IN5bcUyympc3b6ybw3vyFPwu3o5f4J34aP4Br8MvxP0a7wzZz+ubd41z
ifcLz88r8JE8mQzkz/HD+G7zg/H+iWORNbyC+eO6ubwXT8nz8vb8Yjw/cjHu
wXgPyAHewJ5uutXxzuB384p8FE8uBXSfxHskfqes5RXteUI3j/fmqXg+/iT/
KZ4D+SnuJamuO8gb2tOdr4lnnxfglfhonkIK6j6N90H8TlnHK9nTRDef94m/
5zw/78B/jvtZfuZJpIbuE97Inh58bTzDvCB/iI/hKaWQ7lA81/E7ZX38P2BP
U90C3jf+N+B3x98q/kvcn/ILTyo1dZ/yGVLIvsq6sbpUco/ucDyT8XtkA+8X
/2fYV0DfSXcp7jO5xJNJLd0hPlPusa+KbpwutRTWHYlnKD5bNvL+kta+gvrO
ustx38hlnlxq6w7zWVJEjurOx2fJG3xAfOdyRZ9C6uiP8NlSVI7pLuiKyJt8
YHx3UkyKy73ymT0XzYvKJj4orrtc1aeUR/RH+RwpIcd1P+mKyWY+WBrLr/pU
8qj+GJ8r98kJ3c+64rKFD5F0zrmQvovuCn9crvHU8pjuMz5P7pfPdb/o7pW3
+FBJ7+fv0XfVXeVPyG/8DqmrO87nS2H7qurG6+6QB3Rf8Eu4hLzNh0kG+wrr
u+l+5U3kOk8j9XQn4hzt6cnXxfs/vg/+MJ/A00hJ3Ul+Gd8n7/DK9jTTLeTD
eUZehHfn13hT+Z2nlfq6z+Na2NOLr4/3eHyPvBqfyNNKKd0pfgXfL+/yKvY0
1y3iI3gmXpT34L/xZnKDp5MGui/imtnTm2/gi+Ke4NX5JJ5OSutO86tx3WQr
r2pPC91iPpLfyYvxnvw678zH8A95c34Tp5eG/GRcV/M+fGPy//9PX5zX4JN5
ehnEp/MjuIz5GfxrXFvZxh82b6lbwkfxzLw478V/5134WL6Dt+C3cAZpxE/F
9Tbvy9/gS+L+5zX5UzyDDOYz+FH8oPlZfC2uubzHq5m30i3lo3kWfi/vzW/w
rnwc38lb8ts4ozTmp+N7MO/H3+RL43nitfjTPKMM4TP5MVzW/Ev8W3wXsp1X
N2+tW8bH8Ky8BO/Db/JufDzfxVvxP3AmeZyf4c3N+/NNfFk8n7w2nxL3AH4r
9uOheBb+DJez7xy+Ht+JjDNbGn939TVwG7xcP5Zn4/fxvnwWXodv6bvjCXi3
vjX/E98pT/ApZi/hs/oWeADerF8ezz+vw5+JZzV+xjrbetxaPp6d+J7iXHQf
8BVxfPGett627rG2iesYs7hfeAVrW6ko7aSS/A80vsF0
         "]]}}}], AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"Renewal Rate\"", TraditionalForm], 
      FormBox["\"Probability Density\"", TraditionalForm]}, 
    AxesOrigin -> {0, 0}, GridLines -> Automatic, 
    Method -> {"AxesInFront" -> True}, PlotLabel -> 
    FormBox["\"Cumulative Probabibility of Renewal Rates\\n\"", 
      TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"Std. Dev. = 0.75\"", "\"Std. Dev. = 0.5\"", "\"Std. Dev. = 0.2\""}, 
    "LineLegend", DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
             ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.1421359549995791`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.603887497560938*^9, 3.603887593264484*^9, 
  3.603892321002173*^9, 3.603892656987854*^9, 3.6038926901676407`*^9, 
  3.6039272252829857`*^9, 3.6042379136354637`*^9}]
}, Open  ]],

Cell["\<\
The figure above shows the cumulative probabilities by progressively summing \
over the probabilities of all possible values. Notice that they all max out \
on the y axis at 1.

Let\[CloseCurlyQuote]s continue with our assumptions. \
\>", "Text",
 CellChangeTimes->{{3.603887512396592*^9, 3.603887573860536*^9}, {
  3.603887658673452*^9, 3.6038877438209743`*^9}, {3.6038877842617617`*^9, 
  3.6038877956040373`*^9}, {3.603891988148562*^9, 3.6038920030676727`*^9}}],

Cell["\<\
b) Acquisition rates are normally distributed with a mean of 20% and a \
standard deviation of 5% (that\[CloseCurlyQuote]s aggressive growth and you\
\[CloseCurlyQuote]ll need a good sales team and a good sales process engine \
to make this happen). This should look familiar to the sharply-peaked curve \
in the probability density figure above.\
\>", "Text",
 CellChangeTimes->{{3.603892044731493*^9, 3.603892067686151*^9}, {
  3.603892375093861*^9, 3.603892442288003*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{".25", ",", "0.05"}], "]"}], ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Acquisition Rate\>\"", ",", " ", "\"\<Probability Density\>\""}], 
     "}"}]}], ",", "  ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Probability Density of Acquisition Rates \[Mu] = .25, \[Sigma] = \
0.05\\n\>\""}]}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.603844192674716*^9, 3.6038442996601267`*^9}, {
   3.603844351932991*^9, 3.6038443559710703`*^9}, {3.603844397840981*^9, 
   3.603844412035993*^9}, {3.60384444579349*^9, 3.6038445348489313`*^9}, {
   3.603886292348095*^9, 3.603886479103003*^9}, {3.6038865560695143`*^9, 
   3.603886750630073*^9}, {3.603886862460147*^9, 3.6038869345817633`*^9}, {
   3.603887002705261*^9, 3.603887006015255*^9}, {3.6038870629375257`*^9, 
   3.60388713280931*^9}, {3.6038872249041967`*^9, 3.6038872627914343`*^9}, {
   3.6038920899389257`*^9, 3.603892165856331*^9}, {3.603892284770708*^9, 
   3.603892290993951*^9}, {3.603892461062687*^9, 3.6038924933231993`*^9}, {
   3.603892531402615*^9, 3.6038926110396547`*^9}, {3.603892935812046*^9, 
   3.603892943844129*^9}, {3.6038941190287523`*^9, 3.6038941278576107`*^9}, 
   3.603927197663927*^9, {3.603927265486507*^9, 3.603927293739592*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
w/D6q5P3YwjQ+a699T1LExLo2612FeXALLQPTgXa1qO9Kx1TcP0+xtK13/2j
pgapUdhtKncUYUph6m9Xr5aj7N6v7rnUO1gaf3l0yGohsnIlDnNfksNtvJ91
6JZmoZWtY4GVvU74uc9XO/p+JaIj3/O4ts/m4JcrNI07al4gPOmyb4HuDM61
JWBdy9gLr6SDRx58JhDJ2Pbcm1qn4dyGaXDXMgXc9Y1h1c1sRjEqsmZfLTYU
0uIfPTlEaESvOm7fOWkBmFV4vGCYUx1iehy1dkYwANNs786vr6tCFJMJrce8
u7EV6aDUSKsmFFOpWtBow4wptPr8wZvq0dHA8pnILkts7NKRsrYbtejxbzLT
cP8s7Elv14ErZBVIl6k3UeryD8ylz/Yo9VgPuLzxv829RCAKmDKYu1A1I5kH
PiVSkxTYeqGHQopDA2J+G6dOFNTB9KW5nruk/KtH5sxYcudobOFK9+hBi0qU
sxkbbaA3gw28jXsiIN0D71/KOIvkEIgHH5H4pKi1oBLBElxvcUYhm+7g18qO
RhQuoDf7+aAg5j/uXzt2oh6Jnmm+0Bnkihnrri+ysNagAx52ohLm1Ritbpdg
6LsyREzUeE3NfAAPpEjoccF7ge6+2nr8RwIRWbsO1P2chlfn/BeOFpLA/R1O
/53d/71vIPSZVQiO/i9PCHikri5lNaJIY8+vHK4imF8pXxvtVh06FO5SQq37
BLst7OlZMVmN1jwXRs3U6rAGlRVNyZtlyObTVaeZanK8kOdl5SWyQmSSUTVe
PnERD85MbsB33qMyKpH+vFl3fMztREKcRDwKqnGWM/xZgq9s/JJ90OSD7M/O
vtDX+ownnmXsz+PwhQ6D75yh9xlAuPLaD9H3CTB8g4VCs/w8uHVd8P357T0k
3qwY12W8A2vPcm832xZCF/FG2dOFQAg2P/xjp70MBN+F2XfezAG/FQVY7KwG
lVvGi0dVWoFBePaEI2s9hH5l5FKmmQWZJ0kO9e8aoS76g6ZZ5wacoPperX+m
BW5gA+zh98mIl1/eGnH+2AYjzHFHmMnpiAKWbYOr+h9gztXN2ucJM9FURDfl
x7FuWG4ZadJwYyOutwpbJav3Ar3ZVdaqZgKR4eTurl1QH0zPZNJjN1iJZvOj
G56fP8IVvfMdfFyMRO/RvElccAAe5BLU+rSPEG/vnDv2LGAQfL72Gt0P3QOL
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
Lg6S//63/f/54v8AYXVhCg==
   "], {{{}, 
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
6nM=
        "]]]}, {}, {}}, {{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
U5wGz8Ez8Vn8Nf468f//Ny/qZ/4DSrvwfQ==
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"Acquisition Rate\"", TraditionalForm], 
    FormBox["\"Probability Density\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{"AxesInFront" -> True},
  PlotLabel->FormBox[
   "\"Probability Density of Acquisition Rates \[Mu] = .25, \[Sigma] = \
0.05\\n\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6038925659156313`*^9, 3.6038926121620417`*^9, {3.603892937696722*^9, 
   3.603892945162798*^9}, 3.60389413136968*^9, 3.603927201304632*^9, 
   3.6039273020556917`*^9, 3.6042379137000093`*^9}]
}, Open  ]],

Cell["\<\
c) The cost of renewal ranges from $500 to $5,000 and is distributed as a \
Gamma distribution of a particular kind with a peak of $1,000. This is an \
appropriate distribution to choose because it is right-skewed -- most \
subscribers can be renewed around a cost of $1,000 (and a few at less than \
that), but it\[CloseCurlyQuote]s much more expensive to renew a handful of \
subscribers. The illustration below shows how the Gamma distribution behaves \
so you can get a feel for it.\
\>", "Text",
 CellChangeTimes->{{3.603892965100985*^9, 3.6038930372129717`*^9}, {
  3.6038937157252703`*^9, 3.603893763001943*^9}, {3.603894162439775*^9, 
  3.603894169981559*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"GammaDistribution", "[", 
         RowBox[{"\[Alpha]", ",", " ", "1000"}], "]"}], ",", " ", "x"}], 
       "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", " ", 
        RowBox[{"{", 
         RowBox[{"2", ",", " ", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}], 
       "}"}]}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "10000"}], "}"}], ",", " ", 
   RowBox[{"Filling", " ", "->", " ", "Axis"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Cost of Renewal\>\"", ",", " ", "\"\<Probability Density\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Alpha] = 2\>\"", ",", " ", "\"\<\[Alpha] = 3\>\"", ",", " ", 
      "\"\<\[Alpha] = 4\>\"", ",", " ", "\"\<\[Alpha] = 5\>\"", ",", " ", 
      "\"\<\[Alpha] = 6\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Gamma Distribution for Cost of Renewal\\n\>\""}]}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.603844192674716*^9, 3.6038442996601267`*^9}, {
  3.603844351932991*^9, 3.6038443559710703`*^9}, {3.603844397840981*^9, 
  3.603844412035993*^9}, {3.60384444579349*^9, 3.6038445348489313`*^9}, {
  3.60389305931044*^9, 3.603893071776127*^9}, {3.603893803091585*^9, 
  3.603893824561042*^9}, {3.6038938612206078`*^9, 3.603893952103916*^9}, {
  3.603921481914418*^9, 3.603921509535829*^9}, {3.60392278725562*^9, 
  3.6039229280552797`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
fa0QbNgJlUJikhV4SjDx1CwHtu5O6PVCg8O2KB8zMmeynRXpglRG8i63DuVg
xuVEglupCdSzidI1dOIGj3/aSkbGO0Nq+N2Mjv4o2OmL5xAq8YUur3Mo5n2P
A5Xazf0KfUEQ2JvZsdHLg0PmC0IishEw26CY4gSDAlhl4eCI7I6BCgFs+ruz
8kDh1vLFIooE+LBbwqB8XQ60zubcHTDpgqFZzrI9N7Ow11FOHCbKjlCpx6Z4
1Vkc3A4rPOV/whua2zjr3gw9BhojmQsz1R7AEu47Q9sJcsDzEcfVkMgwSOSI
qNdbkAceKhonru5GQzkOzPAhlQJ4NTLtNHDpISxnGnV8dVseNIl3LXV/ioQt
f+R4/fD52P7rzEpnSCzMCOc/Jd4iDxaLbruece+CHBytQ50nM7FDdwbIzoSI
QtPvzddZbb5jwyeW17tkbOBPUcfuITVhILehep7GwB3K5quJ3j4sAxiuV4lk
mwZASg/aMrdPssDFaP9BVe8QONi8p8MtXx7kKtIKjtBEw+9XPo7MHVQAkvKH
1HuPxEFFrjiGpQR5MFdSwVXlmgiPCz59n2YqBz60m/ymO9QGXa45vH0IezBp
MXK921NtMKNk4hVjWBf2k5PfOcCwHR54Pl0UJdOO7Qzr1+/vboe/LhV5eiw2
YYkyh0e9hDvgD2WD0C/Z9ZiqdofjqegOaHRG9IldZw2m/2dfodJyBzwv9pJ5
zrkS+3j37KlF3U5IVabOZGNbgjk1mp7+3dIJ+zJcbT98zccGiIfF9x3pgjbZ
LhvfdHOwnFTmqcsphrDp88gHqp8HQbPuL5HOtrswoFf4BreMFJAIEzzYp+YL
Lx7J5mpXOw74SnyX39oEQUeOENaKP3Kg7ndDjU9vOMxkb2D4uVcBJE7kTsC4
GGi8NF/39Lc8kPfJsTn5Oh5+GmGPD6eTBzL1VTLL+l3Qie3N+cXULOzd32Wm
WFsHKHX8MOUvDzHwfG8PNuDkBR2sv6t+VDsGEh88ijjxNRC67Ce6ijjLAVbh
6a9TgmHwlskn/YEpecDNMEK+vz8aYluha8p0CqCo/9ZVm8VgmEObxnNOTx5c
fhLhw+MUCdlsLo19x+8XY7VDyz2DWHj5TFx9xgt5YOF2X+7W3S44Jy3yiicj
E1NTdt2NvRQKZy6bzUY9lwdm+YuxjrejoUNr4wM1VgVg8dRZOEMyGDKaZfat
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
FdS//n8//7dX/vf3/wEK2vcU
     "], {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1:eJwl03e4zmUYwPH3ELJCRkbGkb2yRxEiley9Zcsmo6jszMgI2XvvvbNTtsre
M8qslKw+j/74XN/7Oe+5rvf3u59zopt2rNYhRiQSiSI66v9eih2JXCa/Ob0f
XNJXdIme5CVzX53NYWI5N9JPmMT3PKYstejEGL7jT/JRhpp0ZDRb+YO8vE0N
OjCKLdzndUpTnfZ8zWbukYdSVKMdI9nEXXJTkqq0ZQQbuUMu3qIKbfiKDdwm
JyWozEcMZz23yEFxKtGaYazjd7LzJhVpxVDW8hvZyEoWMpOJ18gY9k+GsHPS
kZZXSUNqUpEy3AUpSE4ykvIySUhMonBHJCQB8YlHXN6gAi0Zwhpu8iIN6cFE
9vCIYnxACwazmhvEoQ+zOMQL/gYa6AJ+Cd/n3F2/ZTf/UpRFHA/P5fPP9Wx4
dvN03U+UubyeD+9mnqtHw/eZm4d96Knwjjoo7ENX6a/EDntzvhj2o4vD7vRE
2IX2DjvVc2FnOjPsVA9qTK2vF8JezfPDzvXnsDftpqfDfs0TdBcPKcJCjoU9
++wzPRPuwjxN90Uiz/+p3pc5HAnP6dxMv2Ql14nFF8zgADH8Tj2dx0/hfpy7
6nh28g+F6cVUfuQZ79GUgazgWrgb6vIx49jB3xSiJ1P4gae8SxMGsJyrYTfU
oQvfsJ0HFORTJrOXJ5TjQ/qzjCvhXahNZ8ayjb8owDs0ph9Lucx/jJeFOQ==

          "]]]}, {}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1:eJwl03e4DmQYwOHvnEJCKWSmDs6yjpVVyCg7HCFkJGSriBLZyihbyp4luzJD
RkZm9siMBrKFjLjfqz/u83uf5zt/fOe5rhPTonNyp+hIJBJFHj+e5VTKSKSO
VvDBf1pcN+k18nl/oT/wV/h9c3cdzmKO85RdM+3IQL5iH2nta2stXqEmNahO
NapShcq8zEtUomL4LpTnRcpRljK8wPOUphQlKRG+M89RjKIUoTCFSKIgTenA
AGazlzS+YwFtQnv6M4s9POqz/NqNz1jEMTLZv67t6MdMdpPaPp+OZyV/8ozd
e/opCzlKRrvG+hNXSDSP0aWcJru5ra7hPLnNffUfCnjP0F94xDtvuJPeC3+/
bgw30quaVz8P99N/wz10Rbib/qE5tWu4sd4Jd9N14b56UeN0WLi93gg31AXh
5vqrZtBGejfc3XuDXibBe7TeCvf3XqK/kc27ja7mHLnMfXQ6u0hlTtRxLOd3
nrbromu5QKx5qM7nCE+aG+oovucUWe3e0t5MYycp7RL0XYYwj8M8Yf+ajuQ7
TpLFrrV+xFR2kMIuXt9hMHM5RHr7BtqKXkxhOw/bx+nbfMI3HORx+/rakp5M
ZhsP2cdqPd7kQyaxlejo//9Xc/MqLejBRH4myue5tDMfM4cDPGZfV9/gAyaw
hYh9jI5lGWfIYddJf+Rv8pgH6dfsJ505WddziXjzCL1Jkve3eoLM3s31NkW8
V2lpPasx+r6W0euaX7/UErpZ7/MAIT6KWw==
          "]]]}, {}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1:eJwV0nl8z3UcwPGfEUlFqShd0kHl6kRFpWIT02hjm933vbXYVo42Nh3b0H1Q
KXelogNF6U7l6D7optIlR5fr+fnj6f16fx4ej9933++na0ZpXElUJBJpQax/
Blu+aR2JVJozWkYig6hlr72vWclb+g9O17k8rFfyHZ3siUzVd7GUTzncWSw3
6ArKKaOU8ADFFFFIAfnkkUsO2WSRSQbppJFKCuNIJolExjKGBOKp406e4hPa
eZYRXK9rmcWTfMxhzoczWs9hBd9ynLOx3KJn8gQf0dbZtYzSb/I73ew5zNYv
hnfKsfYxTNH/0kuX86r+mZN1OjP0TrrrQpbo883xfKgPNYcRpweG5+F/fZvZ
J7xj3rA3mv25md/s9eZpZPOQvdm8hEnssU83z6GEF+x3mBdSxdf2qeYxJDDZ
fln4W/hH9zTLeEVfbNbwkz7JTKNZ/8VZuoDFehNtdAzX6df5la72LB7Uuzlb
F/O83kJHHR+eW69hGyfaU2nSi9hIa3s0I/UDPMdmjg7fnYl6NVvpYk+hUS9k
A4fYh4Z7q+9nOV9xVLgb4b2Gd8QC1tPK2ZBwr/R9LONLOoS7wU36dubzAS2d
XRPumq4J3495vE+U86vDvdLDiCGaoVRzK4/zHi38v6vCb+uq8B15jHVEnA8O
v6Pv5Vm+oH24P0zQL/MjJ9jH0aDn8i4HuDI8i/ka2znVnsk9+hk+58jwDcMd
1S/xA8fbk6nXOzhT5/Oofof9XBGe3fyP3rqCtbpfeF/8ok8xM7hb76KHLuJp
fUH4G/hMHxG+NTfqS8Md5e/wrsxzKWWV/SKzmu/1NLMzSUyzN5kDwt3gT3uD
eQZ5PBK+n3le+A3etteZ+8zLzYNhzKW+
          "]]]}, {}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1:eJwV1HegTnUYB/DjLtkkpCSXUpoKKUWyWyo0aIkKFdLSJmWPQvYoZAtlz2uv
plXZlVV2oWw+zx+f+32e55zf+zvn3Pc9mU1a12uVkiRJNjr70zs1SXZkJMkS
WTg9SaalJUmabCJH8C+lqEdv/uSYcy+R1enAejaY7SFDXYE3WM5is0VksZAF
zGcec5nDbGYxkxlMZxrf8g1TmcJkvmYSE5nAeNazm3T7led1ljHObB27SNOX
4zWWMtbsKAXV1fiIdaw120mq+lbasIQxZiXlI3zGH/FszC6W99A+1vKzWTF5
P93YEs/M7HHZn72kcAuvxvNhdNyrTPXcn5Nf8g+ZTOQMD5PD8U/l73E8rl0/
WX2eJ8mtHyz3U4D8+jHyf6qSXd8urpGfrC+kn6rOJp+ReeUweYjLGc8p7qMr
m+O+rXtM9mNPrOUrjlOW1iyKmfMayy84Qgkeohc7YuZ4IzmIfXGt3M2HcW38
6Phl8l66sCnu2yyRN9OKLEaZHSafugofxFp+MCsq69CZ32Jfs/PcpG7JQkbq
D5FXXZn3Yy3fm23nHDfqX2EBI/QHyaO+i/fiXL4z28ZZbtC/zPz4X+oPkFt9
J+/Guawx28oZrte/xLx4XvrhDGMoQxjMIAaymi2c5jrnt2AuA/Sr2Mwpypg1
Z0587/T7yaWuxDuxPyvNNnGSa/XNmB3/W/0+cqrv4G1Ws8LsUlmbTvwaz9Xs
BNeoX2QWn+uvlHXpyXb+Nsshb6ctq1huVkTWoiO/xGeaPRqfwe747upLyxeY
SV99cfkgPdjGX2YN5cDYh4uoyFtxjyxz/Gk5lIMUZhwnqcknbIz9ndcg9mAX
/+lHyWNczfPMoE+8l2SK38uzcjiHuYIJnOYBurOVvfHekud4glzWDYjrJjuj
Yy9uI8OxN+NZszTes/op6kQ+JfPIIfIAhSigHytPUCPuXf+x3BD3FO8n/ST1
WeqTU99H7uR4/G70I9VHuYp0fVM5nQveouAY
          "]]]}, {}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1:eJwV1HegzmUUB/AXkQZFw16RCFnJaKHMIq4VmRfJzs6uNOy9s1coK2Vnu7dh
ZWQURRSloUVD+Zw/Pvd8z/Pe+/7G85xbILl7Ure0iUQiDSl+ZMyQSJymZvpE
4pTagVRuJIn32OKz33lcnstr8nLOUkI/hpZyb2ZyiDzWBlNDrk41nuQJqlKF
yvGdPMajPMLDVKIiFSjPQ5TjQVrQixl8Rm7XGERZuTk9mc5BclkfSBl5GMs4
Q3Fro3lO7sE0DpDT2gBKy5v5Le5NP4dX5aV8TTH9KJrJa/kh7lE/lRflv+JZ
5UWxJu8nh9yfUnIGtT5r2KRvqW7l13gP6mxekduqu/gvnlWtxTLe1h9Tn2UD
X+k/Ve9nJE31X6rt2UNaDlOHFbGnPj8Rz89mvtfvU8sxhe76NuoOrsaeqQvj
M7mR+gH75OzqS5SU06v1WM1G/eXYT3kWL8vXqCkvZYl8mqLyiHgOeQ0XY4/1
k+kmT2Yv2fT9eEDewC9xTvRvMVReHGeXIvrhNJFXc4Gy+kl0lSfFe+JufV9K
yENYFO+L+6y9SWO5CxP5hLus9aG4PJiFfEFha2/QSO7MBD7mTmu9KSYPYgEn
udfa6zSUOzGej7jDWq/YP7kBHRlHKlmt96RoPF/cY1w3votCFOQeCpDEC4wl
hSz+rgf55fp0YAx7uD3OKvnkejzPaHZzW5wB8soDmR/nJa4Xs88zcntGsYvM
sV/kkQcwj+Nxb9aGUVdux0h2kin2g9xyf+bGeY7niDmLcyqv4jvK6CfSVh7B
Dm7VdyGXvJ6fqaSfGedRnsPn8U5ijnhaXsm3lNZPIFkeznZu0Xcmp7yOn6io
nxHnTv6XGjF3MZvyUfLHueYpOU1cg3djvvTnKSWPp418harygjhf8jZuljuR
Q74h3imrYrb0LdQP+VGuoE6P8yr/Q/WYn5gruYm6niNyvpgFasuJuC/eiXvS
N1M3cU4uqY6jtdxa3c6fchV1fpxnuaH6PlvjPKs30ZHscU7UFNLFdWNvWRm/
77Pm6hYuyfvV8kyL2dEnqzv5Wz6oVmNxzHDsVcwc6zgcMxdnjyHUillT27Gb
//WH4jlZHs8YZ01tyka+0e+N/xWMpVXMXlS28Yf+gFqZeTGPsZ9qA9bGe4+Z
VK8DxYnq7g==
          
          "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJwl1GWw1FUYwOGlEUEJlTDoBmmwkJKQ7m5p5F4RASlJFZBGpVG6OwSULknp
EBSQkO7u5wwfnvt7/7M7s3vec2fTNo2uGhUjEomk9if0NPPpQyNKko87rONH
2lOLmJxhAX1pTCme8Cfj6UJ+7rKen/iS2sTiLAvpRxNK85RtTKArBbjHBn6m
A3WIzTkW8S1NKcMztjORbhTkPhsZxVfEd9j9OoO64Syed+kkviEO/7OY7/iM
uN6zV6fxKWFhO+QXkpiPa3deNh/S2RTiAZsYTWKvHdOOvGQ+oKl0pr6uJ7Ve
2I15t6bUyZpM/9W3tacm0iP6ps7VN/SUvqNx9TxLSOH5e31V/9a3tJnG0306
ndfMJ7RsOJJ5p/5KUvM/2oOE5sM6h/d4yGbG0IkEXj+os6gf7sbzXzqFXuHz
uMBS+tOccrzPI7Ywls40CPfDRZYxgBaU54Owt/B5Yc/he4Vd8Eo4Y9hvuIvw
3cPOwtnCXsN+SB72EXYadh52F/YRdhr2RmrSkJZ0pCcDGclEZrJwieUMpCUV
+JCsXOY3fqAVFfmIbFxhBYNoTSUKk52rrGQwbajMx+TgGqsYQluqUIScXOd3
hvI5VSnKu9zgD4bRjmoUIxc3Wc1woqhOcXJzizWMIJoalCAPt1nLSL6gJp/w
mK2M42saEsf/wB6dSu9wR56P6rxwF+b/Ii9+d/Lqc3gMg2Q=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJwl0necDnQcwPHn7JW9WlZndI7jSsfJXmXF2buOpMJla1D23rJXNtl7jwhF
KkWTIhWKQhRJ3r+XP973+f2+zx/P7/m+rnBySlL3qEgk8pg/hfifwySkikRm
aaz+pZW0vxbWi5qouzReb+vz5HP+QTcQ5/y3TqS48x/6AUk84H5SlzOcaPff
dS/hMY+4n9etvBu+MzzQ7IjO5nVeoAlZzU/pCkaQQhGizD/SObxBMk2j7v/O
aFL5/GOdy5t0pBlFSe2zozqPt+hEc7KZf6UrGclrFCON+TGdzwBepAXZzb/W
9xlFj7AL0pp/ogsYSGfym/2oG5lES3KYfaOrGE1PSpDO/Li+x9u8xINmZ3UT
k2lFTrNvdTVjwm9zv6z76MWj7j/rNqbxOOnNPtWFvBN26X5Jd9OFh9zP6WbK
OP+jU8K7nP/UAzzpfEdbk8v5Oy2va7S03tTKOjbsT69oRd2vT+i/WlV7awH9
RSvodi2rt7SKTtcYvaZP64daTv/TahqjGfQzXUQp5xs6KPwfOP+me3iZh91/
0i1MDbtwv6oHaUNu9+91LePoQ0GzX3UHMyhJRrPPdTGDeYW25DE/resYT19i
yWR+QpcwhFdpF95KZp99oUsZSlfahx0SF/Yf9kF82FvYe/j9PEVC2HnYG4lh
v2FHVAq7D/sLOw57ojo1qEktalOHZ3iWutSjPg1oyHM0Ios3fqnLGEY3OpDX
/IyuZwL9KGR2QXcyM+zL/boeCm92vhveoo31HkOaiXE=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJwV03ec13McB/Df3VVGwygaEodEVCqlosjZdHK2O407UrruNM5q4a7byx5l
lJFNw6g0ScisKJpGiUp2U3q+/3j+Xq/353GP3+/7/Xw+l5qdn5GXlEgk0n2k
JScS56QkEv/JQvmRLJCdqOAZ82DZmhJ+N4+VPahmgjlTNovOj+a7ZFfm6Pny
VMrYYR4vz6JA7ysbskq/Q57Om3quPJm/9YfJ1o/hV3207MYifYTswG79PHrr
++THTGaI+UT+0IvJ0pvzk/4et3OFuRHf6tN4hBzzsWzR3+d8zjX/Lz9hCiXc
aK0FG/W58Q5kmA/hO306j3IBadYSLNWfpZQ7uTCe3XoSn+rPURZ7yEVczCVc
ymXxLP4umc/05ynnbvrE71hP4XP9BSpiv7jS2qGs1mfwGOnx29bq8IU+lUrG
cJW1w1ijz+RxLo/nsVaXL/UXqaKf+Sg26fPibnC1+XDW6m/xRJx1vIu1enyl
v0Q1/c0t+VmfzziuMTdmnf42w/S2/KNP5CY9la36B3GGsUfmA1imv8ytehv+
1GsYoB/N5tgveQYL9NtkO3bq98iejNevlU0oYn2clexCJe+Y8+QplPJvPLc8
kxommW+Wx1HMtthX2Z0qFptHytMoZ4/5XtmLjDhreSDL447KzryiD5Un8Zde
y0C9Fb/oCxmut2dXvAvX6UewQX+XJxlkPp7f9A/jbsS9Mh/ECv1V7o/n4Xpr
R/K9Poun4m7EXbN2MF/rr/EA98W5x72yXp9v9Nd5kMI409jTeKb4Xm4gk6z4
P4p7FHchzinei2xy4qxjL+O5uYXBDInzjf0gN+5HnAf5cZ6xD4yIPY5761ka
sFJ/g4coit+31pQf9Nk8Hd9vPoHt+hJG6R3ZG+8nz6aWUeb94WSk1Q==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJwV1HfAT2UYBuBjfJSGyGgJJS1pT0p7IJWitNNEIU1tKaKpsjfJ3kl7mC2j
YTRtoim013X/cX33+zznnO8957zv+dVu3aF5+1JFUXTzp1eZonipbFFcS0lJ
UdSRWxhBRfU2x9cYP0sF9YXyHyZQWb3E8c+Mu7Kd+nT5O6OppK4qv2cgO6kv
l4WcLKvI2a6fZ3wH5dTHyF8ZRXm+pS87OHaJ/JeJbHDdV/JxmvIX46jBTwzh
Kkq7bmru3/kz5HXsx1ZGZi79tfI5LmKpeol8hDP4gzFU4wcGcQVznDdf3smx
eXY20o9WuW/Hv5ZPcC57Zw69l+X11OU39Tr5PC1Ypl4qH+VMqjNX7z15F8ex
febR+0Y+STNq5n/ozZQ3sH/WQL2cZcbdOIvdmKf3vryb47OmbNLrzSvGN3JA
nlv9eZ6RD9SdOSHrwHd6fXjV+CYO5E/1F7lX+vKaXhsOytqov8y89KM/AxjI
IAYzhKG87vy2HMzfWePMz4fqe2jAjtlTesN4w7gd9bIv885zLh+p76Vh9l3W
Tm84bxrfzCHZS3mPOZcF6vs4kZ35UW8EbxnfQn3+U6/IezXuztnszgK9hfJ+
TqJi9qDeSN42bs+h2feszHuVj3EOe7BQb5F8gEbskjWhP5fyc+aVT3EetdJj
KFfzguPvyA4cxrb0KMV6etOSVVkj2YPGWTPGsmeel8F5dt/LlblWTpFV5SLX
LTZ+kPLqk7N3eTH3qq6UPcGArI36srwrJrGrerPrVxo/nf2rPj9ry3hqs5lh
XEMZx6fJUa55V3bkcEqzgT5czOrsKdmTJuzFYr2P5UOcQmV+0Vsln+EC9sl9
682St3JE5mRNruUT4y6cmntni95oZht34kjKsjbnMoY56ts4ihLW6X3KWMYx
nglMZBKTmcJUpjE9v8H5fcrvQ77jfIv5vvId5ZvIPs/ezX7Mnsp65/0w13y3
czTlst75Pc78xg9zGlXYqrda9qI5++bdMJzWeSbvfbqsJmc5939RQt8w
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJwV1GWYVWUUBeCLCnYHSneD0t0lSncrbYKFXShgYiMNFqKEQaggDYoJCHZ3
d7e+68fLWvub4Zk59+xvyo+c0Ht8kUKhsM0/xYsWCqcUKxT24RnWmVfIPrzC
FPNdsg07+MW8QZ7Em0nzTbIOL/CRebUcxOssMS+WJ7CL/8xb5Wjeoov5clmG
59htfkz251XmmBfKjuzkT/NmOZKJ+gzZmO18bV4rh7JSf0h252X25GnGcrSv
nSr35VnWm1fKvkzV75Zt+VXfKE8O/WZ5LB/ra+RglupL5IkU8pzmK2TZ/Fz9
cTmAufr9shN/6eczU2/CN/o6OYxV+sOyB3txjPk0uR8b9Gu4R2/Hb/oIbtGP
4xN9GUv1rhTJ72W+UpbL+9TnsUjvzN/6BczSm/JtPntKcLp5fzbq1zKSW811
+TSfLV2ZZC6fd6XP50Jmm5vxXZ6fkpxhPoBN+nWM4jZzPT7LM9ONq8wVeE1f
wEWU4kxnB7JZv57RdOdqZxWza9lTLqY0450dxBb9BsbQg8nOKvFG3jOXUIYJ
zg5mq34jY+lJWc5yfghP6dMYRy/KcbbzQ7NbuQe5S/SmPBWoSCUqU4WqVKM6
5/h/h7Etu5WdpA81ONf54bmTeb/ZAfoyxVnl3L3sAZdSk/OcHZF9znvK+6Mf
U51VyV3T7+UyajHR2ZG5c3kPeT/0z345q8rb+n25m9TOvjo7iuf12/M+kub6
fK4/woDsirka7+gLcxeYY27O9/oT1MnemYvnb4Z+R95X0tyAL/RHGZhdMVfn
3dwfHtCP55/sNXP1Fvygr87vofekaO5q9jH3nRf1VbIf0/NZyPb8rm+SI5ig
T5cN8/18aX5SDsm+sNy8THZjN3tkJxiTz4tB2U1ZI58T7+V55cDsM4vMD8ou
vMS/5i1yFJP0ebIlP+rr5XDW5LOQvSiWe547kb8LbNfvzHvSO/BHdjVneiO+
0lcwOHfAXJP38xnmnjHf3Iqf8pzUzf0xl2CHPiP7zZDcCWe1+CDPkHtHvdwf
ZyXZqc/MTjOU+tlN56XyrPqs7DTDaEBDGtGYJjSlGc1pQUta0Zo2tKUd7elA
RzrROTvtZ5Rmlz47d4HhTHNWmw/1xUxmgbk1P+trWa73Zu/cQ8Zld7NjvvY/
gfLqkw==
         "]]}}}], AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"Cost of Renewal\"", TraditionalForm], 
      FormBox["\"Probability Density\"", TraditionalForm]}, 
    AxesOrigin -> {0, 0}, Method -> {"AxesInFront" -> True}, PlotLabel -> 
    FormBox["\"Gamma Distribution for Cost of Renewal\\n\"", TraditionalForm],
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"\[Alpha] = 2\"", "\"\[Alpha] = 3\"", "\"\[Alpha] = 4\"", 
     "\"\[Alpha] = 5\"", "\"\[Alpha] = 6\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.37820393249936934`, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.37820393249936934`, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.6142719099991583, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.6142719099991583, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
             ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.1421359549995791`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.37820393249936934`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.6142719099991583`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.603893818800391*^9, 3.6038938257543583`*^9}, 
   3.603893898408381*^9, {3.6038939383617277`*^9, 3.6038939533714*^9}, {
   3.6039214881468277`*^9, 3.603921511450912*^9}, 3.603922930134005*^9, 
   3.60423791381355*^9}]
}, Open  ]],

Cell["\<\
For the renewal rate, the cost of acquisition, and the cost of maintenance \
distributions, we\[CloseCurlyQuote]ll set up the simulation so you can vary \
the value of  \[Alpha]  from 2 (low level of variation) to 6 (high level of \
variation .  \
\>", "Text",
 CellChangeTimes->{{3.603921563801009*^9, 3.603921578624394*^9}, {
  3.603922767164534*^9, 3.603922772045101*^9}, {3.603922937979656*^9, 
  3.603922958072289*^9}, {3.604237658966638*^9, 3.6042377043401737`*^9}, {
  3.6042377548791924`*^9, 3.604237802428236*^9}}],

Cell["\<\
d) Similarly, the cost of acquiring subscribers ranges from $5,000 to $30,000 \
(it\[CloseCurlyQuote]s expensive to fly to Australia!) and is also \
distributed as a Gamma function for the same reason as above: most \
subscribers can be acquired for around $8,000 but some will cost  a lot more. \
The figure below shows the distribution for \[Alpha] = 2.\
\>", "Text",
 CellChangeTimes->{
  3.6039230096252604`*^9, {3.6039233312022667`*^9, 3.6039233341729803`*^9}, 
   3.603929745898066*^9, {3.604237810076057*^9, 3.60423783432333*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"GammaDistribution", "[", 
      RowBox[{"2", ",", " ", "8000"}], "]"}], ",", " ", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "50000"}], "}"}], ",", " ", 
   RowBox[{"Filling", " ", "->", " ", "Axis"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Cost of Acquisition\>\"", ",", " ", "\"\<Probability Density\>\""}],
      "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Gamma Distribution for Cost of Acquisition\\n\>\""}]}], 
  "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.603844192674716*^9, 3.6038442996601267`*^9}, {
  3.603844351932991*^9, 3.6038443559710703`*^9}, {3.603844397840981*^9, 
  3.603844412035993*^9}, {3.60384444579349*^9, 3.6038445348489313`*^9}, {
  3.60389305931044*^9, 3.603893071776127*^9}, {3.603893803091585*^9, 
  3.603893824561042*^9}, {3.6038938612206078`*^9, 3.603893952103916*^9}, {
  3.603921481914418*^9, 3.603921509535829*^9}, {3.60392278725562*^9, 
  3.6039229280552797`*^9}, {3.603923059621801*^9, 3.603923186215708*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
   "], {{{}, 
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1HWQEFUAwOE7TlIapMOTRpHuVhCkG8UgJAXuaOkO6ZLu7kZAEaSRlJTu
bqQbvh3++Oa3b2Pmvbc7G94gslpElJCQkFDihr5vnND3x7kcx9ZDGqYzdDcv
6cgEtvCQ2kQygj+4SXEq0JB+LOUcOclBdj4nG5/xKVnJQmYykZEMpCcdnxDO
x6QlDalJRUpSkJxkJCUJH5GYRCQkAfGJF6w5WC/FKM9P9GUJZ4P1U5RyNKAP
iznDh9QiguGs4wZFaMcYNnKPr6lPbxZxmlj8wng284CatGQYa7lOYabxD89p
y29s4C5lmcQ2HlOPPbyiFx94dwv1FDGDeRsf1Cg6XWPoLn1Bh+Ae4/36lnFE
M96k/1MjmLfxvxp8LFMkuu7Qp7RgL68ZSlTX1ug1CnEgeMy5qbqTZ7RhH28Y
zV/coQwT2coj6tKTBZwM5k17xvI396nOZLbzhOYM4XeuUpDWjGI9t/mKH+nB
fE4Ea6IaPzOY1VyhAK0YyZ/cojQ/0J15HA/2jKo0YxCruEx+SvE93ZjLsWCf
qEJTBrKSS+TjS76jK3P4L3inVKYJv7KCi+TlC+rQhdkcJYxKNGYAy7lAHkry
LZ2ZxRGCf0JFGtGfZZwnNyX4hk7M5DDvAIQvgb0=
        "]]]}, {}, {}}, {{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1GWYFlUYgOFvFwSX7pCSRlq6w6BRWJRGYEmppbtTULpLBaWR7pBUQhrp
TqW78/7gxz3P9c78OXPOXJM2IjK8TUggEIjlEuxhZtKNmpQiL+dZzGCaUJlQ
/uU3ulOL0uTjAksYQlO+IgpH+J0e1OYz8nORpfxAM74mKkeZRU/q8DkFuMQy
htKcKnzAMWbTi7p8QUEus5xhfE9VonGcOfSmHl9yg3WMpi2FuMIKfqQF4UTn
BHPpw3eU4SbrGUM7CnOVlfxESx7zF9Ooxl02MYFOfMhJ5tGX+jxkG1Moyy02
MJbX7KU9T9nBz4Q41ANahP9YFdwn94brK/bQiif8HXwnz6YHAu8+hv0SQ7/R
e2wO7pl5or5hH2HmzvqcXcF1m3/VUD2oMTVMTzE/eKbmfvqSf2jAI7YzlXLc
ZiPj6MAzdvILRfmf1YygNd9yny1Moktw3ZxmAf1pSHnu8Cfj6UgxrrGGkbSh
enDdnGEhA4igAsWJxVn+YCCNqEgJYhOHuMQjPglISCISk4SkJCM5H5GClKQi
NWn4mLSkIz0ZyEgmMpOFT8hKNrKTg5zkIjefco5FDKIxlSjJddYyikhq8ICt
TKYrL9jNDKI4u0OB9/+KPPoWeduBnA==
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"Cost of Acquisition\"", TraditionalForm], 
    FormBox["\"Probability Density\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{"AxesInFront" -> True},
  PlotLabel->FormBox[
   "\"Gamma Distribution for Cost of Acquisition\\n\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.603923130733914*^9, 3.603923187519943*^9}, 
   3.604237913863112*^9}]
}, Open  ]],

Cell["\<\
e) Maintaining subscribers during their subscription period is also \
distributed as a Gamma function. Like the cost of acquiring subscribers, it \
too ranges from $5,000 to $30,000. The figure below shows the distribution \
for \[Alpha] = 2.\
\>", "Text",
 CellChangeTimes->{
  3.603923226009102*^9, {3.603923340440855*^9, 3.6039233424060097`*^9}, {
   3.604237837699175*^9, 3.6042378588665457`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"GammaDistribution", "[", 
      RowBox[{"2", ",", " ", "8000"}], "]"}], ",", " ", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "50000"}], "}"}], ",", " ", 
   RowBox[{"Filling", " ", "->", " ", "Axis"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Maintenance Cost\>\"", ",", " ", "\"\<Probability Density\>\""}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Gamma Distribution for Maintenance Cost\\n\>\""}]}], "]"}]], "Input",\

 CellOpen->False,
 CellChangeTimes->{{3.603844192674716*^9, 3.6038442996601267`*^9}, {
  3.603844351932991*^9, 3.6038443559710703`*^9}, {3.603844397840981*^9, 
  3.603844412035993*^9}, {3.60384444579349*^9, 3.6038445348489313`*^9}, {
  3.60389305931044*^9, 3.603893071776127*^9}, {3.603893803091585*^9, 
  3.603893824561042*^9}, {3.6038938612206078`*^9, 3.603893952103916*^9}, {
  3.603921481914418*^9, 3.603921509535829*^9}, {3.60392278725562*^9, 
  3.6039229280552797`*^9}, {3.603923059621801*^9, 3.603923186215708*^9}, {
  3.603923247941534*^9, 3.603923280275469*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
   "], {{{}, 
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1HWQEFUAwOE7TlIapMOTRpHuVhCkG8UgJAXuaOkO6ZLu7kZAEaSRlJTu
bqQbvh3++Oa3b2Pmvbc7G94gslpElJCQkFDihr5vnND3x7kcx9ZDGqYzdDcv
6cgEtvCQ2kQygj+4SXEq0JB+LOUcOclBdj4nG5/xKVnJQmYykZEMpCcdnxDO
x6QlDalJRUpSkJxkJCUJH5GYRCQkAfGJF6w5WC/FKM9P9GUJZ4P1U5RyNKAP
iznDh9QiguGs4wZFaMcYNnKPr6lPbxZxmlj8wng284CatGQYa7lOYabxD89p
y29s4C5lmcQ2HlOPPbyiFx94dwv1FDGDeRsf1Cg6XWPoLn1Bh+Ae4/36lnFE
M96k/1MjmLfxvxp8LFMkuu7Qp7RgL68ZSlTX1ug1CnEgeMy5qbqTZ7RhH28Y
zV/coQwT2coj6tKTBZwM5k17xvI396nOZLbzhOYM4XeuUpDWjGI9t/mKH+nB
fE4Ea6IaPzOY1VyhAK0YyZ/cojQ/0J15HA/2jKo0YxCruEx+SvE93ZjLsWCf
qEJTBrKSS+TjS76jK3P4L3inVKYJv7KCi+TlC+rQhdkcJYxKNGYAy7lAHkry
LZ2ZxRGCf0JFGtGfZZwnNyX4hk7M5DDvAIQvgb0=
        "]]]}, {}, {}}, {{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1GWYFlUYgOFvFwSX7pCSRlq6w6BRWJRGYEmppbtTULpLBaWR7pBUQhrp
TqW78/7gxz3P9c78OXPOXJM2IjK8TUggEIjlEuxhZtKNmpQiL+dZzGCaUJlQ
/uU3ulOL0uTjAksYQlO+IgpH+J0e1OYz8nORpfxAM74mKkeZRU/q8DkFuMQy
htKcKnzAMWbTi7p8QUEus5xhfE9VonGcOfSmHl9yg3WMpi2FuMIKfqQF4UTn
BHPpw3eU4SbrGUM7CnOVlfxESx7zF9Ooxl02MYFOfMhJ5tGX+jxkG1Moyy02
MJbX7KU9T9nBz4Q41ANahP9YFdwn94brK/bQiif8HXwnz6YHAu8+hv0SQ7/R
e2wO7pl5or5hH2HmzvqcXcF1m3/VUD2oMTVMTzE/eKbmfvqSf2jAI7YzlXLc
ZiPj6MAzdvILRfmf1YygNd9yny1Moktw3ZxmAf1pSHnu8Cfj6UgxrrGGkbSh
enDdnGEhA4igAsWJxVn+YCCNqEgJYhOHuMQjPglISCISk4SkJCM5H5GClKQi
NWn4mLSkIz0ZyEgmMpOFT8hKNrKTg5zkIjefco5FDKIxlSjJddYyikhq8ICt
TKYrL9jNDKI4u0OB9/+KPPoWeduBnA==
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"Maintenance Cost\"", TraditionalForm], 
    FormBox["\"Probability Density\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{"AxesInFront" -> True},
  PlotLabel->FormBox[
   "\"Gamma Distribution for Maintenance Cost\\n\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.603923282502172*^9, 3.604237913893818*^9}]
}, Open  ]],

Cell["\<\
f) Finally, not all subscribers will pay the same price for the subscription. \
The range here is from $20,000 to $120,000 with most subscribers paying \
around $25,000. Again, no surprise, the values are modeled by a Gamma \
distribution (here shown with \[Alpha] = 2).\
\>", "Text",
 CellChangeTimes->{
  3.6039233134746647`*^9, {3.603923349746369*^9, 3.603923351409685*^9}, {
   3.604237866098194*^9, 3.604237878065668*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"GammaDistribution", "[", 
      RowBox[{"2", ",", " ", "25000"}], "]"}], ",", " ", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "200000"}], "}"}], ",", " ", 
   RowBox[{"Filling", " ", "->", " ", "Axis"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Subscription Price\>\"", ",", " ", "\"\<Probability Density\>\""}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Gamma Distribution for Subscription Price\\n\>\""}]}], 
  "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.603844192674716*^9, 3.6038442996601267`*^9}, {
  3.603844351932991*^9, 3.6038443559710703`*^9}, {3.603844397840981*^9, 
  3.603844412035993*^9}, {3.60384444579349*^9, 3.6038445348489313`*^9}, {
  3.60389305931044*^9, 3.603893071776127*^9}, {3.603893803091585*^9, 
  3.603893824561042*^9}, {3.6038938612206078`*^9, 3.603893952103916*^9}, {
  3.603921481914418*^9, 3.603921509535829*^9}, {3.60392278725562*^9, 
  3.6039229280552797`*^9}, {3.603923059621801*^9, 3.603923186215708*^9}, {
  3.603923247941534*^9, 3.603923280275469*^9}, {3.603923370001082*^9, 
  3.60392340997645*^9}, {3.6039271216514463`*^9, 3.603927130701811*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
   "], {{{}, 
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[
       PolygonBox[{{1, 248, 249, 50, 247, 193, 239, 147, 184, 230, 110, 139, 
        176, 222, 81, 101, 130, 167, 213, 61, 72, 92, 121, 158, 204, 49, 48, 
        47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 
        30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 
        13, 12, 11, 60, 71, 91, 120, 157, 203, 10, 59, 70, 90, 119, 156, 202, 
        9, 80, 100, 129, 166, 212, 58, 106, 135, 172, 218, 69, 89, 118, 155, 
        201, 8, 109, 138, 175, 221, 79, 143, 180, 226, 99, 187, 233, 128, 165,
         211, 57, 191, 237, 145, 182, 228, 105, 245, 188, 234, 134, 241, 171, 
        217, 68, 246, 190, 236, 141, 242, 178, 224, 88, 244, 185, 231, 117, 
        240, 154, 200, 7, 192, 238, 146, 243, 183, 229, 108, 189, 235, 137, 
        174, 220, 78, 142, 179, 225, 98, 186, 232, 127, 164, 210, 56, 144, 
        181, 227, 104, 133, 170, 216, 67, 140, 177, 223, 87, 116, 153, 199, 6,
         107, 136, 173, 219, 77, 97, 126, 163, 209, 55, 103, 132, 169, 215, 
        66, 86, 115, 152, 198, 5, 76, 96, 125, 162, 208, 54, 102, 131, 168, 
        214, 65, 85, 114, 151, 197, 4, 75, 95, 124, 161, 207, 53, 64, 84, 113,
         150, 196, 3, 74, 94, 123, 160, 206, 52, 63, 83, 112, 149, 195, 2, 73,
         93, 122, 159, 205, 51, 62, 82, 111, 148, 
        194}}]]}, {}, {}}, {{}, {}, 
     {Hue[0.67, 0.6, 0.6], 
      LineBox[{1, 194, 148, 111, 82, 62, 51, 205, 159, 122, 93, 73, 2, 195, 
       149, 112, 83, 63, 52, 206, 160, 123, 94, 74, 3, 196, 150, 113, 84, 64, 
       53, 207, 161, 124, 95, 75, 4, 197, 151, 114, 85, 65, 214, 168, 131, 
       102, 54, 208, 162, 125, 96, 76, 5, 198, 152, 115, 86, 66, 215, 169, 
       132, 103, 55, 209, 163, 126, 97, 77, 219, 173, 136, 107, 6, 199, 153, 
       116, 87, 223, 177, 140, 67, 216, 170, 133, 104, 227, 181, 144, 56, 210,
        164, 127, 232, 186, 98, 225, 179, 142, 78, 220, 174, 137, 235, 189, 
       108, 229, 183, 243, 146, 238, 192, 7, 200, 154, 240, 117, 231, 185, 
       244, 88, 224, 178, 242, 141, 236, 190, 246, 68, 217, 171, 241, 134, 
       234, 188, 245, 105, 228, 182, 145, 237, 191, 57, 211, 165, 128, 233, 
       187, 99, 226, 180, 143, 79, 221, 175, 138, 109, 8, 201, 155, 118, 89, 
       69, 218, 172, 135, 106, 58, 212, 166, 129, 100, 80, 9, 202, 156, 119, 
       90, 70, 59, 10, 203, 157, 120, 91, 71, 60, 11, 12, 13, 14, 15, 16, 17, 
       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 204, 158, 121,
        92, 72, 61, 213, 167, 130, 101, 81, 222, 176, 139, 110, 230, 184, 147,
        239, 193, 247, 50}]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"Subscription Price\"", TraditionalForm], 
    FormBox["\"Probability Density\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{"AxesInFront" -> True},
  PlotLabel->FormBox[
   "\"Gamma Distribution for Subscription Price\\n\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.603923412323497*^9, {3.6039271235453568`*^9, 3.603927131826089*^9}, 
   3.6042379139271*^9}]
}, Open  ]],

Cell["\<\
Now that we\[CloseCurlyQuote]ve set up the assumptions, \
let\[CloseCurlyQuote]s use them to simulate the trajectory of the business. \
The histograms below are the result of 500 simulations.\
\>", "Text",
 CellChangeTimes->{{3.603923629587199*^9, 3.603923702846817*^9}, {
  3.603929772832672*^9, 3.603929788492902*^9}, {3.603929819107881*^9, 
  3.603929856010789*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Set", " ", "up", " ", "the", " ", "function", " ", "subscribers4", " ", 
     "to", " ", "handle", " ", "the", " ", "random", " ", 
     RowBox[{"variation", "/", "fluctuation"}], " ", "of", " ", "renewal", 
     " ", "rate"}], ",", " ", 
    RowBox[{"acquisition", " ", "rate"}], ",", " ", 
    RowBox[{"cost", " ", "of", " ", "renewal"}], ",", " ", 
    RowBox[{"cost", " ", "of", " ", "acquisition"}], ",", " ", 
    RowBox[{"cost", " ", "of", " ", "maintenance"}], ",", 
    RowBox[{"and", " ", "price", " ", "from", " ", "year", " ", "to", " ", 
     RowBox[{"year", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"vag", " ", "=", " ", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"subscribers4", "[", 
         RowBox[{"nStart_", ",", " ", "nPeriod_"}], "]"}], ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "renRateRange", ",", " ", "acqRateRange", ",", " ", "renewRate", 
            ",", " ", "addRate", ",", " ", "renewRateVals", ",", 
            "acqRateVals", ",", " ", "r", ",", "a", ",", "t", ",", " ", 
            "out"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Generate", " ", "the", " ", "random", " ", "values", " ", "for", 
            " ", "the", " ", "renwal", " ", "and", " ", "acquisition", " ", 
            "rates"}], " ", "*)"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", "PARAMETERS", " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"renRateRange", " ", "=", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"meanRenewalRate", ",", " ", "0.2"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"acqRateRange", " ", "=", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"meanAcquisitionRate", ",", "0.05"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"**", "**", "**", "**", "**"}], " ", "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Array", "[", 
            RowBox[{"renewRate", ",", " ", "nPeriod"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Array", "[", 
            RowBox[{"addRate", ",", " ", "nPeriod"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"renewRateVals", " ", "=", " ", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{"renRateRange", ",", " ", "nPeriod"}], 
             "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"acqRateVals", " ", "=", " ", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{"acqRateRange", ",", " ", "nPeriod"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"renewRate", "[", "1", "]"}], " ", "=", " ", 
            RowBox[{"renewRateVals", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"renewRate", "[", "n_", "]"}], ":=", " ", 
            RowBox[{"renewRateVals", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"addRate", "[", "1", "]"}], " ", "=", " ", 
            RowBox[{"acqRateVals", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"addRate", "[", "n_", "]"}], ":=", " ", 
            RowBox[{"acqRateVals", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "Take", " ", "the", " ", "nStart", " ", "value", " ", "and", " ", 
             "calcuate", " ", "the", " ", "renewals"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"r", "[", "1", "]"}], " ", "=", " ", 
            RowBox[{"Round", "[", 
             RowBox[{"nStart", " ", "*", " ", 
              RowBox[{"renewRate", "[", "1", "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"a", "[", "1", "]"}], " ", "=", " ", 
            RowBox[{"Round", "[", 
             RowBox[{"nStart", " ", "*", " ", 
              RowBox[{"addRate", "[", "1", "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"t", "[", "1", "]"}], " ", "=", " ", 
            RowBox[{
             RowBox[{"r", "[", "1", "]"}], " ", "+", " ", 
             RowBox[{"a", "[", "1", "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "Both", " ", "the", " ", "renewal", " ", "and", " ", "the", " ", 
             "new", " ", "addition", " ", "rates", " ", "are", " ", "figured",
              " ", "on", " ", "the", " ", "total", " ", "stock", " ", "in", 
             " ", "the", " ", "current", " ", "year"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"r", "[", "n_", "]"}], " ", ":=", " ", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"t", "[", 
               RowBox[{"n", "-", "1"}], "]"}], " ", "*", " ", 
              RowBox[{"renewRate", "[", "n", "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"a", "[", "n_", "]"}], " ", ":=", " ", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"t", "[", 
               RowBox[{"n", "-", "1"}], "]"}], " ", "*", " ", 
              RowBox[{"addRate", "[", "n", "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"t", "[", "n_", "]"}], " ", ":=", " ", 
            RowBox[{
             RowBox[{"a", "[", "n", "]"}], " ", "+", " ", 
             RowBox[{"r", "[", "n", "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"out", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"r", "[", "i", "]"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"i", ",", " ", "1", ",", " ", "nPeriod"}], "}"}]}], 
               "]"}], ",", " ", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"a", "[", "i", "]"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"i", ",", " ", "1", ",", " ", "nPeriod"}], "}"}]}], 
               "]"}]}], "}"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Now", " ", "add", " ", "the", " ", "costs", " ", "and", " ", "the", 
         " ", "price", " ", "to", " ", "create", " ", "a", " ", "variant", 
         " ", "of", " ", "the", " ", "profits", " ", "function", " ", 
         RowBox[{"above", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"profits2", "[", 
         RowBox[{"nStart_", ",", " ", "nPeriod_"}], "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "out", ",", " ", "renewals", ",", " ", "acquisitions", ",", " ", 
            "clients", ",", " ", "renewCostRange", ",", " ", "acqCostRange", 
            ",", " ", "maintCostRange", ",", " ", "priceRange", ",", " ", 
            "renewCost", ",", " ", "addCost", ",", " ", "maintCost", ",", " ",
             "price", ",", " ", "costOfRenewals", ",", " ", 
            "costOfAcquisitions", ",", " ", "costOfMaint", ",", " ", 
            "totalCost", ",", " ", "revenue", ",", " ", "profit"}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"out", " ", "=", " ", 
            RowBox[{"subscribers4", "[", 
             RowBox[{"nStart", ",", " ", "nPeriod"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"renewals", " ", "=", " ", 
            RowBox[{"out", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"acquisitions", " ", "=", " ", 
            RowBox[{"out", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"clients", " ", "=", " ", 
            RowBox[{"renewals", " ", "+", " ", "acquisitions"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", "PARAMETERS", " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"renewCostRange", " ", "=", " ", 
            RowBox[{"GammaDistribution", "[", 
             RowBox[{"shape", ",", "likelyRenewalCost"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"acqCostRange", " ", "=", " ", 
            RowBox[{"GammaDistribution", "[", 
             RowBox[{"shape", ",", "likelyAcquisitionCost"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"maintCostRange", " ", "=", " ", 
            RowBox[{"GammaDistribution", "[", 
             RowBox[{"shape", ",", "likelyMaintCost"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"priceRange", " ", "=", " ", 
            RowBox[{"GammaDistribution", "[", 
             RowBox[{"shape", ",", "likelyPrice"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"**", "**", "**", "**", "**"}], "*"}], " ", "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"renewCost", " ", "=", " ", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{"renewCostRange", ",", " ", "nPeriod"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"addCost", " ", "=", " ", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{"acqCostRange", ",", " ", "nPeriod"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"maintCost", " ", "=", " ", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{"maintCostRange", ",", " ", "nPeriod"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"price", " ", "=", " ", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{"priceRange", ",", " ", "nPeriod"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"costOfRenewals", " ", "=", " ", 
            RowBox[{"renewCost", " ", "*", " ", "renewals"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"costOfAcquisitions", " ", "=", " ", 
            RowBox[{"addCost", " ", "*", " ", "acquisitions"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"costOfMaint", " ", "=", " ", 
            RowBox[{"maintCost", " ", "*", " ", "clients"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"totalCost", " ", "=", " ", 
            RowBox[{
            "costOfRenewals", " ", "+", " ", "costOfAcquisitions", " ", "+", 
             " ", "costOfMaint"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"revenue", " ", "=", " ", 
            RowBox[{"price", " ", "*", " ", "clients"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"profit", " ", "=", " ", 
            RowBox[{"revenue", " ", "-", " ", "totalCost"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
            "clients", ",", " ", "costOfRenewals", ",", " ", 
             "costOfAcquisitions", ",", " ", "costOfMaint", ",", " ", 
             "totalCost", ",", " ", "revenue", ",", " ", "profit"}], 
            "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p2", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"profits2", "[", 
           RowBox[{"initialSubscribers", ",", " ", "nYears"}], "]"}], ",", 
          " ", 
          RowBox[{"{", "500", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Data", " ", "on", " ", "a", " ", "year", " ", "by", " ", "year", " ",
          "basis", " ", "for", " ", "histograms"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"cy", " ", "=", " ", 
        RowBox[{"clientsByYear", " ", "=", " ", 
         RowBox[{"Transpose", "[", 
          RowBox[{"p2", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"hClients", " ", "=", " ", 
        RowBox[{"Histogram", "[", 
         RowBox[{"cy", ",", " ", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<# Subscribers\>\"", ",", " ", "\"\<Frequency\>\""}], 
            "}"}]}], ",", " ", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"10", ",", "Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}]}], 
            "}"}]}], ",", " ", 
          RowBox[{
          "PlotLabel", " ", "\[Rule]", " ", 
           "\"\<Subscriber Distribution\>\""}], ",", 
          RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"py", " ", "=", " ", 
        RowBox[{"profitsByYear", " ", "=", " ", 
         RowBox[{"Transpose", "[", 
          RowBox[{"p2", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "7"}], "]"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"hProfits", " ", "=", " ", 
        RowBox[{"Histogram", "[", 
         RowBox[{"py", ",", " ", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Profit ($)\>\"", ",", " ", "\"\<Frequency\>\""}], 
            "}"}]}], ",", " ", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"10", ",", "Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}]}], 
            "}"}]}], ",", " ", 
          RowBox[{
          "PlotLabel", " ", "\[Rule]", " ", "\"\<Profit Distribution\>\""}], 
          ",", 
          RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"GraphicsGrid", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"hClients", ",", "\"\<\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"hProfits", ",", "\"\<\>\""}], "}"}]}], "}"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "initialSubscribers", ",", "500", ",", " ", 
          "\"\<# Initial Subscribers\>\""}], "}"}], ",", " ", "50", ",", " ", 
        "1000", ",", " ", "50", ",", " ", 
        RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nYears", ",", "5", ",", " ", "\"\<# Years\>\""}], "}"}], 
        ",", " ", "1", ",", " ", "10", ",", " ", "1", ",", " ", 
        RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
      " ", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "meanRenewalRate", ",", " ", "0.7", ",", " ", 
          "\"\<Mean Renewal Rate\>\""}], "}"}], ",", " ", "0.45", ",", "0.95",
         ",", "0.1", ",", " ", 
        RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "meanAcquisitionRate", ",", " ", "0.2", ",", " ", 
          "\"\<Mean Acquisition Rate\>\""}], "}"}], ",", " ", "0.1", ",", 
        "0.5", ",", "0.1", ",", " ", 
        RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "likelyRenewalCost", ",", " ", "1000", ",", " ", 
          "\"\<Most Likely Renewal Cost\>\""}], "}"}], ",", " ", "500", ",", 
        "5000", ",", "500", ",", " ", 
        RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "likelyAcquisitionCost", ",", " ", "8000", ",", " ", 
          "\"\<Most Likely Acquisition Cost\>\""}], "}"}], ",", " ", "5000", 
        ",", "20000", ",", "1000", ",", " ", 
        RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "likelyMaintCost", ",", " ", "8000", ",", " ", 
          "\"\<Most Likely Maintenance Cost\>\""}], "}"}], ",", " ", "5000", 
        ",", "20000", ",", "1000", ",", " ", 
        RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "likelyPrice", ",", " ", "25000", ",", " ", 
          "\"\<Most Likely Subscription Price\>\""}], "}"}], ",", " ", 
        "15000", ",", "120000", ",", "10000", ",", " ", 
        RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "shape", ",", " ", "2", ",", " ", 
          "\"\<Variation Level (2 = Low, 6 = High)\>\""}], "}"}], ",", "2", 
        ",", "6", ",", "1", ",", 
        RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], 
      ",", 
      RowBox[{"ControlPlacement", " ", "\[Rule]", "Top"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"TrackedSymbols", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "initialSubscribers", ",", " ", "nYears", ",", " ", "meanRenewalRate",
          ",", " ", "meanAcquisitionRate", ",", "likelyRenewalCost", ",", " ",
          "likelyAcquisitionCost", ",", "likelyMaintCost", ",", " ", 
         "likelyPrice", ",", "shape"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.5841246829372263`*^9, 3.584124862683237*^9}, {
   3.584124968313971*^9, 3.5841250512793903`*^9}, {3.5841369218166437`*^9, 
   3.5841369846692533`*^9}, {3.584137060780249*^9, 3.5841372813567467`*^9}, {
   3.584137556271022*^9, 3.584137619042466*^9}, {3.584137751103116*^9, 
   3.5841378202787333`*^9}, {3.584137890867111*^9, 3.5841380329433613`*^9}, {
   3.5841381243583927`*^9, 3.584138156820798*^9}, {3.584138201281354*^9, 
   3.584138237656088*^9}, {3.5841383089523993`*^9, 3.58413831197677*^9}, {
   3.584138370798806*^9, 3.5841385282322397`*^9}, {3.584138572856366*^9, 
   3.584138610361004*^9}, {3.5841392876675177`*^9, 3.58413931434523*^9}, {
   3.6039237651869698`*^9, 3.603923770467578*^9}, {3.60392380390864*^9, 
   3.60392393534558*^9}, {3.603924295065729*^9, 3.603924338631681*^9}, {
   3.603924459528283*^9, 3.60392446599135*^9}, {3.603924653497307*^9, 
   3.603924697341955*^9}, {3.603924737102992*^9, 3.603924823344483*^9}, 
   3.603924855717417*^9, {3.603924913775568*^9, 3.603924915420899*^9}, {
   3.603924990675372*^9, 3.603925001098401*^9}, 3.603925046699848*^9, 
   3.603925080266408*^9, {3.60392532825947*^9, 3.603925374514188*^9}, 
   3.603925431403475*^9, {3.603925528494596*^9, 3.6039255363183393`*^9}, {
   3.603925695296315*^9, 3.603925709826981*^9}, {3.603925768378758*^9, 
   3.603925787384323*^9}, {3.6039258899794817`*^9, 3.603925930985511*^9}, {
   3.6039261632611103`*^9, 3.603926188418775*^9}, {3.603926223043963*^9, 
   3.603926271737718*^9}, {3.60392631146631*^9, 3.603926333721765*^9}, {
   3.60392644431675*^9, 3.603926586969741*^9}, {3.603926708568075*^9, 
   3.6039268504528847`*^9}, {3.603926933581472*^9, 3.603926936109662*^9}, {
   3.603927384301133*^9, 3.60392741606003*^9}, {3.603928285998342*^9, 
   3.603928291199011*^9}, {3.603928324974511*^9, 3.603928579676631*^9}, {
   3.603928726694504*^9, 3.6039291261516657`*^9}, {3.603929334638565*^9, 
   3.6039293525741377`*^9}, {3.603929911854843*^9, 3.603929916299033*^9}, {
   3.604237514126898*^9, 3.604237521588799*^9}, {3.6042377187442102`*^9, 
   3.604237724983555*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`initialSubscribers$$ = 
    500, $CellContext`likelyAcquisitionCost$$ = 
    8000, $CellContext`likelyMaintCost$$ = 8000, $CellContext`likelyPrice$$ = 
    25000, $CellContext`likelyRenewalCost$$ = 
    1000, $CellContext`meanAcquisitionRate$$ = 
    0.2, $CellContext`meanRenewalRate$$ = 0.7, $CellContext`nYears$$ = 
    5, $CellContext`shape$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`initialSubscribers$$], 500, "# Initial Subscribers"},
       50, 1000, 50}, {{
       Hold[$CellContext`nYears$$], 5, "# Years"}, 1, 10, 1}, {{
       Hold[$CellContext`meanRenewalRate$$], 0.7, "Mean Renewal Rate"}, 0.45, 
      0.95, 0.1}, {{
       Hold[$CellContext`meanAcquisitionRate$$], 0.2, 
       "Mean Acquisition Rate"}, 0.1, 0.5, 0.1}, {{
       Hold[$CellContext`likelyRenewalCost$$], 1000, 
       "Most Likely Renewal Cost"}, 500, 5000, 500}, {{
       Hold[$CellContext`likelyAcquisitionCost$$], 8000, 
       "Most Likely Acquisition Cost"}, 5000, 20000, 1000}, {{
       Hold[$CellContext`likelyMaintCost$$], 8000, 
       "Most Likely Maintenance Cost"}, 5000, 20000, 1000}, {{
       Hold[$CellContext`likelyPrice$$], 25000, 
       "Most Likely Subscription Price"}, 15000, 120000, 10000}, {{
       Hold[$CellContext`shape$$], 2, "Variation Level (2 = Low, 6 = High)"}, 
      2, 6, 1}}, Typeset`size$$ = {1079., {333., 338.}}, Typeset`update$$ = 0,
     Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`initialSubscribers$15452$$ = 
    0, $CellContext`nYears$15453$$ = 0, $CellContext`meanRenewalRate$15454$$ =
     0, $CellContext`meanAcquisitionRate$15455$$ = 
    0, $CellContext`likelyRenewalCost$15456$$ = 
    0, $CellContext`likelyAcquisitionCost$15457$$ = 
    0, $CellContext`likelyMaintCost$15458$$ = 
    0, $CellContext`likelyPrice$15459$$ = 0, $CellContext`shape$15460$$ = 0}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`initialSubscribers$$ = 
        500, $CellContext`likelyAcquisitionCost$$ = 
        8000, $CellContext`likelyMaintCost$$ = 
        8000, $CellContext`likelyPrice$$ = 
        25000, $CellContext`likelyRenewalCost$$ = 
        1000, $CellContext`meanAcquisitionRate$$ = 
        0.2, $CellContext`meanRenewalRate$$ = 0.7, $CellContext`nYears$$ = 
        5, $CellContext`shape$$ = 2}, "ControllerVariables" :> {
        Hold[$CellContext`initialSubscribers$$, \
$CellContext`initialSubscribers$15452$$, 0], 
        Hold[$CellContext`nYears$$, $CellContext`nYears$15453$$, 0], 
        Hold[$CellContext`meanRenewalRate$$, \
$CellContext`meanRenewalRate$15454$$, 0], 
        Hold[$CellContext`meanAcquisitionRate$$, \
$CellContext`meanAcquisitionRate$15455$$, 0], 
        Hold[$CellContext`likelyRenewalCost$$, \
$CellContext`likelyRenewalCost$15456$$, 0], 
        Hold[$CellContext`likelyAcquisitionCost$$, \
$CellContext`likelyAcquisitionCost$15457$$, 0], 
        Hold[$CellContext`likelyMaintCost$$, \
$CellContext`likelyMaintCost$15458$$, 0], 
        Hold[$CellContext`likelyPrice$$, $CellContext`likelyPrice$15459$$, 0], 
        Hold[$CellContext`shape$$, $CellContext`shape$15460$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`subscribers4[
          Pattern[$CellContext`nStart$, 
           Blank[]], 
          Pattern[$CellContext`nPeriod$, 
           Blank[]]] := 
        Module[{$CellContext`renRateRange$, $CellContext`acqRateRange$, \
$CellContext`renewRate$, $CellContext`addRate$, $CellContext`renewRateVals$, \
$CellContext`acqRateVals$, $CellContext`r$, $CellContext`a$, $CellContext`t$, \
$CellContext`out$}, $CellContext`renRateRange$ = 
           NormalDistribution[$CellContext`meanRenewalRate$$, 
             0.2]; $CellContext`acqRateRange$ = 
           NormalDistribution[$CellContext`meanAcquisitionRate$$, 0.05]; 
          Array[$CellContext`renewRate$, $CellContext`nPeriod$]; 
          Array[$CellContext`addRate$, $CellContext`nPeriod$]; \
$CellContext`renewRateVals$ = 
           RandomVariate[$CellContext`renRateRange$, $CellContext`nPeriod$]; \
$CellContext`acqRateVals$ = 
           RandomVariate[$CellContext`acqRateRange$, $CellContext`nPeriod$]; \
$CellContext`renewRate$[1] = 
           Part[$CellContext`renewRateVals$, 1]; $CellContext`renewRate$[
             Pattern[$CellContext`n$, 
              Blank[]]] := 
           Part[$CellContext`renewRateVals$, $CellContext`n$]; \
$CellContext`addRate$[1] = 
           Part[$CellContext`acqRateVals$, 1]; $CellContext`addRate$[
             Pattern[$CellContext`n$, 
              Blank[]]] := 
           Part[$CellContext`acqRateVals$, $CellContext`n$]; $CellContext`r$[
            1] = Round[$CellContext`nStart$ $CellContext`renewRate$[
              1]]; $CellContext`a$[1] = 
           Round[$CellContext`nStart$ $CellContext`addRate$[
              1]]; $CellContext`t$[
            1] = $CellContext`r$[1] + $CellContext`a$[1]; $CellContext`r$[
             Pattern[$CellContext`n$, 
              Blank[]]] := 
           Round[$CellContext`t$[$CellContext`n$ - 
               1] $CellContext`renewRate$[$CellContext`n$]]; $CellContext`a$[
             Pattern[$CellContext`n$, 
              Blank[]]] := 
           Round[$CellContext`t$[$CellContext`n$ - 
               1] $CellContext`addRate$[$CellContext`n$]]; $CellContext`t$[
             Pattern[$CellContext`n$, 
              
              Blank[]]] := $CellContext`a$[$CellContext`n$] + \
$CellContext`r$[$CellContext`n$]; $CellContext`out$ = {
             Table[
              $CellContext`r$[$CellContext`i], {$CellContext`i, 
               1, $CellContext`nPeriod$}], 
             Table[
              $CellContext`a$[$CellContext`i], {$CellContext`i, 
               1, $CellContext`nPeriod$}]}]; $CellContext`profits2[
          Pattern[$CellContext`nStart$, 
           Blank[]], 
          Pattern[$CellContext`nPeriod$, 
           Blank[]]] := 
        Module[{$CellContext`out$, $CellContext`renewals$, \
$CellContext`acquisitions$, $CellContext`clients$, \
$CellContext`renewCostRange$, $CellContext`acqCostRange$, \
$CellContext`maintCostRange$, $CellContext`priceRange$, \
$CellContext`renewCost$, $CellContext`addCost$, $CellContext`maintCost$, \
$CellContext`price$, $CellContext`costOfRenewals$, \
$CellContext`costOfAcquisitions$, $CellContext`costOfMaint$, \
$CellContext`totalCost$, $CellContext`revenue$, $CellContext`profit$}, \
$CellContext`out$ = $CellContext`subscribers4[$CellContext`nStart$, \
$CellContext`nPeriod$]; $CellContext`renewals$ = 
           Part[$CellContext`out$, 1]; $CellContext`acquisitions$ = 
           Part[$CellContext`out$, 
             2]; $CellContext`clients$ = $CellContext`renewals$ + \
$CellContext`acquisitions$; $CellContext`renewCostRange$ = 
           GammaDistribution[$CellContext`shape$$, \
$CellContext`likelyRenewalCost$$]; $CellContext`acqCostRange$ = 
           GammaDistribution[$CellContext`shape$$, \
$CellContext`likelyAcquisitionCost$$]; $CellContext`maintCostRange$ = 
           GammaDistribution[$CellContext`shape$$, \
$CellContext`likelyMaintCost$$]; $CellContext`priceRange$ = 
           GammaDistribution[$CellContext`shape$$, \
$CellContext`likelyPrice$$]; $CellContext`renewCost$ = 
           RandomVariate[$CellContext`renewCostRange$, $CellContext`nPeriod$]; \
$CellContext`addCost$ = 
           RandomVariate[$CellContext`acqCostRange$, $CellContext`nPeriod$]; \
$CellContext`maintCost$ = 
           RandomVariate[$CellContext`maintCostRange$, $CellContext`nPeriod$]; \
$CellContext`price$ = 
           RandomVariate[$CellContext`priceRange$, $CellContext`nPeriod$]; \
$CellContext`costOfRenewals$ = $CellContext`renewCost$ $CellContext`renewals$; \
$CellContext`costOfAcquisitions$ = $CellContext`addCost$ \
$CellContext`acquisitions$; $CellContext`costOfMaint$ = \
$CellContext`maintCost$ $CellContext`clients$; $CellContext`totalCost$ = \
$CellContext`costOfRenewals$ + $CellContext`costOfAcquisitions$ + \
$CellContext`costOfMaint$; $CellContext`revenue$ = $CellContext`price$ \
$CellContext`clients$; $CellContext`profit$ = $CellContext`revenue$ - \
$CellContext`totalCost$; {$CellContext`clients$, \
$CellContext`costOfRenewals$, $CellContext`costOfAcquisitions$, \
$CellContext`costOfMaint$, $CellContext`totalCost$, $CellContext`revenue$, \
$CellContext`profit$}]; $CellContext`p2 = Table[
          $CellContext`profits2[$CellContext`initialSubscribers$$, \
$CellContext`nYears$$], {500}]; $CellContext`cy = ($CellContext`clientsByYear = 
         Transpose[
           Part[$CellContext`p2, All, 1]]); $CellContext`hClients = 
        Histogram[$CellContext`cy, 
          AxesLabel -> {"# Subscribers", "Frequency"}, 
          LabelStyle -> {10, Bold, FontFamily -> "Helvetica"}, PlotLabel -> 
          "Subscriber Distribution", ImageSize -> 
          500]; $CellContext`py = ($CellContext`profitsByYear = Transpose[
           Part[$CellContext`p2, All, 7]]); $CellContext`hProfits = 
        Histogram[$CellContext`py, AxesLabel -> {"Profit ($)", "Frequency"}, 
          LabelStyle -> {10, Bold, FontFamily -> "Helvetica"}, PlotLabel -> 
          "Profit Distribution", ImageSize -> 500]; 
       GraphicsGrid[{{$CellContext`hClients, ""}, {$CellContext`hProfits, 
           ""}}]), "Specifications" :> {{{$CellContext`initialSubscribers$$, 
          500, "# Initial Subscribers"}, 50, 1000, 50, Appearance -> 
         "Labeled"}, {{$CellContext`nYears$$, 5, "# Years"}, 1, 10, 1, 
         Appearance -> 
         "Labeled"}, {{$CellContext`meanRenewalRate$$, 0.7, 
          "Mean Renewal Rate"}, 0.45, 0.95, 0.1, Appearance -> 
         "Labeled"}, {{$CellContext`meanAcquisitionRate$$, 0.2, 
          "Mean Acquisition Rate"}, 0.1, 0.5, 0.1, Appearance -> 
         "Labeled"}, {{$CellContext`likelyRenewalCost$$, 1000, 
          "Most Likely Renewal Cost"}, 500, 5000, 500, Appearance -> 
         "Labeled"}, {{$CellContext`likelyAcquisitionCost$$, 8000, 
          "Most Likely Acquisition Cost"}, 5000, 20000, 1000, Appearance -> 
         "Labeled"}, {{$CellContext`likelyMaintCost$$, 8000, 
          "Most Likely Maintenance Cost"}, 5000, 20000, 1000, Appearance -> 
         "Labeled"}, {{$CellContext`likelyPrice$$, 25000, 
          "Most Likely Subscription Price"}, 15000, 120000, 10000, Appearance -> 
         "Labeled"}, {{$CellContext`shape$$, 2, 
          "Variation Level (2 = Low, 6 = High)"}, 2, 6, 1, Appearance -> 
         "Labeled"}}, 
      "Options" :> {
       ControlPlacement -> Top, 
        TrackedSymbols -> {$CellContext`initialSubscribers$$, \
$CellContext`nYears$$, $CellContext`meanRenewalRate$$, \
$CellContext`meanAcquisitionRate$$, $CellContext`likelyRenewalCost$$, \
$CellContext`likelyAcquisitionCost$$, $CellContext`likelyMaintCost$$, \
$CellContext`likelyPrice$$, $CellContext`shape$$}}, "DefaultOptions" :> {}],
     ImageSizeCache->{1124., {489., 494.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.60392571413*^9, 3.603925733790896*^9}, 
   3.603925792825974*^9, 3.603925932468067*^9, 3.603926601157658*^9, 
   3.603926862820404*^9, 3.6039269396144867`*^9, {3.603927393553237*^9, 
   3.6039274171891193`*^9}, 3.60392859880906*^9, 3.603929135630342*^9, 
   3.603929359457103*^9, 3.603929920248397*^9, 3.603932060177334*^9, 
   3.6042375252345943`*^9, 3.604237913977994*^9}]
}, Open  ]],

Cell["\<\
There are lots of scenarios you can try. In general you will find that the \
number of subscribers stay relatively close to where you started from. Churn \
is a fact of life in the subscription business.

The profits do look good though. In the best case scenarios (when the Gamma \
distributions are widest (Variation Level = 5)), even with relatively modest \
subscription rates (e.g. $25,000 per year), the likely profits are between \
$10M to around $100M . In the worst case scenario (when the Gamma \
distributions are the narrowest (Variation Level = 2)), profits are likely \
between $10M and $50M. Not bad at all if you can manage to push on in the \
face of uncertainty.\
\>", "Text",
 CellChangeTimes->{{3.60392757352234*^9, 3.603927608330806*^9}, {
  3.603927678923242*^9, 3.603927724971525*^9}, {3.6039277752861547`*^9, 
  3.603927785251587*^9}, {3.6039278156450043`*^9, 3.603927939983584*^9}, {
  3.603929964373191*^9, 3.603930023425167*^9}, {3.603930098673092*^9, 
  3.60393018282238*^9}, {3.6039302268365192`*^9, 3.6039304158386497`*^9}}]
}, Open  ]]
},
WindowSize->{848, 787},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 99, 1, 80, "Section"],
Cell[681, 25, 1025, 17, 144, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1743, 47, 97, 1, 80, "Section"],
Cell[1843, 50, 814, 13, 144, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2694, 68, 100, 1, 80, "Section"],
Cell[2797, 71, 762, 13, 106, "Text"],
Cell[CellGroupData[{
Cell[3584, 88, 5583, 132, 369, "Input"],
Cell[9170, 222, 4246, 85, 396, "Output"]
}, Open  ]],
Cell[13431, 310, 725, 11, 87, "Text"],
Cell[14159, 323, 541, 9, 87, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14737, 337, 110, 1, 80, "Section"],
Cell[14850, 340, 491, 8, 87, "Text"],
Cell[CellGroupData[{
Cell[15366, 352, 11160, 243, 19, "Input",
 CellOpen->False],
Cell[26529, 597, 7657, 149, 550, "Output"]
}, Open  ]],
Cell[34201, 749, 2000, 37, 410, "Text"],
Cell[36204, 788, 396, 7, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36637, 800, 110, 1, 80, "Section"],
Cell[36750, 803, 346, 7, 68, "Text"],
Cell[37099, 812, 498, 8, 68, "Text"],
Cell[37600, 822, 750, 13, 87, "Text"],
Cell[CellGroupData[{
Cell[38375, 839, 1863, 44, 19, "Input",
 CellOpen->False],
Cell[40241, 885, 54883, 949, 254, "Output"]
}, Open  ]],
Cell[95139, 1837, 821, 13, 106, "Text"],
Cell[CellGroupData[{
Cell[95985, 1854, 2060, 47, 19, "Input",
 CellOpen->False],
Cell[98048, 1903, 47218, 815, 254, "Output"]
}, Open  ]],
Cell[145281, 2721, 474, 9, 87, "Text"],
Cell[145758, 2732, 485, 8, 68, "Text"],
Cell[CellGroupData[{
Cell[146268, 2744, 1623, 33, 19, "Input",
 CellOpen->False],
Cell[147894, 2779, 27177, 455, 244, "Output"]
}, Open  ]],
Cell[175086, 3237, 678, 11, 87, "Text"],
Cell[CellGroupData[{
Cell[175789, 3252, 1734, 41, 19, "Input",
 CellOpen->False],
Cell[177526, 3295, 48168, 858, 226, "Output"]
}, Open  ]],
Cell[225709, 4156, 533, 9, 49, "Text"],
Cell[226245, 4167, 547, 9, 68, "Text"],
Cell[CellGroupData[{
Cell[226817, 4180, 1218, 27, 19, "Input",
 CellOpen->False],
Cell[228038, 4209, 7807, 136, 217, "Output"]
}, Open  ]],
Cell[235860, 4348, 411, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[236296, 4360, 1260, 28, 19, "Input",
 CellOpen->False],
Cell[237559, 4390, 7773, 135, 221, "Output"]
}, Open  ]],
Cell[245347, 4528, 437, 8, 68, "Text"],
Cell[CellGroupData[{
Cell[245809, 4540, 1363, 29, 19, "Input",
 CellOpen->False],
Cell[247175, 4571, 8610, 141, 219, "Output"]
}, Open  ]],
Cell[255800, 4715, 379, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[256204, 4726, 20490, 431, 19, "Input",
 CellOpen->False],
Cell[276697, 5159, 12070, 218, 1000, "Output"]
}, Open  ]],
Cell[288782, 5380, 1064, 17, 144, "Text"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
