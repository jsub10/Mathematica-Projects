(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    521220,      11554]
NotebookOptionsPosition[    511320,      11239]
NotebookOutlinePosition[    511675,      11255]
CellTagsIndexPosition[    511632,      11252]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["See NormalOrNotv2.xlsx for a summary of the results", "Section",
 CellChangeTimes->{{3.606930386413476*^9, 3.606930408211006*^9}, {
  3.6185061079865103`*^9, 3.6185061086069107`*^9}}],

Cell[CellGroupData[{

Cell["The CLT", "Section",
 CellChangeTimes->{{3.6066881361529818`*^9, 3.606688138788335*^9}}],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], ",", " ", 
    SubscriptBox["x", "2"], ",", " ", "...", ",", " ", 
    RowBox[{
     SubscriptBox["x", "n"], " ", "be", " "}]}], TraditionalForm]]],
 "a sequence of random variables that are identically and independenly \
distributed, with mean \[Micro] = 0 and variance ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], " ", "."}], TraditionalForm]]],
 " Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["S", "n"], "=", " ", 
    RowBox[{
     RowBox[{"[", 
      RowBox[{"1", "/", 
       SqrtBox["n"]}], "]"}], "   ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], "+", " ", 
          SubscriptBox["x", "2"], " ", "+"}], " ", "..."}], " ", "+", " ", 
        SubscriptBox["x", "n"]}], ")"}], ".", " ", "Then"}], " ", "the", " ", 
     "distribution", " ", "of", " ", "the", " "}]}], TraditionalForm]]],
 "normalized sum ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "n"], TraditionalForm]]],
 "approaches the normal distribution N(0, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Sigma]", "2"], ")"}], " "}], TraditionalForm]]],
 "as n \[RightArrow]\[Infinity]. \n\nWhat happens when these conditions are \
relaxed? In the following we experiment with (a) distributions other than \
Normal, (b) sums of random variables that are ",
 StyleBox["not ",
  FontSlant->"Italic"],
 "identically distributed, and (c) distributions with large variances (i.e. \
violating the Lindeberg condition)."
}], "Text",
 CellChangeTimes->{{3.6066881464846983`*^9, 3.606688284522743*^9}, {
  3.60668831734979*^9, 3.6066883467867107`*^9}, {3.6066883893326893`*^9, 
  3.6066885248497667`*^9}, {3.606688561696055*^9, 3.6066886044889383`*^9}, {
  3.6066886399829807`*^9, 3.606688814576038*^9}, {3.606861634272937*^9, 
  3.606861714809486*^9}, {3.606987979307507*^9, 3.606988145455082*^9}, {
  3.665593878369879*^9, 3.665593881660174*^9}}],

Cell["\<\
What percentage of the values are within n standard deviations of the mean? \
That is the test we\[CloseCurlyQuote]ll use to determine how close a \
distribution comes to the normal one.\
\>", "Text",
 CellChangeTimes->{{3.606860784940712*^9, 3.606860858715193*^9}, {
  3.6072078937443867`*^9, 3.607207921526045*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"percentOfResults", "[", 
     RowBox[{"dataSequence_", ",", " ", "nStds_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nTrials", ",", " ", "mean", ",", " ", "std"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Calculate", " ", "the", " ", "%", " ", "of", " ", "results", " ", 
        "in", " ", "the", " ", "dataSequence", " ", "that", " ", "are", " ", 
        "plus", " ", "or", " ", "minus", " ", "nStds", " ", "*", " ", "std", 
        " ", "of", " ", "the", " ", 
        RowBox[{"mean", ".", " ", "Here"}], " ", "nStds", " ", "stands", " ", 
        "for", " ", "number", " ", "of", " ", "standard", " ", "deviations", 
        " ", 
        RowBox[{"(", 
         RowBox[{"plus", " ", "or", " ", "minus", " ", "the", " ", "mean"}], 
         " "}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nTrials", " ", "=", " ", 
        RowBox[{"Length", "[", "dataSequence", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"mean", " ", "=", " ", 
        RowBox[{"Mean", "[", "dataSequence", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"std", " ", "=", " ", 
        RowBox[{"StandardDeviation", "[", "dataSequence", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{"dataSequence", ",", 
           RowBox[{"x_", "/;", " ", 
            RowBox[{
             RowBox[{"x", " ", ">", 
              RowBox[{"(", " ", 
               RowBox[{"mean", "-", 
                RowBox[{"nStds", "*", "std"}]}], ")"}]}], " ", "&&", " ", 
             RowBox[{"x", " ", "<", 
              RowBox[{"(", 
               RowBox[{"mean", " ", "+", " ", 
                RowBox[{"nStds", "*", "std"}]}], ")"}]}]}]}]}], "]"}], "/", 
         "nTrials"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6068608796163073`*^9, 3.606861055821282*^9}, {
  3.60686109252571*^9, 3.606861128270537*^9}, {3.606861194027713*^9, 
  3.606861344390201*^9}, {3.6069285816065893`*^9, 3.60692861216498*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Experiment 1: Each random variable is normally distributed. The distributions \
are independent. The distributions are NOT identical. \
(Lyons\[CloseCurlyQuote] baking example)\
\>", "Section",
 CellChangeTimes->{{3.6041813028014803`*^9, 3.604181331368087*^9}, {
  3.6069272274343863`*^9, 3.606927229647992*^9}, {3.606928289696711*^9, 
  3.6069282901046886`*^9}, {3.6069304895864563`*^9, 3.606930508058281*^9}, {
  3.6184199227725487`*^9, 3.6184199819911013`*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s try the baking example. Baking a loaf of bread \
involves a number of different random variables. \
\>", "Text",
 CellChangeTimes->{{3.60418149860061*^9, 3.604181545480916*^9}, {
  3.604183952562602*^9, 3.604183970207583*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s begin with a different normal distribution and \
variance for each variable. To aid in the construction of a large number of \
random variables, we create a Normal distribution whose means are all \
different and whose standard deviations are all different but quite low \
compared to the means.\
\>", "Text",
 CellChangeTimes->{{3.606688831139316*^9, 3.606688838919588*^9}, {
  3.606861750873801*^9, 3.606861765397601*^9}, {3.606861840740972*^9, 
  3.60686184140837*^9}, {3.6068618863168697`*^9, 3.606861896468609*^9}, {
  3.6068622700984297`*^9, 3.606862362985771*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"genNormalDist", "[", "mean_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"stdFraction", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "50."}], ")"}], "*", " ", "mean"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Make", " ", "the", " ", "standard", " ", "deviation", " ", "a", " ", 
        "very", " ", "small", " ", 
        RowBox[{"fraction", " ", "--"}], " ", 
        RowBox[{"stdFraction", " ", "--"}], " ", "of", " ", "the", " ", 
        "mean"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"mean", ",", "stdFraction"}], "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.606861854796383*^9, 3.606861902813018*^9}, {
  3.606862366658029*^9, 3.606862491621779*^9}, {3.606862579356385*^9, 
  3.606862580626604*^9}, {3.6068626162397547`*^9, 3.606862618379139*^9}, {
  3.606862701305883*^9, 3.606862745290107*^9}, {3.60690637751451*^9, 
  3.606906379766334*^9}, {3.606906477248253*^9, 3.6069064787983027`*^9}, {
  3.60690656349548*^9, 3.606906564246459*^9}, {3.606908363693448*^9, 
  3.606908364193922*^9}, {3.606908456723769*^9, 3.606908457073805*^9}, {
  3.6069085386246977`*^9, 3.606908539848867*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s set up an nVar number of random variables each normal \
but with different means and standard deviations. The only constraint is that \
the standard deviations are small compared to the value of the means.\
\>", "Text",
 CellChangeTimes->{{3.6068643011964073`*^9, 3.606864384024495*^9}, {
  3.606868912402453*^9, 3.606868913943034*^9}, {3.61841897235065*^9, 
  3.618418978195569*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nVar", " ", "=", " ", "10"}], ";"}]], "Input",
 CellChangeTimes->{{3.606868918405863*^9, 3.6068689546722517`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dists", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"genNormalDist", "[", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"100", ",", "700"}], "}"}], "]"}], "]"}], " ", ",", 
    RowBox[{"{", "nVar", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6068624951370792`*^9, 3.606862515577705*^9}, {
   3.606862568980297*^9, 3.6068626327674103`*^9}, {3.606862675162938*^9, 
   3.606862688097204*^9}, {3.606862750498536*^9, 3.6068627722322187`*^9}, {
   3.606862803346058*^9, 3.606862861584261*^9}, {3.6068629405843983`*^9, 
   3.60686294347957*^9}, {3.606864176789632*^9, 3.606864199139604*^9}, {
   3.6068642369180393`*^9, 3.606864278834988*^9}, 3.606864437290539*^9, {
   3.606868928632922*^9, 3.606868959081833*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"469", ",", "9.38`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"575", ",", "11.5`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"459", ",", "9.18`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"177", ",", "3.54`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"561", ",", "11.22`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"394", ",", "7.88`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"308", ",", "6.16`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"497", ",", "9.94`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"270", ",", "5.4`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"240", ",", "4.8`"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6068625177746964`*^9, {3.6068625709568*^9, 3.606862633930191*^9}, {
   3.606862755117289*^9, 3.606862773075755*^9}, {3.606862846731035*^9, 
   3.6068628761253853`*^9}, {3.606862921219352*^9, 3.6068629447068233`*^9}, {
   3.6068641795693913`*^9, 3.606864200446434*^9}, 3.6068642822628307`*^9, 
   3.606864438780651*^9, {3.606868940699568*^9, 3.606868960049595*^9}, 
   3.606906389037719*^9, 3.606906508984489*^9, 3.606906571618046*^9, 
   3.606908381811658*^9, 3.606908469570162*^9, 3.606908554674202*^9, 
   3.606948645865757*^9, 3.6072078019748287`*^9, 3.607207932607154*^9, 
   3.618419015121167*^9, 3.618504622353202*^9}]
}, Open  ]],

Cell["One trial with nVar random variables looks like this.", "Text",
 CellChangeTimes->{{3.606864488649816*^9, 3.606864502581807*^9}, {
  3.606864602839612*^9, 3.6068646078053513`*^9}, {3.6068689474725018`*^9, 
  3.606868969422235*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vals", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"RandomVariate", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
   "dists"}]}]], "Input",
 CellChangeTimes->{{3.606862879227641*^9, 3.606862905183379*^9}, {
  3.606864395737308*^9, 3.606864413673717*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "471.70502443878115`", ",", "586.3398275289977`", ",", "469.8335608875954`",
    ",", "179.64086514855134`", ",", "546.8020145220343`", ",", 
   "395.71653770445073`", ",", "300.4413534681686`", ",", 
   "493.2570761433186`", ",", "274.6193553960093`", ",", 
   "243.44484516455356`"}], "}"}]], "Output",
 CellChangeTimes->{3.6068629057962008`*^9, 3.606864415861774*^9, 
  3.6068644516749363`*^9, 3.606864793524394*^9, 3.606868974925932*^9, 
  3.606906397569723*^9, 3.606906516246707*^9, 3.606906586033259*^9, 
  3.60690838184766*^9, 3.606908469617051*^9, 3.606908554729437*^9, 
  3.6069486458959846`*^9, 3.607207802027568*^9, 3.6072079326454067`*^9, 
  3.6184190406096277`*^9, 3.618419420189267*^9, 3.618504622381916*^9}]
}, Open  ]],

Cell["\<\
Adding the random variables and dividing by the square root of the number of \
random variables gives us:\
\>", "Text",
 CellChangeTimes->{{3.606864611807568*^9, 3.606864623020756*^9}, {
  3.618419144957321*^9, 3.6184191471869707`*^9}, {3.618419283943246*^9, 
  3.6184193080228567`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tVals", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"nVar", "^", "0.5"}], ")"}]}], ")"}], " ", "*", " ", 
   RowBox[{"Total", "[", "vals", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6068645068654957`*^9, 3.606864520812772*^9}, {
  3.618419315112823*^9, 3.618419352297728*^9}, {3.618419410136306*^9, 
  3.618419413494338*^9}}],

Cell[BoxData["1252.8313089975502`"], "Output",
 CellChangeTimes->{
  3.606864521864449*^9, {3.6068647742345037`*^9, 3.6068647971735277`*^9}, 
   3.6068689807189713`*^9, 3.60690640162586*^9, 3.6069065196844273`*^9, 
   3.606906586127697*^9, 3.606908381882036*^9, 3.606908469670452*^9, 
   3.606908554762536*^9, 3.6069486459495077`*^9, 3.607207802113489*^9, 
   3.607207932698168*^9, 3.618419048774578*^9, 3.618419356744095*^9, {
   3.618419415161368*^9, 3.618419428935638*^9}, 3.618504622398445*^9}]
}, Open  ]],

Cell["Now let\[CloseCurlyQuote]s run some trials.", "Text",
 CellChangeTimes->{{3.6068645550753098`*^9, 3.606864570533668*^9}, {
  3.6068685986028547`*^9, 3.6068686044249496`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nTrials", " ", "=", " ", "1000"}], ";"}]], "Input",
 CellChangeTimes->{{3.606868613612783*^9, 3.6068686200740356`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vals", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"RandomVariate", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
      "dists"}], ",", " ", 
     RowBox[{"{", "nTrials", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6068645769322653`*^9, 3.6068645946156387`*^9}, {
  3.606864629126903*^9, 3.606864634287259*^9}, {3.606868623058442*^9, 
  3.606868637333198*^9}}],

Cell["Add the values of the random variables for each trial.", "Text",
 CellChangeTimes->{{3.606864655046526*^9, 3.606864686716683*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tVals", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"nVar", "^", "0.5"}], ")"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Total", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "vals"}],
      ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.606864690571073*^9, 3.6068647084606743`*^9}, {
   3.606864811935142*^9, 3.606864820387293*^9}, 3.606868643674786*^9, {
   3.606927163003811*^9, 3.606927182306308*^9}, {3.6184190901352177`*^9, 
   3.618419101300905*^9}, 3.618419216981799*^9, {3.618419450997038*^9, 
   3.618419453923208*^9}}],

Cell["See if these values are normally distributed:", "Text",
 CellChangeTimes->{{3.606868538054558*^9, 3.6068685588811502`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"htVals", " ", "=", " ", 
  RowBox[{"Histogram", "[", "tVals", "]"}]}]], "Input",
 CellChangeTimes->{{3.606868568538292*^9, 3.606868577393078*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.469], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.469], Thickness[Small]}], RectangleBox[{1216., 0}, {1218., 1},
      RoundingRadius->0], RectangleBox[{1222., 0}, {1224., 1},
      RoundingRadius->0], RectangleBox[{1224., 0}, {1226., 1},
      RoundingRadius->0], RectangleBox[{1226., 0}, {1228., 3},
      RoundingRadius->0], RectangleBox[{1228., 0}, {1230., 4},
      RoundingRadius->0], RectangleBox[{1230., 0}, {1232., 9},
      RoundingRadius->0], RectangleBox[{1232., 0}, {1234., 21},
      RoundingRadius->0], RectangleBox[{1234., 0}, {1236., 27},
      RoundingRadius->0], RectangleBox[{1236., 0}, {1238., 31},
      RoundingRadius->0], RectangleBox[{1238., 0}, {1240., 45},
      RoundingRadius->0], RectangleBox[{1240., 0}, {1242., 59},
      RoundingRadius->0], RectangleBox[{1242., 0}, {1244., 62},
      RoundingRadius->0], RectangleBox[{1244., 0}, {1246., 83},
      RoundingRadius->0], RectangleBox[{1246., 0}, {1248., 91},
      RoundingRadius->0], RectangleBox[{1248., 0}, {1250., 92},
      RoundingRadius->0], RectangleBox[{1250., 0}, {1252., 89},
      RoundingRadius->0], RectangleBox[{1252., 0}, {1254., 91},
      RoundingRadius->0], RectangleBox[{1254., 0}, {1256., 66},
      RoundingRadius->0], RectangleBox[{1256., 0}, {1258., 71},
      RoundingRadius->0], RectangleBox[{1258., 0}, {1260., 50},
      RoundingRadius->0], RectangleBox[{1260., 0}, {1262., 39},
      RoundingRadius->0], RectangleBox[{1262., 0}, {1264., 23},
      RoundingRadius->0], RectangleBox[{1264., 0}, {1266., 21},
      RoundingRadius->0], RectangleBox[{1266., 0}, {1268., 12},
      RoundingRadius->0], RectangleBox[{1268., 0}, {1270., 3},
      RoundingRadius->0], RectangleBox[{1270., 0}, {1272., 2},
      RoundingRadius->0], RectangleBox[{1272., 0}, {1274., 1},
      RoundingRadius->0], RectangleBox[{1274., 0}, {1276., 1},
      RoundingRadius->0], RectangleBox[{1280., 0}, {1282., 1},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1214.68, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{1216., 1282.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6068685782580748`*^9, 3.606868648589066*^9, 
  3.606869009227743*^9, 3.606906427507902*^9, 3.606906533844841*^9, 
  3.606906586312525*^9, 3.606908382036767*^9, 3.6069084698111753`*^9, 
  3.6069085549200277`*^9, 3.606927189345063*^9, 3.606928532441218*^9, 
  3.606948646075279*^9, 3.60720780342949*^9, 3.607207932839735*^9, 
  3.6184191088318243`*^9, 3.618419221932136*^9, 3.618419473812269*^9, 
  3.618504622556703*^9}]
}, Open  ]],

Cell["\<\
The percentage of results within 1, 2, and 3 standard deviations of the mean:\
\
\>", "Text",
 CellChangeTimes->{{3.606868723715685*^9, 3.606868753727902*^9}, {
   3.6068688120577374`*^9, 3.606868816223525*^9}, {3.606929270485841*^9, 
   3.606929273898283*^9}, 3.6184195057008543`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"percentOfResults", "[", 
    RowBox[{"tVals", ",", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.606869293351736*^9, 3.606869316597967*^9}, 
   3.6069271973563223`*^9, 3.606948937635831*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.671`", ",", "0.961`", ",", "0.996`"}], "}"}]], "Output",
 CellChangeTimes->{3.6068693178289413`*^9, 3.606906458735417*^9, 
  3.606906546124496*^9, 3.606906586448675*^9, 3.606908382180192*^9, 
  3.6069084699396772`*^9, 3.606908555046671*^9, 3.606927198848002*^9, 
  3.606928626556842*^9, 3.606948646432741*^9, 3.606948939952488*^9, 
  3.6072078035900908`*^9, 3.607207932972334*^9, 3.618419488087366*^9, 
  3.618504622575198*^9}]
}, Open  ]],

Cell["\<\
Conclusion: Close to normal even when the CLT conditions are relaxed \
considerably. So the CLT can\[CloseCurlyQuote]t be the explanation for why \
this kind of sum of random variables sums to a normal distribution. Perhaps \
there are other theorems related to the CLT that have much less stringent \
conditions.\
\>", "Text",
 CellChangeTimes->{{3.606988221063676*^9, 3.606988255254107*^9}, {
  3.618419612421996*^9, 3.6184197135151377`*^9}, {3.6184198118590508`*^9, 
  3.618419818043264*^9}, {3.618419876580117*^9, 3.618419896761724*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Experiment 2: Each random variable is normally distributed. The distributions \
are NOT independent. The distributions are identical.\
\>", "Section",
 CellChangeTimes->{{3.618420034985302*^9, 3.6184200381371603`*^9}, {
  3.6184216922714233`*^9, 3.6184217102535057`*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s pick two random variables that we know are NOT \
independent. To satisfy the identical distributions but violate independence, \
let\[CloseCurlyQuote]s pick the temperature at 10 locations that are fairly \
close to each other. \
\>", "Text",
 CellChangeTimes->{{3.618421725359209*^9, 3.618421764492394*^9}, {
  3.6184222565061483`*^9, 3.618422293127904*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wd1", " ", "=", " ", 
  RowBox[{"WeatherData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"45", ",", 
      RowBox[{"-", "90"}]}], "}"}], ",", " ", "\"\<MaxTemperature\>\"", ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2013", ",", "01", ",", "01"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"2013", ",", " ", "01", ",", "10"}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.618422421553561*^9, 3.618422506994323*^9}, {
  3.618422551819298*^9, 3.6184225535547647`*^9}, {3.618424558740645*^9, 
  3.6184245692076197`*^9}}],

Cell[BoxData[
 RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]], "Output",
 CellChangeTimes->{
  3.6184224437584667`*^9, {3.618422481231491*^9, 3.6184225080494013`*^9}, 
   3.6184225545668983`*^9, {3.618424562448942*^9, 3.618424570125828*^9}, 
   3.618504622599288*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "wd1", "]"}]], "Input",
 CellChangeTimes->{{3.618422509947201*^9, 3.6184225129145193`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.618422513464101*^9, 3.6185046226144857`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CityData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<Aurora\>\"", ",", " ", "\"\<Illinois\>\"", ",", " ", 
     "\"\<UnitedStates\>\""}], "}"}], ",", " ", "\"\<Coordinates\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.618422754524762*^9, 3.618422768172797*^9}, {
  3.6184230180391207`*^9, 3.618423031967008*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"41.763455`", ",", 
   RowBox[{"-", "88.290099`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618422788253405*^9, 3.618423035473365*^9, 
  3.618504622652684*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cities", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Chicago\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Aurora\>\"", ",", " ", "\"\<Illinois\>\"", ",", " ", 
       "\"\<UnitedStates\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Skokie\>\"", ",", " ", "\"\<Illinois\>\"", ",", " ", 
       "\"\<UnitedStates\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Evanston\>\"", ",", " ", "\"\<Illinois\>\"", ",", " ", 
       "\"\<UnitedStates\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Des Plaines\>\"", ",", " ", "\"\<Illinois\>\"", ",", " ", 
       "\"\<UnitedStates\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Bolingbrook\>\"", ",", " ", "\"\<Illinois\>\"", ",", " ", 
       "\"\<UnitedStates\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Schaumburg\>\"", ",", " ", "\"\<Illinois\>\"", ",", " ", 
       "\"\<UnitedStates\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<St. Charles\>\"", ",", " ", "\"\<Illinois\>\"", ",", " ", 
       "\"\<UnitedStates\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Elgin\>\"", ",", " ", "\"\<Illinois\>\"", ",", " ", 
       "\"\<UnitedStates\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Wheaton\>\"", ",", " ", "\"\<Illinois\>\"", ",", " ", 
       "\"\<UnitedStates\>\""}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.618423049322023*^9, 3.6184232022322483`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CityData", "[", 
    RowBox[{"#", " ", ",", " ", "\"\<Coordinates\>\""}], "]"}], " ", "&"}], 
  " ", "/@", " ", "cities"}]], "Input",
 CellChangeTimes->{{3.6184232109853773`*^9, 3.618423224214817*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"41.8375511`", ",", 
     RowBox[{"-", "87.6818441`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41.763455`", ",", 
     RowBox[{"-", "88.290099`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42.0359715`", ",", 
     RowBox[{"-", "87.7399914`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42.0463909`", ",", 
     RowBox[{"-", "87.6943525`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42.0351183`", ",", 
     RowBox[{"-", "87.901072`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41.6911195`", ",", 
     RowBox[{"-", "88.1015655`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42.0293508`", ",", 
     RowBox[{"-", "88.0836415`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41.9189392`", ",", 
     RowBox[{"-", "88.3114337`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42.0396386`", ",", 
     RowBox[{"-", "88.3217094`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41.8561337`", ",", 
     RowBox[{"-", "88.1074529`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.618423242922057*^9, {3.618488150652843*^9, 3.618488158811782*^9}, 
   3.618504622683651*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cityCoordinates", " ", "=", " ", "%"}], ";"}]], "Input",
 CellChangeTimes->{{3.618423249491992*^9, 3.618423255360799*^9}}],

Cell[CellGroupData[{

Cell[BoxData["cityCoordinates"], "Input",
 CellChangeTimes->{{3.618423258659417*^9, 3.618423260856819*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"41.8375511`", ",", 
     RowBox[{"-", "87.6818441`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41.763455`", ",", 
     RowBox[{"-", "88.290099`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42.0359715`", ",", 
     RowBox[{"-", "87.7399914`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42.0463909`", ",", 
     RowBox[{"-", "87.6943525`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42.0351183`", ",", 
     RowBox[{"-", "87.901072`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41.6911195`", ",", 
     RowBox[{"-", "88.1015655`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42.0293508`", ",", 
     RowBox[{"-", "88.0836415`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41.9189392`", ",", 
     RowBox[{"-", "88.3114337`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42.0396386`", ",", 
     RowBox[{"-", "88.3217094`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41.8561337`", ",", 
     RowBox[{"-", "88.1074529`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618423261520269*^9, 3.618488167755875*^9, 
  3.618504622716024*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"wdMaxTemp", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"WeatherData", "[", 
      RowBox[{"#", ",", " ", "\"\<MaxTemperature\>\"", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2009", ",", "01", ",", "01"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"2014", ",", " ", "01", ",", "01"}], "}"}], ",", " ", 
         "\"\<Day\>\""}], "}"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
    "cityCoordinates"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6184238985653763`*^9, 3.618423958968096*^9}, {
   3.6184240161627693`*^9, 3.618424051688903*^9}, {3.6184240954326344`*^9, 
   3.618424099079776*^9}, {3.618424144827087*^9, 3.61842422161346*^9}, {
   3.6184243070472403`*^9, 3.618424327202636*^9}, {3.6184881752394743`*^9, 
   3.6184881869255333`*^9}, {3.618490536777011*^9, 3.618490542303029*^9}, {
   3.618493003283025*^9, 3.61849304140985*^9}, 3.618493294364649*^9, {
   3.618493389154765*^9, 3.618493409673365*^9}, {3.618505161830874*^9, 
   3.618505163437937*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"wdMaxTempList", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}], " ", "&"}], " ", "/@",
     " ", "wdMaxTemp"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.618493056622319*^9, 3.618493076729176*^9}, {
   3.618493144589004*^9, 3.618493174830369*^9}, {3.618493219862722*^9, 
   3.618493238159548*^9}, {3.618493270147551*^9, 3.618493277402616*^9}, 
   3.618493424311851*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"wdMaxTempList", ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.618493428896874*^9, 3.6184934352637367`*^9}, {
  3.618493503883541*^9, 3.618493510440332*^9}, {3.6184937219938707`*^9, 
  3.618493796502887*^9}, {3.6184938601610813`*^9, 3.61849386161944*^9}, {
  3.618505205446246*^9, 3.618505254842383*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
iVn/xKi/8X19nzG5r/U4NRw8wJPnH2Lu/8TYv2uGowd63qiTfqp4xoYTwykx
9uPsge7PAxtv+ED7CfkD3c/GD3R9nTzQ/XBKfdz/FvDk+YcY/OGC1kdtQc9H
Efmxf9YXuN7C/wXtZybk5/2FGPeLjJj36QU7/y9YP5P8OD+NiXnfWdD70pR0
9r8favzKD/W+Ej7U+0rNcPRQ74v1h3pfik1f8lD9SU0+e6jxHZh9w4d2/sV4
v0B8x0afGH360M5/i4rLi/gf+QwXtb9fW9T3R9Givn+oL1q/1HCyaP31Rb2P
ZYvWz6Q9yN9wUeOVL+r8G5s9k0WN39T4gyW7/y3p+Tpc0vqpLVn+l7S+60t6
H4qXNB8J5dk/X9L+V7ak8Rgs6X1haPR8SfsxY4x/gf1O2o9+znRJ+3VBqvf/
Uqr1WU61H1BJVX9o9KrhWqrxm0vVnyjV+TJv9tTNnkaq61+can03U81PYuO3
UvjN/rmN30mtHo1/z8YfkA7+/VTn+zDVfteI/MhHnmq/6iDV+TI2+w4tvhMb
/8jiNU11Ph1bfINlta+0jP8Rr/Ky1nPFcLis9Vtd1vFqy2rvnOGI4yEe88tq
f930NZbV/tjsbxo9oX7Y1zL/0mWtj86y9k+zZY3/HvWz32n27xsemj0jw7np
PyCd89nsPTT+ybLW25H5MzV7ji1ewYrGu7Si+sorWo+VFXtfsaL5qa7o+lJb
UfvnDEeG501fnXTY31jR+olXdP40jZ6YPa0VjW9q9I7Zk1l89lZ0fRmsaLz3
Td/Q7B+Zf7nF92BF59PYxj+08SZmz9GKrfcrWi/H5n+wqvVeWlX58qrGo7Kq
9ROSjvWxavy1VZv/q/Z+Y1XX23nTVzd6Y1XrMzZ9zVWth8TsaZn+dFXj31nV
/Tpb1XzsmfzA9O+v2nl1VfM1WrX3kxafg1XdX8bUj/7z4aqe1yarer45WtXz
xdTidWz+Bm09T5Xa2q8rt3X8CjHOb2Fb/au21f9aW9eLubbWV9RW/+fbWl91
09fg+Nz/27ofNdvqf9LW+dEy/rSt+e60Nb5ZW88re23b/w3v017EZ9jW+hm1
7fxGf4APzL9xW8+zh6TjfD5p6/nzqG3nXfLjfndMfn5ftqb0EjH7oWt63q+s
6f0uJD/qo0qMeqqtaX3Nkc7zn/HPr+l5rm76G6SfKnBMOvxpGj1Z0/t+i/zw
JzX5jvFnaxrPvTX73oPysHd/TftjQ9LRrxgRo5+Rr7GfU+ADi+/Y8nFoeLKm
/aAj0z8lxu/Y6ME6cSFfImY/lBj9t8q69l9D0tHPq65rP6dmeM5wZOPN23h1
YvQDG+vWXzN6cx31+ukCJ6avZfam69pf66xr/jLyo7+1Z3hg/PvrWj9D8qN+
RutaT/m69jMPZvqL53iWnyJfh2bvZMZf/I6o/5OFvqnF59jyHWyofGlD41ue
0Qv5yob2q0PDVfIjvrUNtWduQ/t/0Ux/8Zzf0HjUSUf+Ghv6PXdMOuqnafyJ
+dPasP4r+RGPjtmfWXz2zN7BTL7wZ9/GG5KO+I/Mv3xD+9sHFs+x6Ts0eyaG
j8z+6Ya+7zgm/VSBg47aU+poPZc75C+elY7uByHp+F66Ssz3xcTor8wZjjra
r5wnHf3nekfrpdGx+W/0ZkfXl6Sj7+da1I9fauN1TD4jHf7uEcPeQUfX633S
sV8NTX5k4+cdW/8tvmOL/yHj9akCTzr6PcCRyU8tvscmH2zq+KVN/I98ljf1
PFjZ1P0v3NT9trqp49eoD+epuU21JyId++M8MeZTfVPf7zQMx2Z/c1PrIzH+
1qbWd7qp+euY/dmmvl/eo3383mZTz6f7m/a9BuODeh+Z/pz6sF8cbOr+MSYd
56PDTfuez/JztKn1MN3U8+2x6Q+62t8tdTUf5a7qq3T1fUBouNrV/Na66u9c
176fMTxv49W72o9tdDWecVfj3bTxEpNvde37o66erzsmn3V1vuwxPvw+oav3
hf2unl+Hxj/qaj7yrt4HDrp6fx1Tnv0fo0+6Wp9HFr+p+XPc1XoPeipf6mk8
yj2Nd6Wn9Rb29H5TNVzr6f1zrmfvj3qwA3i+p/VZ7+n9ptHT/MU97cc1e9rf
SHoar1ZP75dpz+5/Pe1vZya/R3t5/7fx93vaTxkafdTT+2ROfdgvDnr2Ps/o
h8Ts/1g8jkgHnvb0fn5s+Qm2FJe2ND7lLR2vsqX9lnBL94Mq+YFrxLz/bWm9
Rzb+/Jb1/7bU/obJx1vaT2huaf8t2dL1smX6UvO3Q3uhL9vS+t0zPDD5fbNn
aHhk9uVb2o85sHiNbbxDs39i9h5taf1Ot3Q+HNv4wXb00iMHnsb37yXgP0K+
vK39qsq2+hNua3yr2/a96LbN/221JzL++W3Lv9Eb2zqf4m31v2n0xOxrmT3p
tvafOjZ+Rv3s/xLz/dy27f/bOh+HNt7I7MmpD/k+2Nb1YWzyh9uW/22tvyOz
Z2rxOzZ9wY7ikuHyjs7Pyo7GK9zR+Vjdsf6f0ed27P2f6Z+38es7Wp+NHa3v
eMfmv+lLdnR9au3oep/u6H7dMZztaL9wz/QNdjTf+2b/cEfzPTL9+Y7utwc7
9j3jjvbPDnd0P5yYfUdGn1q8j238YFfjUdq19+GGK7uQw34U7up5oEo6+Gsm
P2c42rXzH+X5PYnxN2y8eFf9ae5qfpJdjV+L+rn+72q+OqTze4xdrd890zfY
tfxbfIZm78hwvqvn04NdPY+PyX+qwIe7ej6a7Op57mhX62Fq4x3v2vcfmcb/
sUzrpZTp+J/I9HxfJh3nzROmr2L0k5m9P860X/9EpvZVTf6pTP2tZRrvZzKr
N9Ixn541f6JM7y8vZHr/n890fryYab7rmcb3jNnbMPrZTPsRMe3D72Km+W2a
P1czvY8kmZ7vbxm9Rf3I1wL5P13gNNP1p01+jNcxe7csXpnVww8sP3tmzwfU
j/vlINP6/9Div2/j/SjT+/4w0/v8jzPtB40y7W/9xOzNTf7nZu+B8f/S4jM2
e36Vab/hMNPvO39j+ZpYfn5v/h4Z/sOsXornlBj9yz9Zvo7Nvz9bfIO+0h/r
a/xKfR3/E321t9zXejrR1/5qpa/vC072NZ5hX+fjE32txyrHw37wlNlT62u9
PdPX++VcX9fTZ/ua36iv9fFCX98fzNM+9JtfNP/q5s8Z09eYxbfAZ6nvcwWO
jf/izL4CN/taL1dt/MTwLcYL/bOW5Xehr/lPTb5t+er0dX5u9XV9z0zfD/pa
f3t9/R73A6MP+jp/PjR79+kPfj/q6/waGv3Hff3ef9TX7/t/YvK5+f9zG//A
6uuXVn9jo//K/Dm08X5j8ZjQfqyHvzf6kdnzh5m/hT9Tq58/9XX/OLb4/Pn/
6f8HO0fC5Q==
      "]], LineBox[CompressedData["
1:eJxdWDFom0cUVoooIohWAVFEELVS1EZNRau0aqu2cnNtDdGgwQ0aNGgQrQse
DFXAgwkeNDjgwRCj/+5+DxoM0eDBFA8eNBgqUkM9mOLBUA8eHOLBUA8KuGCo
h9p67xnep+X49O7e+9733t1//3/np18f/fJGJBKp34hErsbRL9oxY0//+bH/
7ttmhGMdwxYa4x0zMj999fsIJwT/RzjZMX/8m2s8e3GD5qdkfZHGdMdUXj5J
/vbnfcIZiJeV9a8fjHCuY569uPrjQ7LnO+Yy2OWCAuGC+P+YxiLgUsf0WuM3
/371JeEy459LhI3M/4rGCbBXwF4F+2THNK4Ipr8mXGN+pW8I1wV/Qbgh/ph/
U/x9RnhK7B/QOC35ZwjPcLwu69kS/+8Tnu2YK3kfvrxNeK5jHl+6f956h/C8
zP+EcFvqcYfwguTzOeFF4ZOlcQn4LIs9SaMVvT8lvML+HzLuSryPCK+Kv3uE
e4JvEV6DfNaFP+uzIf7yhDfFzv3VF36s/xasH0D+29CvO5D/ruiZIrwH/PZB
nwPx/x7hQ+B7BP19DP5PwN8p4KHwY/3OAJ9LPbnfLsT+LY8B8+F+jQa6HrFA
1yse8Dr2lwCcDHS9U4HWOx3o/DOB3k/ZgPPPEc4F+rzIB7o/C4Hef0XgWwp0
P5QDfR4Yxs8N4QnwVwm0flXAk4y7fD7UJJ9xwvVA79cGxG9C/ClYPy36sv8Z
qE8L9JkNdD/NyXqOPw/x24E+fxZAr0WwL0k83k/LoscDwlbmcz4rYmfclf4o
E14F/z3onzXoj3WItwH6b0I/92H+FufXZzwA+7bYuf47oh/vl12ox57oyfns
Qz4HkP+h8GV/R+D/GPicAN9TyG/I69vf0XgG+p8H5tGVg8c/EL4IzOVh9ST5
F8+PWMJvfU84anX/xazWI271/khY3U9Jq/NNWa1P2up8Mpb4veb5Wav1yLG/
BvPL8/z7zL9g9fO2aLU+JYhXBn4G/E9YvR8rkG/Vav0mwV4T/twfdcAN4NcE
PlOg97TV+2UG9GmBHrNQjznwNw/x26DPAvBdFMznx5LM5/N32erzwFq9X1dk
Pe+HLvBbhf7oyXz2t2b1+bkO8TZEH/a3Cev7Vt+/tqBfBlbvx22r998O4F3A
e7Bf9iGfA+iPQ+j3I4h/LPyZ3wmsP4V6DaG+Z9Av51DPC9Av4rS+UafvbzGn
84k7zTfhdLykY798/06B/7TT53XG6fyyED/ndH3zTtez4PTzr+j087Hk9POw
7PT9wghfuf+D/4rT9+Uq4Enhz/eBGvCpQz4NmN90+nk35fTzdxr4zzh9X205
fn8aIzzr+D6aJjwH+c6D/zasX3D6frbo9P11yenn2zLoYSU/Ph9WoP5dyH9V
+N0l3IP81px+v1kHfTdA303Qsw/9syX15vwGkP826LcD9l3AezB/H/I5AP0O
nX5fOHL6vn8s/Ph96sTp9+NT0GcIfM6gfudO34cvQK+I55H3S9TL+zy9f8e8
GdEbf5Psca/jJ7zmn/SaTwpw2ut6Zrzuz6zXeuW8fn/Ie72/C16+F9D3h6LX
3ydKwv8mzS97/X3BSP78m4B4FbHz+1/Vw/73ut9qXj8f617vlwbk3wR9p0Cv
aYnP/TUjmPujBXgW8p8DPA/6tr3+PrDgdT8vin/WYwniLQN/K3buhxXoj67X
34dWpZ63BiPc8/p70hrMX4f6bQDelPhDwv3r/AlvQb0HsH4b5u9c50f8dqHf
9q7jEd4HPQ683r+HYD8C+zHU4wT65RT6Ywj758zr8+cc9LuQ+t6mfCKhxCMc
DWW/EI6Fen08FL5kT4T6e00y1OdbSuaP0fy0zL9HOCPx7xLOhppfDnD+mg/h
QqjrWQx1v5VCfV6UZT5jI5jrNxGK3uS/AvlWZX6S8CToV4P59VD3SwP0bF7b
H/wP1MvS2g==
      "]], LineBox[CompressedData["
1:eJxdWDFIZFcUnQ0ShkWIgSEMYYizMkkmmyE7SSbJJHGzv5DEwsINFhZTSOLC
FEImYDGEKSxcsBDWQpj/3/uFkCksJFhYTCFk2AhrYWEhrIWFy1oIazEBA8Ja
ZJ1774dzbD7He9+9555735/3/p1ffvv50VupVOrHW6nUzXPwV28Hj1897H7w
+PWDAV5oB2IoyLNhWP8W28E//xVrT57e6g1wsx3cv/38z8b92+LXSuyCl8h/
uR1Mvvgj89ezO4JXLP/Lvwd4NbHL+jXLPyb+6+3g90HC9wSHFD+meBvG722x
dxK71LuZ2CXPlsX7V+zblr8veIf06BLeJT17ZN+j+PvE54DyHZL/EfE9bgdP
nt445AWfGP5E8CmtP6N854ld9Lqg/H3q5yXVc0XxryleKkQ8FGr/sr0BTpN9
OMT4I4aVTyaxyzMbYv5cGIwOCnxH7PlQ9XhXcMHWZ+RZTPgILhn+WHA5RH0r
IepRDXH+x0Psf2DximKfIP/JUOb9py8ET4XBAL54X/C04ZzgGeOveJbqqWm8
Z2OC56j+eaq3HgadN2Se//ql4AVa36D8i2HwprhXD6ufC25afsUtw2l5LlG9
y2bX98uKxuuWBa9SPWuk/3qI74fQ/CvyjM3+qeANW39XcCcMajf/yH0leNPq
vy94y/h8J3ib9Ngh/l3Dn8lz1/xLgnuWT+vbI777hA9oHg6p/iPKf2zzPir4
hPKfWr++F3xG9Z+bv/bvgvrbV/9Y+V2qXi/HBV8Rvjb/b5VnhOuHIqwnHWE9
wxHul5FI+dwTnIm0X1XB2Uj1+kZwLkI++Qj7WaD1RfNXvUuW70PB5Qj7V4lw
XqsR6jUe4fwFxG/CsPKbtPjKb8r0UL2mI+zfjOGvBc9G2L8a4TmKP0/x6qTP
gumhfBsRzssixWuSni2yL1H8ZeOn/FesXtVjleKtEV6n9WGE76+Y+G4Q7lC/
NqkfWxHO7zbptUP1dY3/D/LcjfB90qN53CM99mk+DojPIeU7svqVzzHFP7H4
DwSf2vpA8JnVp3zPyX5B8fvE55LyXdG8XhNOOX2qnkMO+5F2ylfxsMP9OOKw
vxnyz5I953B+85S/4HD/FM2ufEsUv+xQ/4rDflUp3rjD+Qkc6jXhcD4mHc73
FOkzTflmKN8s8as5nNc50mPe4fzVHfZ3gfg1HO63RdNL56fpcN5aFG+J4i2T
/wrVt0r1rJF9nfQMqd6Y+rlBenZI702any2H879N9eyQnl2H+2eX6utRvD2H
v4f71M8D4nNo9ej76sjh7+Ex7ZcTindKep7RfjinfBdm1/NM3+H78tLh78sV
4Wvik/K4n4Y88kl71HPY4/4Z8divDNmzXvOoPedxHvIe+1/wWG+R8pc89qdM
9grxqXrcH+Me9Qg8nh8mPJ7vJsl/yuP9Y9rsY4JnDOv5d5bsNYo35+n87/F+
VDf99Ly94PH80/B4n1wk3KT8LYuneIn8l6n+FfPX8/kqxVsjPusez48hxY89
nvc3LL7edzoe78+bpOeW5ftI8LbH+8+Ox/tq1+P3h11P93+qZ8+wns/3aT4O
yP+Q+B55vE8de7zPnZA+px7v+2dJPcL3POm/4AuP99u+2VNiv0zmR/AV1X/t
8T6eirF/QzHGT8c4n8Ox5lN9RmI8T2dizJ81PCo4R/Z8bHoJLhAu0vqS8bkr
uByjXpUYvy9VY5yH8aRe8Q+sHv3eMWHrX4v/ZIz9nYqxv9NknyH9ZilezfLf
k3xzVN98jN/D6jF9/zO++j5oxHT/T+yyvkn1tpJ+9v4HbZejkw==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdXE2MG+d5Zgs1IAKhZYFFQQRCQwuKyzaCy6RKw7RyPEmUmE3VlrYVm7bX
8diWLVpe25S1lujVSju7y5W4u9zd4e/yoAOB6MCDUPCgAw8COmgFlAcdeBDQ
PegwQXQgEB0YQAEWiA61M++zwPPwMnj4vt/7/33zfe8M+cy7n778/p/GYrE/
+1os9tU1+kxfWPvtS8O/XvvNf9kXzv/8Pj2789+/Mxx38H10STj8/Yzx/0kQ
4aTD8o5gvNFTho8YPmr8fzD+Y8L/rPCnodfw3wn/cefC81//v1+V/sbwc86X
xv0+fSRjOOPcKn3J8JvvGv4O/DL8XcH/YDhl+IST+/XCzH/+7zOGv+f8Ud3z
XzP8j7DHPt8Xetb55h8d/gvDP3C+Mm92528N/5ONf9bwP4v+k6b/qOHnJf4/
NHngf8HGI18O+CPsORL/H/F470diz4/Nn68b/cfG/5fG9xOLv+XJ+4nzlbkv
/vobRj8FeUYHfs6uP4V/Rv8p9Bn9Z6jPFyL6z+x7fF7keHgvCj1neMbk55Af
+/5f7DqN4uEBo75+LvJ/Dv+N/q/GnzQ6MObNabsiPsCo+3+zK+IDDP3/Dnkm
Hxjz4T+Y3wPGPMw7Xyb7ty9lre4dwV4e+Y9wkBf7XoI+Gw+csfHANi8D4LjZ
9zLn03lZ8v2y8Vs9BMCYl6/Y9fs2/hXMZxsPutkbvGL1B//PYD2w8Wfse/gP
DPuBsQ78gu1zfmH2f9vGgw79wBav2Ks8X5xXLf7fsvHAlv/gVaxnNv41pjuv
sT7vNZ5/wWucz1iB56NTkPgXZHyB/Yu9znTndbbPe930IX6v2zjE/w22x3nD
vkf9AFu8gzcsX9+z7980e2yddd6U/L8p9oP/GRs/a1fU/6yMnzV+W3cD0K3e
Ym+ZPbZOO29F9PeyNv4t4zN5AfBxu/6S6Y5g75eR/hcxHnT4/7blH/6/bd8b
9oDN3uBtti/mMj3lRv7cPGHyXOO3+LuuxQPzw+V89CDPxgdCD0GH/+/Y1eZP
Chj5eIfz4YJu+fDesficNP2gP2/637H4GH8IecYfe9euPzD9wPD/Xc6vC7r5
473L9vXe5foIZHyI8Yj/e6L/Pc638x6vx67hIfRjvPnXE3kBsOkLMR77irN2
tXpJAWM9Pcv5c4XuCb0HuskPgC3eoYyPvc/8qfdlPgHbvsUF/w9NP7Dluwfs
mP73nZe/cvg7tm8JQcc+5gPGqQ9Mn413PrD6N+yCH/o/YHt7oFs8A2DLZ/gB
r1exc5yP1DmuH+cc1697zsZZPD1g6D/H60FwTupP9MWKvL6liva91Y8DDP1F
Hu+BjvgX2d4AdMx/YJtfsQ85HqkPJf+C3Q/ZX09wD9jiE8j4EHTso8/z+pE6
z/Fwztt6aPFwz7M87zzHo3ee/Q2AbXwo+mIfcfxSHzG/A4z4f8T14YFu86P3
EddvADrmn+DYnPg/x+ujY/g9s8+dY33eHMerNyf5FxzOSf19zP6mPpb72ce8
3rkfm73wX8b3gKH/Y77fhaBj//aJXU1+6hOmO5/I/Q90q18P2OztfcL6AtCR
f6HHPpX5/6nU/6dSf0L3PjU5qD9g1D8w4i/jYyXWnyjJelDi+siUZL8lOF9i
e1xg87dUkvot8X7DBz/yKeMHwLi/Alv+xiIvFP4pMNafC7z/T1yw7+1+mwK2
/UoG2PazjtDzwCbPFXkloXsXrN7/PsI+6LZf7V3g/f3ggpzHLtj+Nmn+Y7zR
wwu8353K+NhndrXxCWDbn6c+Y/2Zz2S/D367v+U/k/0K6JafktA90C1+PrCd
X3qfcX4Goj8Av+GxyAs/4/hOQcf8v2hX8y8BbPJSFy1+yD/oR83/i2xPXsa7
F9nfEujYn1/k/ZMPuvH3LqIfZP6DjvOU6B8LDkXe9KKc3+btavWQEJwCNn8z
gp15ro886PAf2OJXmuf680SeD4z8A9t5eTDP5+VA9I2BrX5DGT8FRp/wc54f
ic/te+uPpYCtf5IBnkb9Judz7p/lD+hRv8gV/tLn0q/6HP2ISL4P/I0I9w70
m/+CA9E/PqBHnxDY+k9T0R+7xOMTl9CvjeipS+xPBtji4Rzg6JMX7F5ifSXQ
bb3xgK1/5V+y+v0r81/0DYCtHxmIfeNL3G8OL3H/dwr+4xGOXUb9Rjhxmfu5
KcGZy9av/ab5f5ntyV/mfq4L+d+KcAn8ps8Dhv8yvge6fQaXuV8WXJb8g9/6
a+Fl7udOQbd4xcocr0SZ9aXKnL+MYAf8Nl/ywJZfV/hLoKNfecBv/gNb/7IH
bPNjUOZ+c1DmfvpY/AkFTw/8i/hjX7C/iQMcXVPANn8zwu8c0CP5+S+4H+x+
wfaVwI9+sND9LyT/4Ld4DUR+IPrHYl/4BdfHFHT0/xcgP7omFpieWpD8g471
74A/sie/wP64oFu8Swc4+niiz19ge3sL3I8fLEj9L8j+R3C4gPlq/i/I84kr
drX7RQIY939gu39mrki/+ArfT/PgPxpdXWC7P5auSH9V5PuCe8DY/1zh/URw
Re7/4k94hfuxU5EXW+T+bGLRvsf9f5H75RnQ0W8GtvH5Rdbngm77wxIwzi+L
fN7wF+U8vcjnhYHgAPKw/1+U8x7o2P8DW33ErrL9iat8vkxd5X5n5qqcTzEe
55+r7I8r/CXB3lU+X/qQZ/3Q3lXevw6ucr8xAL+dZ8aCw6tcr1PQ8fzkmpx/
rtn3tv9KXeP6ylzj/ZJzjffH+Wt8HnQFlyAf5+drfL73r0k/7ZrkX8YHwGb/
+Bo/PwnFvin48XxxiemJJd7PppbY/swSx99Z4n5tfonPn+4S56+0xPt9b4nr
1Rd9vSWOz0D4gyXu94yXuF8ZLpmf1q+ZCo553J+Je1y/Cc/8sX5n0mN9KY/7
A2mP+0UZj+dz1jO96G+J/pzH+c977G/B4/noejx/ipCP86bH863sSfzF/irG
W735Mr4LuuW353F++h6vHwPxZyj6Aon3yON+z1jG7wkORf/E4/kyFXn7oi+2
zPmIL7O8xDLHNwl+8z+1zPFJL7P+zDLrzy5zvp1ltie3zPHLL0v+RZ4r9hdF
fwl086cMjP7TMsezCmzzwxf93WWu/94y13df5A1k/FDsD4R/tMzzZyz27om+
cJnXi4nIn0q89yVesRXOX3yF50diheUnV9iflOD0CuczI/SsyHcE54Q/v8L2
FwS7Kzyfiiscn9IKx7O8wvH0hL+6Iv1Isa+7Is/7JD79FY7/APxm31BwsML1
PhJ9Y6HvwX70k4HN3skKr9fTFZ7P+xK/2Gpkz6+snuOrXI+JVZ5PyVXWnwI2
/WmhZ1bZ36zId1a5/nKr7H9e5BVWZf6L/OIq10NJ9JVX+X7tif6q4aHtJ/xV
jl9X/O2tcjz7Eq/BKudvCHm2vgSrsv6L/jH02X5lT+wPV3m/Mlnl/fxU9O8L
jlVYXrwi+6EK7w+TFfY/VeH4piucnwz4zb9shf13QLf5matwPPIVnp+FijyP
EXuKFem3VuT+D34b71U43lXx1wc/7v9C71V4PeiLfYMK189Q7AkqXO8j6DP7
x+C3/ewe6LY/Dyu8H5pU5LxX4f7xfoX387E1rpf4GutLrBmf9QeSwDgfAlt9
poEtHxlg8ze7xvFw1jhfOfBbfPNrbH9hjc/PrthbXOP5UFrj82sZ8tF/BDb+
6hr3C3yJTxf8lt+e+N8HRr8W2PobQ2DrnwSCR8Bm73iN++V7oJv/4Rr3WyZr
0u9a4/7fvtBj15kev27yrZ+ZuM79zqTQU8DW/0lf5/5x5jr3c7KCHZGXAz4W
4Tyw9csK17n/5wq9eJ3fVy2J/LLY6wHbp3qd+13+de7Hda/z+5094e8f2BNd
B8A234aCA2Dr740O7ImuY7FvD9j6feF1zucEdOufTgXvS75jNyAvsj9+g+mJ
G1xfyRvsfwrjzf604MwNfp6RFX3ODY5fTuTnb3D9FTA+HWEX2N5/Loq+EuiW
77L45wmu3uB8++J/V+zvHeBofP8G92cHoFv8hzf4+UZwg9/fHon/Y4y3/vce
sH1CsW8i8Z9C/rcjvA+M99WrzB8HNv8SwLYeJauwP8Ip0G19S1d5fc5U+X6T
BT+eHwPbfMlV5Xka6DYfClXOlyv0othTEnq5yuuTJ/5Whd8HtvW3K/73qvz+
bF/8HUj8hmJfUOX6H4F+NLqOZfxelfvfodg3qXL/eyr27lfl+f86xzu+jvqP
cGKd76/Jdd5vpNb5/pxel37xOu8ns+umF/1jYOR/neORX+ffnxQEu+scj+I6
z7/SOq+PZZHvQb/tp6rrnE9/Xe7/4Mf7Keu8n+6v8/5rAH7bHwwRD+ufBqJ/
tM75Ga/z/nJvnffXocifiLyp0PclP7EN5o9vSP432J6k0FMYj/m/wc9XMhus
Lwt+5H+D50tug+stD36jFzY4H67YVwS/6SttcH2WN/h874m+6gbvH33xpyv8
Pegze/ob8r6KyBtu8Hkj2ODzwGhD+j+Qj/4fMPIPbPNrIvmcbnC97W/w+hzb
lP3/JvuT2OT6S27yeSW1yf2P9Cb3bzKbvN/Pij4H+pB/YLM/v8nng4LIcze5
X1fc5PNjaZPP52XIt/h5m1wP1U3u7/ngt35Kd5PPu71N7rf0BQ8EDzfl/LfJ
5+8R6Pa8YLzJ9bQn+kORN4G95s90U87/gmM1jke8Jv2fmvR/avK+Yo3tT0Oe
4YzQszXp/4n8nOjP17i+CmKvC2zxLdYk/zXJf01+nyH+VAX7oq9b4/j1arwe
90X/AONtPg/FnkDsGdW4Hseif0/iE4q9E4nHtMbryX6N6zG2xf2Y+BbXf2KL
5SW35P3QLfY/DX70f7ak/7sl7xdvcb8ut8X+5LfY34LY64q8othbEvvKYo8n
46uiz9/ifHchH8/ntrie+1u8Xg62eH4Ot7jeA+EfCR5Dn9XD3hbPh1DiPRH6
VOK5L/TYNuuLb7O9iW1eb5PbbH9K6GkZn9nmes5u83rubHO/LCfy8tvcny5s
c7242zyfitucnxKw7X/K2/J71G3eH1S3+f7ki31diVdvm9e3vvAPJF5D0R9s
8/5otM335/E219ee+BOK/sk277en27zf2Bf9sR27Yv+3w/uVxA7zJ8GP32sJ
Pb3D8cvsyP4f2N6XcURebofjkRf7CiLfFflFkVfa4Xor73B+PMFV4fd3OH5d
4e8Jf1/8G0h8hoKDHd6fjXZk/y/0PYlPuMP9yskO1+d0h88z+4gPfn/nc3wP
+exf3Gf5h30+TyaEPuNLvfjszxGf7Uv5nL9jPtdf2ufz7HGfzx8Z2G/jT/hc
H1mRd1LscXw+P57yuT+Qg3yrp9M+r2d5yLfzwBmf81MQfbO+vB8o+KyML4o/
c7DH+vElyce80MvA9v7zosTT8/m8WpF4VTHe+iE1xOcP1h8V+S2xv+tzf+Gm
2NeT+N0S+X0Zf1vyM/D5PH/nwN7oM/S5n3dX/A9k/D2ph5H4d1/yMZbxD3zu
T+z53K96KPpDn8+XjyQ+E8GPRd9U5D8R+r7E46kv/29QZ/5DdeaP1zkfh0G3
eCTq7M9MnfstyTrX9xEZnwK29edYXfpJIv94XeZ/ndefE3Wup6zIO1mX5w/Q
b88PTtW535yDvGcjfLrO8c6LPWfq3H8uQL71n2fr/P8jbp37vWfBj352netj
rs71VZL4zkv+ypLfRcGe+FMRe6oSz1qd70e+6GvVub66ku+bEv+e1Mstqbe+
+Hu7zv3ugYy/I/Ebwh97/nO3Lu+Pi//3JD6jOq9n98W+cZ3XiweSrz3Jz8OD
eoiuodTPIxk/EXsei//TOv9+5InEe1/i91T8iTXsauv7oYb0g0G3/vjhBstL
NNi/mQavz8kG3++PNHg/lWqwf8dEfrrB9Xcc9tj9ONPg/caJBt/Psg2+X59s
yO/rhX6qIeeRBp+XTjfkfNLg886ZBu/XC7DX5M0C4/1FkX9W7C82eP82h/Fm
b0n8n2/welmW8YsN3q96kGfrb6XB5+Oq2FNryPzHeNz/Jb5dyf/NBt8/ew1e
n281eD70G1yvt8Wegci7A3tM3xDY8nG3wfuxoMH7nXuS/5H4e1/iOW7w/eeB
4D2J70Op51Dq+ZHIn4j/jwVPJR5PGtwv3Bf8tMH9oFiT+yOHmjw/403uRx5u
cv0kmix/RviTTa7PI032N9Xk+XKsyeentMg/3uT5l2ny+fqEjM82uR5PNnm+
OU1+X/qU0HOi/7TIy4v+M02Ob0HsnRV/XWDrZ52V8cUm95/mJL4lsWde6OUm
z79FxB/PPwRXRF5V7K2JPb7Y32py/7Ar9JtN7tf0RP+tJs+/vtTn7Sb36wbI
l8m70+T+3VDiebfJ/c8A+g3fa/L6N5Lx98GP97Nl/APxZ6/J/auHIi+UeD0S
+yeQZ/X4WPydNvn/TZ5IvPcNz/44wk9Rj3j/v8X8h1ocn3iL7TksONHieMy0
Int+Z/4kW9yvO9Ji/akWx+dYi/1Lt5wvF7uFmT83+48LzrQ4nidkfBb2mT8n
Rb/Tkvkv8nLi72nhz7d4vTjT4vWg0OL6nZV4uS2u57Mt3o8UYa/pnxP/ShK/
+Za879ji+bsodE/sqQi9Cn223tdavD74glstXm+6kG/z+ab41xP9t4CN3hf5
t0X+QOh3MB7vW7Z4Pbnb4vU4kPzea/H6NJL435f6GEt9PRD6ntTDwxbP91Dq
45Hon8j4x1J/U7HvSYvXr33x/6nkN9bm+/2hNvfj4m2ev4fb7G+izfGcaUv/
r833oyMYj/fH2+z/MbEn3eb5dVz0Zdq8/znR5v1VFuOPRvhkm/tljthzqs31
lWvz/vK0yM+L/jNif6HN8Z8VeS70237obJv3G8U270/n2rw/LIk/820+n5Yh
3/afi4K9Np+/KqCbfdU272drbZn/Yn+rzetNV+J5E/x4f1rieUv09cXf220+
LwzavB+9I/YNpV7utnn/HLT5vH1P4jdq83n4vvCP23zeeiD52mvzeeZhW97f
EvwI8bHPRMY/Fvun4Lfz1xOJz77Y81TqK9Zh+qEOn9/jHe6vHO7w+SnR4XjN
dLj/k+yw/Uc68v5gh+fnMaGnO+zv8Y48X+pw/+FEh/sHWfHnpPjjdLj/c6rD
9ZjrcP2d7vD6mO9w/Z3pyPm/w/U4K/65HZ5/Z8XfYkf6fx2ul5LQ58X/ssRn
scPnWU/kVTrRFfVUlfzUQMfv9YHt0xJ7uiLvJjDen+1wv/RWh/tzfcnXbcnX
QPCdDvfHhgf6IvpdkReI/fcEjw7yFcm7L+PHEu8HMh/2ZD48PJAfXUOJzyOp
twnotl4/7sj/GQj9idTvvtj79CD/kT+xXY7/oV3u/8Z3ET/r/+1ivYvoiV2e
3zO7nP/kLus7AnnPRTgFefb/LMfEnrTg4xhv/fQMsH1O7PJ6nN2V/v8ur3eO
yDsl9uRAt/e3T4v/edANnwG23y8Udrk+Zne5PlyJ71mJf1H458Bv62/pYHwk
f36X5095l+tvcVf6/7s8Xypif1Xsr4l+X/hbu/z8pCvyb+7yfO1JfG/t8nrV
3+X7722J10Dyf0fwcFee/4n8YJfvD/dk/EjsvS94LPIfiLw9mQ8PJX6h+PNI
8jkRex+LfdOD+o2uT3Z5vu8Lfir1Eeuy/ENdnm/xLvt3uCv9/y77O9M9sO//
AZn66sk=
      "]], LineBox[CompressedData["
1:eJxdlz1oW1cUx5+LCSIYooAIbhG1EpRWbUWrtEqrJnL7BoE1aFCKBg0aRKuA
BkEU0CCKBg8OeDDEg4f37r2DoRo8mOLBgwZDRWqoBw8eDPHgwSEeDPGggguG
emisc47K+Wt5/HTPx/+ec97Hvfvzs5+efuB53odTnnd9Hf/igf/i3ZPBxy/e
/jjmROD/+U+q9vLV38TJwJ+/+fq39vwNf8ypwH/za+z3hTdx4nRAVy9J1wys
Zyfx/xhzTuz5l5f4N+l/P/CL1wH+ukdcEPsYXYuB/z7Yuye5B8SlwH/56lpw
grgs/mniivjzehXi1cC/Dnoasn6buCnxOX9L4rHeNujvyDrbd4U/oWtP6j1F
vAj6lkDfcuA/HwtMEa+IfZSuq1D/tcCfGzdgjjgQ+yxdHddzkCFeh/r2wX5D
9veYeDPw+++L9fqXHPEWzMO2xLtPPJD1L+m6w/EWviYeQv7dwK9dF8Bx/j3g
fdB/AP04hPodgb5j8D+B/Z0Kf0t8JvqYz8F/JPv5jvgC4l2y/vgj4iuu31u2
90I9X9Mh5+N5iYS8n8+IZ0I9D9FQz38s1P2ZDTkP54uz/UKeOBGyvofESbBP
SbxviNOgLwP6s2CfE/uviPPAPugthLp+RbYfsL4S2JfBvgL7qQLXIF4d4jXY
3n1P3JR6cPyW+HM/26Gejw7o6YZ6nnqhnpdFWF+SfDzvy5BvBfSuwvoa6Amg
Hy7U99M69LsP/dyA/WyGen63xJ/zb4O+AfjvwPwNgXfBfg/qtS/x54kPQn1/
HYo+jncE8Y9F7w90PQE+BT6TejGfQ71HYs/zcgF6LkP9fLuCfnhG72/a6HmN
GN2vGVnn50/U6HmOGR1/1ujnbRziJ4zuZxLypYDTwBnD++D9ZoW5HjnIlzd6
Pn2j+1MALhpdzxL4l6F+FcnP+qpGz0MNuA76GlCPptHz3JL8PJ9tyNeB+F2j
56dn9PNl0eh5WjJ6vpdBzwr4r0p+1rcG9Qugfs7oeVyH+ejDPG2A/SbUewvq
sW3082wAenaMvr+HEG8X5ncP9OzLfuX9L8zfF4eG34+fEh8Z/Tw7hvk9gfqf
gp4zsD83+n08Ev6c+MLo99ul0e/nK6O/HzzL/eX6T1v+n/sbsbr/M1b3M2q1
/piF9z/4x8E/YXV9kxbuf4iXtrq/GVjPgv6csNz/Vs+Tb3V/ClCPoqx/QVyy
uv5ly/2+Q1yx+vu3avn7+CPimujhealbPq/8S+efhqxH6Nq0+nzQsvr7p231
91jH6nnoyvoscQ94UfKx/xLUZxnWV6Qed4lXxZ6/t9dgvwHocxKP9a1bfd7r
yzr/NiDfptXf11uQb1v8R3T+G0z2OxzzjtXnzaHEv0d+u+LP98ue1e+7fch/
AHoPgY+E+Xx1LMz+J6JnivSdTuITn038ic9B/0jm7RatX4j/beJL2P+V1edj
z3F8Pp9MO30+jzg9fzNOz1fU6f7GhO9Qvlkn80ocl3xR4gRwUpj3m3LSf+K0
rGeJMxP9xFkn9eHzv9P1yYue+8S++MeJC073oyj7v0Fccvr8XHb6/q0AVyf1
I/+a5H9AXBd9c8QNsG863e/WZD+Uvz2pF107UP/upF/Evf/X/wMje6NW
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
XTCM+bw7cv4RHBi/nX8N4zwf3eH7WSw4ucP36f4dOf8LHpp+4Ezo4zscD2eZ
z0+5Zb4fuIILy9JvFewvS79imc+74TLfB6Nl2AF6bBj5SMS+Puz5BvFMBQ+X
uT6zZTn/CXZWuH5zhtGfd1fk/L/C68lb4Xr3V+S+vsL5C1c4XpHR7f63Ivd5
wX3hT1c4XkPBmdmD+8BYsHOXce6unP/vsj8Fwd5d7u/5ggPB4V35vnaX6ysW
nAjuC07vcv9liPnOov+TCR7f5X6OE3H/dCrieOci8IE+HbE+V3A+kn5BxP2t
oumz/kbE670k2Bd7yhHXeyC4EnF9hRH3U6oR5yMSexuR3MfMXqzPbZkvEf6d
iNd3X+wfGLb+nMRnN+L8DiNePyOJT2b2oR73ItnvIt6P9gU7q6x/apXlc6sc
r+lVvj+7q2xvfpXjXVjlflFRsLfK8S+twi7M76+yvWWxNxB9lVWOT2j6EJ+q
YXv/iL2NVc5PLPq3Ye9XoCemD+tjZ5Xz2Rf9A7E/Ff93V3k9DsXekdiTrXK9
7a1yvY1F/77Ex1lj+SnBOcHTa/K9QnB+jeNRMAz7i2vS3xdcWuN8+2vsb3mN
/QnWOJ4VoYdr7G91jeMbCb0h9sTi//Yar/dkjfO7I/r6a1wvA4lPusbrZ3eN
329DsWck8c7Enr013t/HEr99iY9Tm3zv+hH2TdW4fnM1nn+6Jv36Gu+3eeEv
1GT9C/ZqbH9JsF/jeJRrnI9A7KkIDmW+ak36j6KvUePzUFzj/GzXeP9LRH7H
5oO9fbF/UOP3dSr27tb4/TI0jPPJqCbnuxqfD/eEPhb79sUfp872ThlGfy5X
53hM1yFn30sM2/qvy/5f53otGr99XxJcqnN9+nVZ/3Wur6DO76eK4ND0o56q
dfl9RJ3PY4263MfqXN/bgpM652vH5oO+fl3yLzgVvCv6h2LfyPTPTMbM5DH/
Xp3rYVznfui+YGed8ZTg3DrfB6bXIYf+jmsY5+38Oq+Pwjqvt6Jgz+SBSyLv
Gx31X5b5A7GvIjg0ftxXq+vSfxR6Q+TjdY7nttiXiP87hq1ft879usEBffKX
rnO/btfouF8N1/m+OhKcrfPvTfdMHv2v8Tr3Z/ZlfmeD+ac2uP+a2+D+5rTx
4/ew7gb34/JGRz+xYPoenODiBvdzPONHP7RkGP0+X/SXN6S/usG/d6wIDkVf
VeQj8b9xgCfxijc4ftsin4g/Owf+TMb+Bt8nB0bH+kolnruibyh4tMH9wGyD
+2t74v/Y9KOfui/8zib7NyU4twl59KenN7k+XKPD/vwmf88oCC4aP/48wSXD
sNcXXN7k/nlgdPw+umIY9HCT81XdlN/rHsw/oTc2eT3FmxyvbeNHfSQSr51N
6deK/QPBqeDdTa73odg3knhlgvcEjzd5/e7LfE6D8ZRh64c3uN8zLdhtcL8x
b/Izk7HQ4P2z2OB+kWf82H9LDfmeJrjc4P0yEHsrwh8aHftxVeiR4EaD96vY
5PG+2G7w+yOReOw0+P3ZP4jvZBzIfKn4syv6hoJHDf6emTX4e+ye4LHw70u+
nKas/yae2/egJu9f000+j7hN7hfnmzxfwfTh/V00bL83bvL3hlKT15vf5PVb
Nnmsh6DJ36cqTV6/YZPXe7XJ8Y6a/L27IThucj63m3xeSwTvmH04z/QN43ww
kPikTf7+sNuU/Eu8R025/zV5Pe01Jf9i/77M72xhBP/UFucjt8XxmDZ+1LNr
GOsrv8X1Vdji9VI0/pnJ6G2x/SWZzzd+7A/lLb6fBEKvGEb8wi2u3+qWnP+3
OD4NsTcWf7e3+HyYiPzOFt8H+lucj4HYn5p+1MvulnzPMDrua6Mtvr9lMv+e
5HO8xfW0L/Y4LV6/Uy08t/N/i+9D0y32z21xPPMmb/3yFt8vi0a370ctjmep
xfb5Lb7Plk3efo/X4n5HpcX9i1BwtcX9osj0YX02jN/6fy2+j263+P6SyPw7
Lb7f94U+EPnU5sf+uNvifA5bfP8eGb/9nrTF98W9Ft9PxsK/L/M7ben/taX/
35b+Txty1v9p8/6UF1xosz3FNteL1+b6KMn8vs0H+8tt3m+DtuS/Lf2/Nue7
KvqjNvdfGm2ul7gt/R+JVyL6d8xe9DP6om8g9qXi/67Eayjzj8T+TPTttbn+
xhKf/Tb3P52O9P863r3NYvHQr16b4FyH5ac7LO922J58h/s1hQ7bX+xwfDzh
L3U4nn6H41fu8PoMhF4Re8MO96OqHfn+KvKNDvef4w7X/3ZH+j+ib6fD9dkX
/wfmv/0+3zD07XZ4fQ5l/pHoy8S/PbFnLPHdF31OV/p/Xfn+02V/prucH7cr
+3+X5y8IvdiV/o/oLwn2u1yf5S7stv8H6Ur/V+TDLvcDq+av/X+Z6bP9v8vv
m9jo9v2vK/0foe90OT/9LudnYPbZ9/su3492u/w+Hor+kchnXd5v97r8vhgL
fV/8c3rMP9WT30P2+Lwy3eP4ucKf77E/BeEv9jAv6J7oLxkd5wNf9JdFf9Bj
fyo96f/2uN6qPTn/2XygN4Q/7kn/V3Ai/Dumz36vLP4NBKc9zvduj89DQ4nH
qMfno0zwnvg/7sn5X+LlxKz/gZj9mzL6zGT8Zczn41zM5/VDsdSL0A/Hcn+M
uf6OCD0fs39PxHyeLZh9WL9PxVJvMdfPi0aHP17M/dk3Yv79WUnse1fi48dc
jx+Kv2XDWK8nY/l9cMz373MiXzH/nvD+D55BGw0=
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYFExwKbbmuLy6QcADzSyZAaAYRCF0BkxeD8Gsm
ODysElnn/lAGwm+Y4NB/6KtGTL8WhN+Cxu+Y4HAYxD3ECOH3THAAG2fLBuFP
gNkHNW/KBAcPkAXHFSH8GWjumYPGXzDBYYdc6+tACzUIfwnMfC4IfwUafw3M
PR/twfwNaO7bgsbfAbMPCvag+f8Amn+OoLnvBIwPDd8zML4OhL6AsA8ArGRi
cA==
      "]], LineBox[CompressedData["
1:eJxdWk2IcucVtmUIEobGghQp0s8vmNam0prWtrY1zW0rxIULE1y4cCGpBRcD
teBCgotZTGAWA/HnqlfvXQzExSyGMoVZuBiopAOZxVBmMRAXLgxxMTSzMGBB
qIt+37zn2D6Pi+/l+d73Pec5P+/fufP8gz+//6dv+ny+f73452X79Ju1LN//
/+Yt64sPg39994vvmv9faH/ItMuW9fGn/46VPv62wQ/aHzDt406eaVct6x8v
h3/69d+f8Lplvf3q55/U3n7F9G92/e884W3LevbRV+9NvveayGlj/x5hf1vk
vWrG77eRX6CN9gTbaG+obT2p++g/hl9Y+4OmjbSt7EsBn71ucLRt/eVJYczg
mOr7ocFx0pdoiz3PDE62rRfKvnov9X2DUyQvrVj8bSkf//SpyezkG5zd8TM4
p/Z8aezJkz0FxQEzvqj+/IbBJZX3I4PLyv81gys0v0p8D0h/rY3xr+v8lYlf
Y2efaZttzI9Dkne0i6/Rf6z6f2DGn+z4G9yi/LB39hrs6PzvGOyR/lPCY5p/
RvzOyd6LXb+x91LtjRj+E41n2OArmj+lfL0m/Tfqj4jBt5T/d5S/92TPjPjP
27j+FiRvSfn0QHweif9qN97Yt97Za/5/Q/Ztaf34OtJKfux1kJ+/g/z2dbz8
AopXhk+wg3xDHWv8Ijk+/+PPDA53jL/e/anBEdIX7eh+YeIZ69D678j6/onB
CZH3WdzgJPWnRP+XvzQ43cH8tTpW6aUCL2lwRu2R8VnlKzhHOK/jf2XaAvUX
hc/k5waXdHzCtGXqryj/NwyudjD/DrT/FwbXOrjf1TsY30YH119T9Yu/DjuY
v0fij7DwOSY+Jzr+ucEtyg9b/S3xdSj+Hvn/VOW/ZfBY+Un+n5E95x3czy8o
/pckb6LyxF9X5K+p9kdNe035cEP+v+3g+rojfE/+nJH/5sR3QfYsO7jfP5D+
R8KrDu7Pa1pfG42n5NtW7f2ttF1pf23aPcU/Nq1fsfDd72J+BLro72AX9Ye6
yC9M8iMiz5P1E+2if2IkL97F+CRU3m9Mm6T5KZqf1vGiz+pa77804GvL4Az1
Z7vov5zKF3vzXcnvlMEFxW8bXCR/lXS+5GNZx4v+iton8al2cf866OJ+WCP7
6tr/psEN0t8kvoddXJ9HFM9j8vdJF/e3lsoX/jb50yHskX9O1d8if0x8zig/
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
bA==
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdkjlPAlEQxzcWhtCoCTHEEDmChqgheOOBDOdyClhTmVirrdVrqPkQ9tZ2
Eiz8CNbEkkYLKxuB/U2xb5PN5Pf+M2+uF7+9v7lbchynMvvn1vu+89g3DsTP
AfGfr4r/PKT6yDNhGUx7r5uDL+Ij8B8cwz+Mf8LSkxZvy3D8m+oP1/BPSXTh
sALvWPn3ZBY87WW34LTUJk+hl49dOIN/Gt7XvuADiw+teo8s/djKf6L1M9dT
dJ1zFg7gfwYn4XM4Bl/IvHx3EoEv4Q04Z83rivgQel7zYcXPRln3XZDHXPDz
+YF+TQE9wX1FWci5ZfSi1oNfiX2xF1PS/rBlP5uy9OcBEd1LxYqv6L7Rq5of
var1M1/X//6Ma+k17Y/4GvcF8atrvOdv6jov+m/A7Ns0NB69ic77ME3r/hb5
U+Rv8T7j6G1sAr1t3X+Nrvux2OnI+3x84x/67+j7wa/r5XN552Kx6TLvqMej
rn9eTg9eJ77HeUb+AdiBzj4=
      "]], LineBox[CompressedData["
1:eJxdXEuIW2l2vhOcIBqTKFAEEYoZjXEmSmISTeIklcSduUkMo4UXmm6nW+mu
nty2y261u7ott8tt2a7HrZetqlJVXT2thReC8UILExTwQgtDLhNDtDBBC8PU
wgsN44UgXmjAAUG8SHff8wm+TwtfPp3/vM//Olfl71+4+s6l33AcZ/M3Heeb
57ef8Cfu22/94meFt98Koy/ecaPnTPR033F7393+n5/M/UGE/Xfcw5//b2r+
8I8jHIL+Q+N7155/bfzvuvPfMMz+pfG/a+N/YPwYH7fneRufNv7zrM8/7177
1uA/NP7zbuaXt2f+7b+g/5/tadgFBj/wCeMHduz5Htvjvmf6f9f4QU8Z/3vs
j/M+x8t9n/X575u90A+6xdvJud/7mr333d8x/pzw58x/6Af9T+35L/Y8afzA
s8YPDP1Cdz5g7H4g8Qfd9IUfRPl6cNq+/9D8/yvj/9C+N7r/oeTvQ5OftHHz
kv959+HXxfmLX/258c/buDPGD/w39vzI7DHsfmT8Vo/+R2xv+JHxIX8/tSfq
R7D/0yh/PzZ7QtCtvp1/ZX9d4L8wfmCzJwSes6cX2XvRcNJje12P5Xkex8sH
3expA8NfoQ89jq/zMctLfizxAIb+j6N89/7W9H9s8bH8tDH+bdMP/HemHxj5
u8D2JoHNPveCxQf6L1i9/Znpv8DrUfuCzTerx/AC18fwAteHc9H8N3+SF+17
1COw1b93UepT+NsYb/rCi7weDi+avRYPZ4HtTS7w+uYK9haMD+vrAtvTtvE/
Rr0tsH1D0edcYvuSl9g+95KNs3x6wH9v+i+ZfuRf6KHRf+aa/kvuO98o+LVh
5zLTk5fte5PnXrZ6+5Hpv2z5hP7LXI/ty5L/yxy/4WWOj/OJPQ0ngbGefcLx
8D5hf32htz/heg0/kfqDfON38jbe4pvM83xy88zv5Vmfn+d4tPMm1+ghsPkz
zEv+P2V68lOeH+6nHF8P480eX3AbGOs1MOb/p6Yf9X9F/L9i35s/7hXm965w
PftXJP5XOF4h+FH/It/5TPR/xv64n7G9HugWLx/Y6rf9Gddz+BnnZ4jxZo+z
yPYnF+17s8ddNH9NnifYX+T50V7k+gwFDxc5n87nbE/yc54f7uey/mI8/P9c
5t/nXL8hxqP+gbH/fGFPk58Exv73Be+/3hey/mI89j9grH+Ch4Kdq7L/XhX/
r9o4o3sy3r/K8tpXpf5Ah/+CnQLXc7xg36MehZ4G3fx1C7x+ZwuyXmC82VsQ
fh/Y4h3I+HaB49Et8HkvFHkDsWdY4PVmLOOda/a0/TV+jff3pNDT1/h86l4z
+afMf4y3/dszeT3DhWtyfhJ9AeT/kfkPeXZe7AKfMP+B7fw8EPrwGp93x0J3
vnS/De8vjT8uOPkl3zfSXxqf3QdcYJsP2S/ZPw90i3fhS5k/oNv4ANjuE22h
d4FxHwQ2+wbAlo8hsOVvDIz7w3X2J36d/U2CbvLSwCeipwts47PAZp93XfIP
OtYvYItPcJ3Xm/Z1vn91xb7wOtfjQPQPr/P5dAy62eMscX3EBSeX2N80sNHd
JbYvK9hbsvnxJ+a/yPOBLd+B4DZwwvxf4vtxCLrpG8j4IbDdd8fAFh/nBt+f
4zfse7uPJ2+4316Pt3/1H5H/oNvHveH+5zfm/Pw75j/o4x9F/k/Hm/+C/Ru4
f4eR/6DPRLgNHDP/b1j/5LfMf+C3zP+p/sjeocgbT/2J7HO+YvvjwL+O6Mmv
2N/0FEfyXKFnBXtTbP4DW3584Jj5Dwz/gc2f7lccr1DoA9E/BE5G48fAJyPs
3DR534tw/CaPTwInIpy+afX9exF2b9p6+fsRzmK8xceT8QXQT0TYv4l8mv83
OT/tqbzo2QW2+gyBrT4G4P8/y7/IG0/l2afI9RMvMj0JbPWcLnJ9uKBbPrPA
tj54U3nRswD+75j/U37zHxj5B56NcFfo4dQey3+R5+tQ/BkLdm6xP/FbbG9S
6OlbrM+djo/syd7i+HtCLwi/f4vtDYTeBj/qX+SHU/nRZzAdH9k7vMXr5fgW
6tHG3eb1JH5b/L/N8tK3Jf/T8eb/bfF/So8+BZHnA1v9BqK/LeO7wKj/2+zP
QPiHtzG/zf/b0v+7w/T4Hfse5587vH+nQbfzhHuH998s6Ceipye4INi/I+c/
0E1fG9j27y4w+oF32J8B6LbfDUXfGNjOM86yPXH+Abb9Nwls+Ukv237+/Qi7
y3weyS5bPmw98Ja5/1FY5vuBD/l2XwuW5T69zPedruBwme8DA8jDfQfY7BsD
m33OCucvvsL3jeQK3z/Tgt0VPl9lV6RfscL3kcKK3N9WzA7cf4Bx/lmR898K
12O4wvePgfgzlPHjFT6fO6v2NP74Kp+HkoLTq9jvzP9Vyf8qx89b5X5OYVXe
z6xy/oJVuc/DPstnFxj95VU+Xw7EnuEqx2cs2Fnj+MbX+H1Jco3vj+k16Y+v
Sf4Fe2umx9aLwprcf0R+sMbxaK9xvLpCD9e4/zIQPIR+6/+M17jf5Pgc35jP
+Yv73H9K+MaPfqnP8zXlc78nLfxzvsRPxmd8zn9W7Mv5El+f6zvvy3zzeb0p
+rwe+ZBv8SkB4z7m83xvib62z/noCO76PN97oi+U+PSFfyD0I4nXEPJM/kj0
jSU/E5/7Oc46y4+t83yNr3O8Eutcv8l1tje1zvlLr7O9c+vSX17nesysm12G
s+tsb06wJ/ryIr8g9hXXZf2FPquP0jr3NwOR11qP3h/88B8i3Aa/5bMjuCv2
9dY5H6HEpw/9mM+Qh/wDI//rPF9H61zvY4nvRPLtbDB/THB8g9enxAbLT26w
f6kN9j8t4+c2OP6u0DMbHJ/sBsc/t8H+eBtcD3mhF4S/KHR/g+NREvsC+GP2
teAv+r0bPF86Yk9X9PUkXuEG12df8EDsORL5ww1eT0fAWO/F/onY42zy+7DY
pn1v/PFN1pfYZPuTGG/6U5tsb3qT4z8n2N3keGY2eX3JCj0n8r1Nnj/5Ta6f
gowvbsr6v8nxLsEf268D8a8F+9Gf2+T50RF7u4J7m7w/h5ucj77IH4g9R2L/
cJPPLyP4Y/eJ8SbP54nY62zx/hbbkvPwFutPAON9OTDmPzDyD4z9f4v9dQVn
MN7ymd1i+3NbHB9PcH5L7huQh/UfGOcv8a8EjH608LckXm2R1wE2elf4e1ty
fhN6X+QNgO08ewRs94OhjB9t8e9dxoIn0I/fn2zb0/IdAzb5cWC7LyW2pT+8
zfWWwnjcl7b5PDYn2JXxGWDLRxbYzus54BPR0wM2f/Lb7F9Bxhe3+f7iY7zd
b0riX7DN94vWtuQf8q1eOsDo1wLbfbwHbP2MENj6FX3RP5B8HAkebnO/ZbTN
/ZnxNveXJtPx1v+9C3siegzY+nFxwYm7/Pu9JOjWv00BW38mfZf7i3PT8dHT
Bbb+Xkb0Ze9yvzcHOvqrQs8LfwHY+oXFu9J/nMqLPqUpjp7BXe7PtiRebfGv
c5ffn3Xv8vrcAz/eX03jFcnv3+V+/OAu92+PRP9Q8Ej8H4v8iYx37nG9xO4x
PQ5s8U4AW76TglP3OB9p0M2eOdHnCs4If1b4c8DWP/eArV+fl/GFe5zv4j2e
D774WxJ/Ahnfmo63/rzgjsSrC2zx7wkO76FeItwXewei/2gqP/oMBY9E/hj4
BxGe3OP3HU6Jx8dK8j6oxP2QREneD5e4v5yCPLwvBr+t33OgG3ZL3C/MgG7z
Lys4V+L56IFu8c/L+EKJ+9vFkuRf/C2BH/1oYLOvBWzreRvY1utOifefrsjr
ib2h6O+Djvf5go9KvN4MEV/rx45K0u8ucX98IvlydmT+78j7gB1evxI7xoff
y+yw/hToFp808InoOQds8XSBbb/IANsnO8Xht//mduT9gtif3+H5U5DxxR1e
T/0d3m9LO1zfgfjf2pH9H/bh/L/D563uDv+eoyfxCYFNf1/sGezw+fZoh+83
Q9E3Ev6x6J/s8Hxzdll/bJfrIw66nTcSwHg/Dmz1ndpl+WnQLZ5zwDY/3F0+
X2V22f7sLp/Pcru8nni7vD7lRV9hl+djcZfvY/4ux6ck9ge7PH9aEo82sNnT
2eV8dcWfntgT7vJ9pb/L953BLt/XjqAP+Qe288RI4jEW/RPBzh7Xd0xwfM/G
4f63J7+P2uN4pvbY/rTguT22z4V8i0dmT/IPusUzt8f9Dm+P+3X5Pen/7HF/
p7jH/Qt/j+uvJPIC4W/tyf1fxneg33BX6D3hD+Gf1U8fGL/nkfgf7XE/Yyjx
GO1x/2Qs8Z/scb05Zbn/l+176xfFy6wvATp+Hwhs/CnBaZE/V5b7X1n6P2XO
T1b05yAf+S9L/kG3/lWhLPkvy99nCL0k/EGZ51+rLO9nxN5OmftvXcG9Mtdn
KPL6Zc7fQPQfSX6GYv+ozPU3lvhMytwvc/a5nx3b5/5UfJ/jkdjn/nRyn/u3
qX3u76X32f65fY6Hu8/9xcy+5F/k5fbZP0/sywNj/gPj/c8+zwd/n+NREnsC
8Fv9tYCR/32uz86+vP/Z53rrifxwn+dvX/BA4nck+ob7fB4YiX9jiedE5DkH
jGMH0v8XnDjgekseyPov49MH0v85kPd/wp854PhlD7g+cwdcn96B9H8PON6F
A15viwfmt62nvuAS9Nv6GICO/q/gtuDOgfxe4YDz3RP54QGf3/oHfN4ZiPyj
A16/h6Db+jo6kP6v8E+E3znk81TsUPq/ghOHsv8LPXVocvF72UM+X83JeFdw
BvbYfSJ7yOel3KH8vlTszx/y7xsKh7z/FA+5/vxDXm9Lh5J/4W8dcvzawt+B
/1ZP3UM+X/TE3lD86Yu/A8hD/++Qz0dDwSOxZyzxnBzy+2snYPqxgOMXC2zc
ieh5PODzcBz8Rp8JpF5E/mzA8zEp+k5Cn8UjFbB/pwK+n6Qx3uJ9WvBcwPE9
I/a6Iu9swPfrTMD1fi7g9Swr/p4Xf3MBz+/5gPuvHuy1z4Lw5wOun0WJfyHg
++oS5Nn9pSjjl0G3ePoifwt086cUcH+iHHB/IBD9dYlvC/LsvvtA7GlLfB5K
/Dvgt/vmI7GnK/Y8lvj2Au4HPAm4PxKKvqcB3//6Ab8veBbw/B2I/ueB9Otg
v/V7Xoj+oeh7KfEaCX4l/o9F3+uA/557IuPfiDynwvE6VpF+UIXHHxccr3D+
ZyrcX0lUuF83W2F/kxXe705WZD+BPlv/Tgl/usLrw+kK19NcReZ/hfPtQr71
e89ivP1eOzOVH+Fz4l+2wvV8viLvKyr8e975CuononsVfp+yAHusf50Htvgu
AtunIHhJ8lcUf5crXB++8G+J/SWJZxnjrf6DCtd/vcL11pL4PBB6W+x9KPI6
Fa7vR4K7sMfm12Ngy1evwv31J8IfSj6fin39Cq/Hz6T+B1J/z8X+I8n/iwrv
N0OR93Ka/+g5muYner4S+8dT/si/1zIfJ+LfG8mHU+X6OFbl+ohVWf/xKY4+
cWB7fzJT5fglqnzemq3K/l/leJyscj2kqrw/narK77GrvB6frvL6MVfl8/iZ
quz/VT7PnQW2+0dG8Lkq3y+yVT7fn5fxOfF/HvHC3/MD23liAdjWu3yV62ux
yvejQpXXz6Uq579Ylf0f8m099EXfluSnJPRyledDIPmrV/n82RL8QPLZlnw9
FHmdKu+/j6p8Pu5W+Xz2WOzvwX6L1xPhD6u8Hz/FeNzHJf7PJL4Dse+51NeR
4Bfi/7DK+9NLyddI9L+CfejvA5s/r6t8f5lU+Xz9BuPx9+c17h8cq9n3Vp+x
Gtt3HHSLb1zGz9Q434ka1+dsjedrEvzWnzkp8lI1np+nQLf8pIHt/n+6JvO/
xuvFmRrPT7fG/aSzNfk9oth7rsbxzNa4f3G+xv29XI3vj/M1Xg880b8Af9DP
qnE/ZRF0y0ehxvleqvF+XazxfWW5Jv3PGs+XrRrPp5LksyzxC2rcD6zXuN/Y
EvqDGvdr2qL/ofjTEf8fCX9X4v0Y9lk990T/E8FhjfuRT2U+9EXfM4nfoMb7
y3OJ11GNf1/5QvQPRf9Lyf9I4vlK/B3X3K8Xn9szv/2PEX5d4///YWL6//2f
IvzG5PvWT3PqzH+szv7G6jwfjtfZ37jgmTr35xJ1zsdsXfrHdbbnpOhPQb/Z
d6rO/cC02He6zvvxnOg7I/a55v9/m7yzQs/UOd/nxN5snevlvIzPCZ4Xez3R
t2DysR7mQTd/FkVfoc71tQR+01eU/CwLvy/x2arzfCvVeX6W67x+BXVeX+p1
Xh9asMfWvwdCb0t9PKzzetqp8/r5CPJMf1f0P67z/OsJ/YnkI5T4PpX664t9
z+o8XweIj41/LvhI4v9C6nco9ryU+h0J/yvJ11jq5bXwTyTebwQ7DY7vsQbv
l7EGx+N4g/2PN1j/TIP7vYkG79+zMj7ZYHtPNnj9TzW4Hk81+PyblvGnG3L/
b/D54wz04/+ra/B8PNvg+s40+DxxrsHnt2yDz0fnId/OL7kG1+O88HsS74UG
ny/yIn+xwefBQkP6fw0+jxaFf1mwL+O3JH4lkV+Gf1YvgfhbB7b51pJ4PgAd
fz/V4PP4Q/GvI/RHUl9dyLP4Phbca3C9P5H8hw3uJz1t8P2jj/F2P38m8RoI
fi7xPWrw/eKFyBuKvpcN7seNZPwric9Y8vNa4jOR+L2R+eg07Wn2HmtyvyDW
5H7D8ab8fyFNvu/PNLmfkGiyfbNNvt8km1xvJ5ucjxTsQ/+vyfMx3eTfd50W
e+eaHM8zQnch3z5nRV+myffdc6Dj//tpcjzPg46/V2nK/Bf5XpP7HQugW3zz
wBaPRWCrh4LgJfGnKP4uN/k+6ks+tiT+JbG33OR6DcT+OsZbv74l9j+QfLSb
3G992OT+Y0fkP2pyP60L+ej/if898f+J0EPBT6X++03uzz4T/QPBz2U+HDW5
n/ZC6EPJ38smrycjydcroY+bPL9fy3yaSPzeQJ/1Q537HP9j99nf2H3mP34f
+Y/o8fts/8x9ti9xn/vns/e5/52E/lSET96f9mv/H7gdq+c=
      "]], 
     LineBox[CompressedData["
1:eJxdWDFoI1cQ1QUTxCGIA+IQQeR0h3LR5USiJEqiJHJuC4FVqFCCAipUiEQB
FYIooEIEFS4ccGE4Fwb93f8LQ1S4MMGFCxWGiIshLly4MJwLFz7OhSEuFHDA
EBexNTNL5qn5PM2fmTdvZnf/7oPvfvzmh9cikci3dyKR23X2yw69hbsvfu0u
3J3McG7oRf7/ywuO01oYei9/jv+2+DJJuCj292j1Qn+KVxp647d/+evrwiPC
5aH30yzhPcIVwFWJ/xbhGuD60LuJdhPy399nuBHipzPclPxTwi3BUfJvy/5X
5N8ZeuXbBH8+pH3doffHP5nGs+d/k70n+rxO/v1QL9o/gPxLoOdyGJ/wCsRf
FX6cfw32r0P9RvzvEHZQzwbUO4J+bob+9P8W6LUNeCfEFH8M/Hch/gTseyE/
ircPfA/A/xDwEeh7HOpB+06gf6fA/wz4n4N+F8BvGvInfAn+V7D/GuwRo+PP
Gd2/qNHzFDNaj3mj88cBJ4zOnzS6nymj5zNtvGfPbze8STgD9qzh6y9DOGe8
+7ME9wnnjda/EPInexH4eZLvMdlLsL9svNFN8hevPiJckfwJwlXANeBfB9yA
/U2oryX2e4TbhuZlkfN3DFz/Rs9Xz/D960PCfcP9ztI6EByldQn6sSz+7xBe
Ef58v1yFetaEzwPC64AN6/f9x4Sd5H+f1g3Z/4TwyHiN2wQuT3hT6i8S3pL9
nxLeBj12IP8Y+rsL9UzAvgd67wP/A+H/iNZDwSlajwSnaT2G/pxA/lPWe/wF
4TOuP/kJ4XPQ50L68wHhqeRjvS5Fv88JX4F+1xKf80V8rfecr6+nqK/1jPl6
PuZ9XU/cZ70KhBPsv/gZ4aTYFwinfObBfNLgn/F1P7Kyn/XNMf9kjnDe1/oU
hD/Pf9HX/fZ8PU8lX/ejDPaKr+8HVdhfE37cv7qvr8eG7Ge+TV/3qyX7vyTc
lnicvwN6dsXO/etBvD7oOfB1/5cAL/t6/lYkPvuvQv418F8HuwG9HMTfAP4j
0GvTh+sf6tsG/XfAPpb4X9G6C3gi/Dj+HsTbh/4fAJ9D0PcI/I/Fn/t5IvV7
hE8Bn4n/U8LnEp/tF6DvFObjEvhd+fr+dQ04Euh4c4G2RwPdr1ig+zkPOA77
ExAvKfs5XypgHtyvNPhnwD8bsD5sz4k/15sHewHiFQM9r16g+1MKtH5l0KfC
8QusdxXqqQkfnud6oOehAbgZ6Plqgb0N/DoSn+e3K5jz97g+x/Z+oOdnAPUt
QbzlQM/fCvBbDfT1tQb6rEM8A/wdzMsG9GcE87Ap/nw/2IL+bYNeO9CfMdSz
C3gC/nswb/tQ/wHwORS+jI8C/Xw5hnpPZD/HO4V6zgJ9PzkHPheBft5OA30+
uJT4fL66CvTz7zrQz8uI5VWe/1bziVrd35jVes1bPf9xicf2BPgnxc7zkLK6
/2ngk7Faj6yF69/q/uRhf8HqeShafZ7wrNajJPnZXrb6eVSxfD5/l3DV6vNd
Tfg8JFwXzOenhsTn/jQtn7feINwSO3+/aFt93u4IHz5/dq2et57V89GH/AOr
z3dLUM8y6LMifOT8L5jPX2vAZ13y83nYAB9n9bxuWP2+M7L6fWgT9Nyy+vy5
Dfl2rP7eMrb6/XbX6ve7CcTbk/r4etm3+rx2APkOrX7fPAJ8DPWdSHz2PxXM
v7OwP8T3POw/4Qur31+n4s/fTy7DeSJ8Bfja6vfxiGN/7uecYP5FnZ6/mNP9
nAccd5pvwsn8EU5KfOabApx2mm8G/LOCnxDOOfm+RzgP/AtO97/o9Pc9z+nv
HSWn56fs9PtxBXAVcA1wHeprOJknwk2n+92C/W2n+91xep66Tn/f7EE9fenH
Y8KD0H/yH1yayVk=
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
XTCM+bw7cv4RHBi/nX8N4zwf3eH7WSw4ucP36f4dOf8LHpp+4Ezo4zscD2eZ
z0+5Zb4fuIILy9JvFewvS79imc+74TLfB6Nl2AF6bBj5SMS+Puz5BvFMBQ+X
uT6zZTn/CXZWuH5zhtGfd1fk/L/C68lb4Xr3V+S+vsL5C1c4XpHR7f63Ivd5
wX3hT1c4XkPBmdmD+8BYsHOXce6unP/vsj8Fwd5d7u/5ggPB4V35vnaX6ysW
nAjuC07vcv9liPnOov+TCR7f5X6OE3H/dCrieOci8IE+HbE+V3A+kn5BxP2t
oumz/kbE670k2Bd7yhHXeyC4EnF9hRH3U6oR5yMSexuR3MfMXqzPbZkvEf6d
iNd3X+wfGLb+nMRnN+L8DiNePyOJT2b2oR73ItnvIt6P9gU7q6x/apXlc6sc
r+lVvj+7q2xvfpXjXVjlflFRsLfK8S+twi7M76+yvWWxNxB9lVWOT2j6EJ+q
YXv/iL2NVc5PLPq3Ye9XoCemD+tjZ5Xz2Rf9A7E/Ff93V3k9DsXekdiTrXK9
7a1yvY1F/77Ex1lj+SnBOcHTa/K9QnB+jeNRMAz7i2vS3xdcWuN8+2vsb3mN
/QnWOJ4VoYdr7G91jeMbCb0h9sTi//Yar/dkjfO7I/r6a1wvA4lPusbrZ3eN
329DsWck8c7Enr013t/HEr99iY9Tm3zv+hH2TdW4fnM1nn+6Jv36Gu+3eeEv
1GT9C/ZqbH9JsF/jeJRrnI9A7KkIDmW+ak36j6KvUePzUFzj/GzXeP9LRH7H
5oO9fbF/UOP3dSr27tb4/TI0jPPJqCbnuxqfD/eEPhb79sUfp872ThlGfy5X
53hM1yFn30sM2/qvy/5f53otGr99XxJcqnN9+nVZ/3Wur6DO76eK4ND0o56q
dfl9RJ3PY4263MfqXN/bgpM652vH5oO+fl3yLzgVvCv6h2LfyPTPTMbM5DH/
Xp3rYVznfui+YGed8ZTg3DrfB6bXIYf+jmsY5+38Oq+Pwjqvt6Jgz+SBSyLv
Gx31X5b5A7GvIjg0ftxXq+vSfxR6Q+TjdY7nttiXiP87hq1ft879usEBffKX
rnO/btfouF8N1/m+OhKcrfPvTfdMHv2v8Tr3Z/ZlfmeD+ac2uP+a2+D+5rTx
4/ew7gb34/JGRz+xYPoenODiBvdzPONHP7RkGP0+X/SXN6S/usG/d6wIDkVf
VeQj8b9xgCfxijc4ftsin4g/Owf+TMb+Bt8nB0bH+kolnruibyh4tMH9wGyD
+2t74v/Y9KOfui/8zib7NyU4twl59KenN7k+XKPD/vwmf88oCC4aP/48wSXD
sNcXXN7k/nlgdPw+umIY9HCT81XdlN/rHsw/oTc2eT3FmxyvbeNHfSQSr51N
6deK/QPBqeDdTa73odg3knhlgvcEjzd5/e7LfE6D8ZRh64c3uN8zLdhtcL8x
b/Izk7HQ4P2z2OB+kWf82H9LDfmeJrjc4P0yEHsrwh8aHftxVeiR4EaD96vY
5PG+2G7w+yOReOw0+P3ZP4jvZBzIfKn4syv6hoJHDf6emTX4e+ye4LHw70u+
nKas/yae2/egJu9f000+j7hN7hfnmzxfwfTh/V00bL83bvL3hlKT15vf5PVb
Nnmsh6DJ36cqTV6/YZPXe7XJ8Y6a/L27IThucj63m3xeSwTvmH04z/QN43ww
kPikTf7+sNuU/Eu8R025/zV5Pe01Jf9i/77M72xhBP/UFucjt8XxmDZ+1LNr
GOsrv8X1Vdji9VI0/pnJ6G2x/SWZzzd+7A/lLb6fBEKvGEb8wi2u3+qWnP+3
OD4NsTcWf7e3+HyYiPzOFt8H+lucj4HYn5p+1MvulnzPMDrua6Mtvr9lMv+e
5HO8xfW0L/Y4LV6/Uy08t/N/i+9D0y32z21xPPMmb/3yFt8vi0a370ctjmep
xfb5Lb7Plk3efo/X4n5HpcX9i1BwtcX9osj0YX02jN/6fy2+j263+P6SyPw7
Lb7f94U+EPnU5sf+uNvifA5bfP8eGb/9nrTF98W9Ft9PxsK/L/M7ben/taX/
35b+Txty1v9p8/6UF1xosz3FNteL1+b6KMn8vs0H+8tt3m+DtuS/Lf2/Nue7
KvqjNvdfGm2ul7gt/R+JVyL6d8xe9DP6om8g9qXi/67Eayjzj8T+TPTttbn+
xhKf/Tb3P52O9P863r3NYvHQr16b4FyH5ac7LO922J58h/s1hQ7bX+xwfDzh
L3U4nn6H41fu8PoMhF4Re8MO96OqHfn+KvKNDvef4w7X/3ZH+j+ib6fD9dkX
/wfmv/0+3zD07XZ4fQ5l/pHoy8S/PbFnLPHdF31OV/p/Xfn+02V/prucH7cr
+3+X5y8IvdiV/o/oLwn2u1yf5S7stv8H6Ur/V+TDLvcDq+av/X+Z6bP9v8vv
m9jo9v2vK/0foe90OT/9LudnYPbZ9/su3492u/w+Hor+kchnXd5v97r8vhgL
fV/8c3rMP9WT30P2+Lwy3eP4ucKf77E/BeEv9jAv6J7oLxkd5wNf9JdFf9Bj
fyo96f/2uN6qPTn/2XygN4Q/7kn/V3Ai/Dumz36vLP4NBKc9zvduj89DQ4nH
qMfno0zwnvg/7sn5X+LlxKz/gZj9mzL6zGT8Zczn41zM5/VDsdSL0A/Hcn+M
uf6OCD0fs39PxHyeLZh9WL9PxVJvMdfPi0aHP17M/dk3Yv79WUnse1fi48dc
jx+Kv2XDWK8nY/l9cMz373MiXzH/nvD+D55BGw0=
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYFExwKbbmuLy6QcADzSyZAaAYRCF0BkxeD8Gsm
ODysElnn/lAGwm+Y4NB/6KtGTL8WhN+Cxu+Y4HAYxD3ECOH3THAAG2fLBuFP
gNkHNW/KBAcPkAXHFSH8GWjumYPGXzDBYYdc6+tACzUIfwnMfC4IfwUafw3M
PR/twfwNaO7bgsbfAbMPCvag+f8Amn+OoLnvBIwPDd8zML4OhL6AsA8ArGRi
cA==
      "]], LineBox[CompressedData["
1:eJxdWk2IcucVtmUIEobGghQp0s8vmNam0prWtrY1zW0rxIULE1y4cCGpBRcD
teBCgotZTGAWA/HnqlfvXQzExSyGMoVZuBiopAOZxVBmMRAXLgxxMTSzMGBB
qIt+37zn2D6Pi+/l+d73Pec5P+/fufP8gz+//6dv+ny+f73452X79Ju1LN//
/+Yt64sPg39994vvmv9faH/ItMuW9fGn/46VPv62wQ/aHzDt406eaVct6x8v
h3/69d+f8Lplvf3q55/U3n7F9G92/e884W3LevbRV+9NvveayGlj/x5hf1vk
vWrG77eRX6CN9gTbaG+obT2p++g/hl9Y+4OmjbSt7EsBn71ucLRt/eVJYczg
mOr7ocFx0pdoiz3PDE62rRfKvnov9X2DUyQvrVj8bSkf//SpyezkG5zd8TM4
p/Z8aezJkz0FxQEzvqj+/IbBJZX3I4PLyv81gys0v0p8D0h/rY3xr+v8lYlf
Y2efaZttzI9Dkne0i6/Rf6z6f2DGn+z4G9yi/LB39hrs6PzvGOyR/lPCY5p/
RvzOyd6LXb+x91LtjRj+E41n2OArmj+lfL0m/Tfqj4jBt5T/d5S/92TPjPjP
27j+FiRvSfn0QHweif9qN97Yt97Za/5/Q/Ztaf34OtJKfux1kJ+/g/z2dbz8
AopXhk+wg3xDHWv8Ijk+/+PPDA53jL/e/anBEdIX7eh+YeIZ69D678j6/onB
CZH3WdzgJPWnRP+XvzQ43cH8tTpW6aUCL2lwRu2R8VnlKzhHOK/jf2XaAvUX
hc/k5waXdHzCtGXqryj/NwyudjD/DrT/FwbXOrjf1TsY30YH119T9Yu/DjuY
v0fij7DwOSY+Jzr+ucEtyg9b/S3xdSj+Hvn/VOW/ZfBY+Un+n5E95x3czy8o
/pckb6LyxF9X5K+p9kdNe035cEP+v+3g+rojfE/+nJH/5sR3QfYsO7jfP5D+
R8KrDu7Pa1pfG42n5NtW7f2ttF1pf23aPcU/Nq1fsfDd72J+BLro72AX9Ye6
yC9M8iMiz5P1E+2if2IkL97F+CRU3m9Mm6T5KZqf1vGiz+pa77804GvL4Az1
Z7vov5zKF3vzXcnvlMEFxW8bXCR/lXS+5GNZx4v+iton8al2cf866OJ+WCP7
6tr/psEN0t8kvoddXJ9HFM9j8vdJF/e3lsoX/jb50yHskX9O1d8if0x8zig/
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
bA==
      "]]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdm0msI1cVhktRECaKkBUayUATKi8ROGFyGB9DSDHGzE4gaWcgVHcnxEyJ
Q0/uMdVvSBsIxMu3yKIkWLwV8tI7SmERL1iYFV5WxAJLYVESg8yOdNf/Gd3f
i7763jn3nuHeW3XrVPUdJ5576Omboih6281RdL2tf9X9UfhLQmwkYds0PqK2
+mPdtqz/UeNY3Crqdsv632X678eu9NvIxfeY/ofEseQfEd8j7ojvFd9r431M
3BB/3Pz9hPiI+JPm/6cYT+2nkSvP22bvM+L3iz8r3hJ/zux93vy5z+x/weT3
i5m3RK3mL4P5fTG0l8Hk80uh/xnMvH9ZrfKcwczrV9RqHjOYefiqyWH8/1rI
GUx+H8C/+pdtWG039DeDGf/roX4Gk99v2Pgw6+WbyGvOYPbJt9Rq3WYw6/rb
IWcw9r8T2suMo++afzD7rqdW6zwxzmD5V8DsowfDeBJY85cZFzD+P2T9Ye3z
DNb6KWD24ffUal8lsPZlBmu8Aib+74f+JTDxw4q3gNnXD4f6ycOhfgZjH2b+
H1Gr9Zc8EupnxgXM+jgW2kuOJbPb9994cFv7Kztm/Y8l73tTPLv9Xfp7X/xO
9e8nz993y19/N9xSf1j2ir76cV19NJQnj+rv2H801C/Qv0N/f0yt7gvJY6F+
Bmu+i8eSJ15+9d/to1xnH1er62jyeNJ9/cKRPzwg/Qw5/sNcf55Qy/zD9Id1
nS3EGdftH4TyRJzpOp7BrF/0yd+TarVeE5j192Qd7yvi4knNL/H/UK3WY2Kc
wfK3gLnPpGq1f2IYf1LZF6ep8sv+Rl/+5MaFcQmzf48n14d/4mWt3/i4/s58
HA/1U1j3xey48qH858flr+6DBfqSl8eT3w/fXIAnuW+eUKv8xCckZz+f0Piy
l6KvfGWw/Mth5begv+7bpcmjk2olj2GNl5zUelc+0pPKv/KZWf9c8tewT3/F
V6JP/E9pPMUXP6W/s55g8g9rvAxm/mHsw+Tf+kdPq8U+rHgSWOeW1DiDdc7J
YZ1jCljnltI4+lHIMazxE1jjpbDWVwaTf1jro4CVvxLm/vFM2D9+JpQnJk9h
7Js8h7VfC5OXxtFAreYnhjUfySDUT40zWP7kJi9g9j9M/D8OOYaZf+PUOIO1
nnKY6zWseErrH/0k1I9hxZPA7H8Y+ybPYa63sPZDaeNHPw05hokfln8pzP6D
tT5z48L6lzZ+9DOzb5zA7D9Y42cmz2Hyb1waRz9Xq/zEMOc5WOsnhYnf+ucw
9k2/hLn/PBuOHz8byhOY+59xBsvfHOb6Z1waR8+p5foHM/8mT40z4xwmfhuv
NI6GYf8mzH6AtR46MPMDa//2bLwUVrxD65/Byv/E+uemPzV7hfVfGJfWv4J5
bn9erc4fTVj32xjWea0D63koMXkP1nkvNR7a+JnJJ7DOqzms8/sU3qrbAtbz
wwLW801p+pXJo1+o1fm7aRzDst+BOe/D2i89mPMKrPkYmjyDiR/W+Tw3+RTm
ecL8W5i8hDW/lfkbnQr7N2HFF8Oy3zml8+pWzYnp94xTWPEOYc7np8Lz3ETy
TPr5KZ0f7655Sn+ex40XxiWs82x1Ss9fPL+f1vhaD83T+rs4Nu4YJ/RX/nrI
iR/WfAxPy/6divN0+Lw6QZ/5h/W8PIVVnylg5Wdh/pXWv4KpE54J57N5JtSP
YdUrOhuu60sJrPpZD9YvPZP8p339BL6s9YdnkhuP2/v/rDk7o3zcXtTxb+zX
nJ9Jbojvu0nxb8ZX/LDysTD/Shuvgteqj50N+zfPhv7FyPXrbLgeLzF5zziF
5c8Qpt4Gq141OZvc2A6v31Zzfjb50/XpefW/df6n6CueYjN+LV+Y/fKs8ntX
rV+d1XzfXXN0TvqqrzbhO2qO4aM1d4wT4x6s+nR6TvWV99Q8PKfnsztrzs4p
3lsVP/2V3xxW/qab8eu2OBeuj4X1L2Hlt9rI9RuF4zdHoTw2eWcjr9sE1n7p
wbp/pKPk4vXwLvxL84+ceuWmf82TkfL1jprzzXg1T0dhvgobb7Hxt14PpcVT
jZK7bzwQ/1n1x/MWv3F8PuzfOZ/84/r2eOMvdf8E+c21/d5Gv+bUeAhrfWTn
w/U9Qa54cus/Pa/8vFXxm38L43IzXt1WG/tqL2h/sP8vhPoxzPxfCK9nyUa/
9qdnnF4I4xvaeJnZm8BaX/mFcP1Mkd9WtwX+c/5BrvVYwrofVCaPLoby5kVd
H7j/I9f9uAPrPJBc1P2L8x9y3d9SWPezIbxVt5mY+uDE7OVmbwpTD4Q/XLcL
WPuvvMj1r+YK+UfVXtL1SPfP5qXwfhxf0n5TfjuX1E/3+wT+gOKH1T+F5e9Q
vKmPItfzxgSmngHr+W1qXFwK68EL5DzvS/6K9Cviebf0Lqv9oOKHqQdeDuuf
HfFR6jOwni966p/xvG7jDdEn/ss6/zH/l5V/+ZPTX+e16eWwPlkgJ371n1Fv
Qq71VMGcf6+E8ias9RvDOi91rsi/LcV/RftF6693RflSPlL6E/8Vq88jVz4n
MPMPK1/TK+F8FOb/4kr4PqJErv1ZwZx/Xwi5CWs/xLDWUwdWvpMXNJ+aj57J
U5jzP0x9H1Z+JuKMegJy5WcKU194IXno+oTcq3rMgv7iEn3VZyrjNxWD+Bqw
8t8UZ6qvtsSJxo/Rl7wNUy+AtR+2Yd7XmL2ucc/0+zDPl7DW0wDmedPiG8E8
f5m/Y7M3Mf0DGz83+aHZm1o8M7NXmHwOa34XJl9aPkuzvzL9ynht9qOr4XgN
WPE3YcXbMo5hrdc2zH6x8bdh6ovGXRuvB8v/vo2Xmnxg9ofm78jkmfUfw1rf
E7N3YPIc1n46hLUfpmZvZvaKq7qeK/75VV2/1X8hfa4Hy6u6/lHPYzytl9XV
8H1ORX/5v1b/o9T/dsL3Q40d/V32mju63kveQs77ip3wftZGzv7fCf3ZRi79
ZEfxa/wuLP3eTpifvtlPYeVrAGs+hvLvFc3XSPKM9yf4p/yMkcu/CXL5d8D4
7H/Gl/7hTvh+cWr5mO2E7ysL8Uzjz7Gv/C/Ir/KxtHyX2JP+Cn+43ls+14zP
d0G7avX+qwFL3twN10dr194X7ob34zZy+dehP/tf42e8X9oNz1Nd7Cu/PVjj
9XeVP3G6G66PAfriIcz1fzc8H2X4o/yNkXMeM38OjHNY8R0q/tc4ryIXz7DH
+xlY/efo63yw2A3fjy+JX/e/Ens6n63oz3nP7K+Noz2NJ3uNPf1d56UmLPst
WPMd74Xvx9vImX9Y+3UbVvwJrPXWhZWPno3f39N88z7aeEB/zlt74foawcy/
6Y9h5n9P+WX+98LvH3L0Nd6h/PmbeIr/sj9Dn/cXe2H9d27jLWCdZ5ewnq9K
83+1F55/K+u/Jh6+o9xXq/XTgDV+E9bzcmtf9Yf31hzvazytjzb6PC/ta34U
3zZynp/EmeLtIlc8PfOvb/6l++Hz6gD5Vt0O98PvnUbIqT/CyscYVj1gAms/
HCjeBxRfbvEfok+9DlZ9ZQbrV5j+HNbz+8LiWRqXm/GKG/+uNuPV9ZZqX/Wa
Vc1rsx+9GHIDph4K63vPFqx6XPxiWI9rI6detBm/brdNnth4XbPXg/X9ah+m
vgSrfjiw/kPjkfXPLP6x+Tcx/QNY9bvc9A9fDL+nmyLX/psZFzbe3PK1MP+W
xqXxyvJRGa83+jVH18L+DVjxNq+F9cbWNdWb315zjL78b1v/Diz72zDzb9y1
8Xqw1kcf1vpMYc3v4Br1nZqHm/hqHm3s1fshM/n4mtXjTX5g/uaWv0PTn1r8
M+PiWvj+Z27xL66pfvqWmpdmr7yW3JiOW/5ex7Oy/hWs793Xlr9oHOo3YL0f
asK6XrbGOo/oehojV/22PQ7rjR3kun5uj3W95v05ct1fujZeD1a++xuu403H
4fuqgfUfGo9svAzWfhsbT2Bdjw/M33wc1p8PkVOvs/6zcfi+pjB/5rDqbwtY
96Ol+VeafGXzVZm/a9OPfqlW+WkYN2Fdr1qwzouxyduw4u3AOk9tw1t1m8Dy
twsrHz1Yv/5GrvnfyOt2YPKh9R+Zfmb+jM2ficV3APO9Eaznh0OY7zVgrYcZ
rP1RwJqPufEC1nljCVPftvFXZr+y/K9tfqJfhf40YOYflj8tk8fGbVjrrQPL
3jbM9yOwrgddmO8JjPumn5r/A1jzNzT9Ecz3Wzb+2PybWDwHJs9hzn+wzq9T
WNe/mckLWOfhOazn9wWs8/MSpv5n8a3grbqtLP9rm8/o12E8DZh6OKzzeQum
/gdT/4MVTwfWftmGuf7Dup50Yc1nD1a++mY/hZWvAczzP6z5HsHU/yy+sZjn
8wly6n8w7ydg6R9a/6nJZ5avwvybW/4XxkvLZ2n5Xtl4lcW7hnn+fykcr/FS
qN+E5W8Lpv4HU/+BNZ8dWPndtvESmPqf2e8Z983fFKb+A2u+hrDqCyPrn5n+
2MabmP0D8z+3fByavanJZ2avsPHnMO/zzN+ljVeavytY660yf9Ymj36jlvqf
mPXbRK791YI1XgzLnzZM/Rem/mvjJcZd0++Zvb7pp2ZvYPKhjTeCmX/rP7Z4
JqZ/APP8D3P/h3lfZ/IZzPzD2i9zmPm3/kvj0vxbGVdmb23y6Ldqef8HU/+H
FU8LZv+bftu4Y/23Yf5/kcm7xj2Y+i+s+Uph6v8w7/9g3T9GMP/fEtb1dQxT
/4N1/TqANV+52Ts0/6fm/8z6F2Z/bv4tLF9Li6c0/1aW/8rsrS2+6GW13P+N
m8YtmP+vBev81Ib5XsB4G9Z5KDHuwjqv9Mxe3/xJYeVjACtfQ+MRzP+fMh6b
/gRm/k2eGx9avFPzd2byAtZ5Zw5v1e0C5vkP1vm2tHytzN/K7K0tn9EktH8z
rHgasOzfCvO9uPERWPZa1v8ozPMjLH/u+j//D2hpn50=
      "]], 
     LineBox[{{1035., 5.}, {1036., 13.}, {1037., 13.}, {1038., 11.}}], 
     LineBox[CompressedData["
1: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
+eAr7en3y4yZn2W8Lwue4Xz0c2aJ0S/KebpfMzfRl3+Op/un857eL3nqY70X
icHvEjH4XPZ0f2EFOMT5WjD5Fzn/UvgtUY73y1VP9xfXPF2fZc5n/99z7ttL
j/5H8tmgPvipkE/wW/VQP08I3qQc799bnu4PbBv/tQnfEr9r4vGpD3uh0d+d
5Cfx7VGOfvH+JB/0/z3d7zs063nkoT81EHnX6B8bfnqG/xNP979PDe5zP4xk
/hnlfcHnzAf9s4Gn+30X3F9fir1L1t9jIr9iPOj3XrMecF4NPd1vuPF0v2jk
6efF2OR36+n+aKRFf4KjLd1PnKIc6xUjxnrFibn/W7CP5890i/GKfpL4ZcEp
zn9RcLrF80xwhvrA2ZbuN8609PeeWdrDfs21wAf26xwx+m+OsTfP+a+Kvzzz
QT9/cZKf4CXqAy8To5+/0tLnS4Fy9DeLLX3ellrsh8v81ZY+f9c4/4GMZWL0
r9eJMX+jpfvxFeO/Sv9fov9Pfp6T+VtGvs357P9N4hF9l/w8Ldin/0cEh7T3
mdjbndSPyPdaul+9Tzn6zweTfPH9b6KP738tfd51W7pffTyxJ/96hv8TY++0
pc+LvonvbLI/sP/pbyDzB5N6kPGihf2K58ulyefKxHdt6nNo5Dct/b1gZORj
sz9uDf8RX8cf9cEf6nnK1/5jvs4v7uvzMUF7yGfa4KSv6zFFOc6PtM/vcYIz
vr5/Zn19v5rx9f1zlva/EH85X5/Hc77+/uXQPs7PeV8///I+7vN4fi9SjniW
fH2fXvb1/WfF19+/Csz3gYxFXz9PSyb/VV/309d8fT8q+7q/v077uI9s+Pr9
pGL4qDI++Ns08W35+r69TTn4qRGDD9fX9wvfN/d/E9+uj/sS+NujnO//lON9
88DX79OH5APxHnE+npdd4CrsH/v6/aBHOeI78XV/9NTX75t9E/+ZqYdzX98f
B6a+Ljgf63lJjP7Bla/7z9cm3yHjhf8bzod8xHpF/2HMfIBvgRfQH4i09feZ
aFvzN9VGfnh/jrX1+3S8rd8XE23ki3imYY/97iTmLyCeFP2hf5EmRnyZtn5/
ztI/7qMztA8+Zjkf+jnmB77nqI96cNq63zZP+4gn39b9qkXO5/e/tu73LLfN
/d/gQlv3h4tt3Z8rMX70W1bpH3iN/qFfbuvvh+tt3Q/dIN+It8L5yKfa1t8v
NpkP4tsy8WzTHviptXV/3KU+/Plm/UJi2N9l/oh/j/6xnvuMj/1/sx6HtId4
jmgP8q6J75j5g58e5wOfUA57p8Zev63301lb91PPaQ/+Bsb+BTH7/4wP/fAr
8of518SQD438xqzHqK37dWPmA75vzfpGOro+oh38HfU61UF+0I9B/0Pspzj1
2f8jhv50Rz+/kh19vqU6+rxIUx/2Mh0df5b+gWfoD/thlvOBcx3d/5kz/pyO
7p/OUx/85Y39RRPfUkd/j1ymPdT7irFfoD3UQ9HEU+ro+l6lfcxfI3+YX+7o
82W9o78XbNAf6q1CPtn/N/Y2O7q/vdXR9b9Ne+Cnxvzg36Wc+5/xgL/Q1NMu
+QRfe9QHv/uMF/KDjj6vDw2/R8Z/1+R/3NHPxx4x4juhffg7NfXWZzx8/nfw
fET/+Zz+cN8aUB/1f2HsXVIf8V91dD/6mvsT+sOO7n/dcD6eZ6OOvo+OjfzW
8BkJ9P0mGmg+pgIdTyzQ513c4ESg9990oM/nZKCfr6lA55cOdD1kAl1/WdpD
fcwEev/NBro+coE+7+YC5I/1c6gPPA8572d5YsgX6R/9gyVi3P+WA30fXAl0
/6xg/BdpH/3gEjF+D7ca6PeDNfrD/bIc4P6F+9g6/SG+Dc5HP6kS6PeFKuej
X7QZ6OfvFuOB/W36fyC4xvXEfJf6sO/TPu6/YaDvk7uB7ofvBfp9fN/we2D4
PKQ/5HdEjN/bdYnRXzgO9Pthj/HhfeWE/nCfPaUc7z995ot4zib+8PtfgweB
7t9eUI5+9mWg+5NXE7nEe8180W8bGvs3ge53jChH/2kcsD8g+HbCL97/Q/39
JRrq3+9NheDrUZHHqI/zLR7qekuEfN8Vf9Mh4nlecJL6iC8V8ve8gtOh7rdl
iNGPytIe+nMz9Iffy86Gul+Voz74maM9/J7Xof+k4PmQv0cUnOd89D8Xycf/
BC+F/D2q4GXqY31WaO9hsVegf8RfpD7Wu0TM/p+xtxbqfnE51N+P1kP9e+aN
kP1hwRXae6r3fzSAH98=
      "]]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
XTCM+bw7cv4RHBi/nX8N4zwf3eH7WSw4ucP36f4dOf8LHpp+4Ezo4zscD2eZ
z0+5Zb4fuIILy9JvFewvS79imc+74TLfB6Nl2AF6bBj5SMS+Puz5BvFMBQ+X
uT6zZTn/CXZWuH5zhtGfd1fk/L/C68lb4Xr3V+S+vsL5C1c4XpHR7f63Ivd5
wX3hT1c4XkPBmdmD+8BYsHOXce6unP/vsj8Fwd5d7u/5ggPB4V35vnaX6ysW
nAjuC07vcv9liPnOov+TCR7f5X6OE3H/dCrieOci8IE+HbE+V3A+kn5BxP2t
oumz/kbE670k2Bd7yhHXeyC4EnF9hRH3U6oR5yMSexuR3MfMXqzPbZkvEf6d
iNd3X+wfGLb+nMRnN+L8DiNePyOJT2b2oR73ItnvIt6P9gU7q6x/apXlc6sc
r+lVvj+7q2xvfpXjXVjlflFRsLfK8S+twi7M76+yvWWxNxB9lVWOT2j6EJ+q
YXv/iL2NVc5PLPq3Ye9XoCemD+tjZ5Xz2Rf9A7E/Ff93V3k9DsXekdiTrXK9
7a1yvY1F/77Ex1lj+SnBOcHTa/K9QnB+jeNRMAz7i2vS3xdcWuN8+2vsb3mN
/QnWOJ4VoYdr7G91jeMbCb0h9sTi//Yar/dkjfO7I/r6a1wvA4lPusbrZ3eN
329DsWck8c7Enr013t/HEr99iY9Tm3zv+hH2TdW4fnM1nn+6Jv36Gu+3eeEv
1GT9C/ZqbH9JsF/jeJRrnI9A7KkIDmW+ak36j6KvUePzUFzj/GzXeP9LRH7H
5oO9fbF/UOP3dSr27tb4/TI0jPPJqCbnuxqfD/eEPhb79sUfp872ThlGfy5X
53hM1yFn30sM2/qvy/5f53otGr99XxJcqnN9+nVZ/3Wur6DO76eK4ND0o56q
dfl9RJ3PY4263MfqXN/bgpM652vH5oO+fl3yLzgVvCv6h2LfyPTPTMbM5DH/
Xp3rYVznfui+YGed8ZTg3DrfB6bXIYf+jmsY5+38Oq+Pwjqvt6Jgz+SBSyLv
Gx31X5b5A7GvIjg0ftxXq+vSfxR6Q+TjdY7nttiXiP87hq1ft879usEBffKX
rnO/btfouF8N1/m+OhKcrfPvTfdMHv2v8Tr3Z/ZlfmeD+ac2uP+a2+D+5rTx
4/ew7gb34/JGRz+xYPoenODiBvdzPONHP7RkGP0+X/SXN6S/usG/d6wIDkVf
VeQj8b9xgCfxijc4ftsin4g/Owf+TMb+Bt8nB0bH+kolnruibyh4tMH9wGyD
+2t74v/Y9KOfui/8zib7NyU4twl59KenN7k+XKPD/vwmf88oCC4aP/48wSXD
sNcXXN7k/nlgdPw+umIY9HCT81XdlN/rHsw/oTc2eT3FmxyvbeNHfSQSr51N
6deK/QPBqeDdTa73odg3knhlgvcEjzd5/e7LfE6D8ZRh64c3uN8zLdhtcL8x
b/Izk7HQ4P2z2OB+kWf82H9LDfmeJrjc4P0yEHsrwh8aHftxVeiR4EaD96vY
5PG+2G7w+yOReOw0+P3ZP4jvZBzIfKn4syv6hoJHDf6emTX4e+ye4LHw70u+
nKas/yae2/egJu9f000+j7hN7hfnmzxfwfTh/V00bL83bvL3hlKT15vf5PVb
Nnmsh6DJ36cqTV6/YZPXe7XJ8Y6a/L27IThucj63m3xeSwTvmH04z/QN43ww
kPikTf7+sNuU/Eu8R025/zV5Pe01Jf9i/77M72xhBP/UFucjt8XxmDZ+1LNr
GOsrv8X1Vdji9VI0/pnJ6G2x/SWZzzd+7A/lLb6fBEKvGEb8wi2u3+qWnP+3
OD4NsTcWf7e3+HyYiPzOFt8H+lucj4HYn5p+1MvulnzPMDrua6Mtvr9lMv+e
5HO8xfW0L/Y4LV6/Uy08t/N/i+9D0y32z21xPPMmb/3yFt8vi0a370ctjmep
xfb5Lb7Plk3efo/X4n5HpcX9i1BwtcX9osj0YX02jN/6fy2+j263+P6SyPw7
Lb7f94U+EPnU5sf+uNvifA5bfP8eGb/9nrTF98W9Ft9PxsK/L/M7ben/taX/
35b+Txty1v9p8/6UF1xosz3FNteL1+b6KMn8vs0H+8tt3m+DtuS/Lf2/Nue7
KvqjNvdfGm2ul7gt/R+JVyL6d8xe9DP6om8g9qXi/67Eayjzj8T+TPTttbn+
xhKf/Tb3P52O9P863r3NYvHQr16b4FyH5ac7LO922J58h/s1hQ7bX+xwfDzh
L3U4nn6H41fu8PoMhF4Re8MO96OqHfn+KvKNDvef4w7X/3ZH+j+ib6fD9dkX
/wfmv/0+3zD07XZ4fQ5l/pHoy8S/PbFnLPHdF31OV/p/Xfn+02V/prucH7cr
+3+X5y8IvdiV/o/oLwn2u1yf5S7stv8H6Ur/V+TDLvcDq+av/X+Z6bP9v8vv
m9jo9v2vK/0foe90OT/9LudnYPbZ9/su3492u/w+Hor+kchnXd5v97r8vhgL
fV/8c3rMP9WT30P2+Lwy3eP4ucKf77E/BeEv9jAv6J7oLxkd5wNf9JdFf9Bj
fyo96f/2uN6qPTn/2XygN4Q/7kn/V3Ai/Dumz36vLP4NBKc9zvduj89DQ4nH
qMfno0zwnvg/7sn5X+LlxKz/gZj9mzL6zGT8Zczn41zM5/VDsdSL0A/Hcn+M
uf6OCD0fs39PxHyeLZh9WL9PxVJvMdfPi0aHP17M/dk3Yv79WUnse1fi48dc
jx+Kv2XDWK8nY/l9cMz373MiXzH/nvD+D55BGw0=
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYFExwKbbmuLy6QcADzSyZAaAYRCF0BkxeD8Gsm
ODysElnn/lAGwm+Y4NB/6KtGTL8WhN+Cxu+Y4HAYxD3ECOH3THAAG2fLBuFP
gNkHNW/KBAcPkAXHFSH8GWjumYPGXzDBYYdc6+tACzUIfwnMfC4IfwUafw3M
PR/twfwNaO7bgsbfAbMPCvag+f8Amn+OoLnvBIwPDd8zML4OhL6AsA8ArGRi
cA==
      "]], LineBox[CompressedData["
1:eJxdWk2IcucVtmUIEobGghQp0s8vmNam0prWtrY1zW0rxIULE1y4cCGpBRcD
teBCgotZTGAWA/HnqlfvXQzExSyGMoVZuBiopAOZxVBmMRAXLgxxMTSzMGBB
qIt+37zn2D6Pi+/l+d73Pec5P+/fufP8gz+//6dv+ny+f73452X79Ju1LN//
/+Yt64sPg39994vvmv9faH/ItMuW9fGn/46VPv62wQ/aHzDt406eaVct6x8v
h3/69d+f8Lplvf3q55/U3n7F9G92/e884W3LevbRV+9NvveayGlj/x5hf1vk
vWrG77eRX6CN9gTbaG+obT2p++g/hl9Y+4OmjbSt7EsBn71ucLRt/eVJYczg
mOr7ocFx0pdoiz3PDE62rRfKvnov9X2DUyQvrVj8bSkf//SpyezkG5zd8TM4
p/Z8aezJkz0FxQEzvqj+/IbBJZX3I4PLyv81gys0v0p8D0h/rY3xr+v8lYlf
Y2efaZttzI9Dkne0i6/Rf6z6f2DGn+z4G9yi/LB39hrs6PzvGOyR/lPCY5p/
RvzOyd6LXb+x91LtjRj+E41n2OArmj+lfL0m/Tfqj4jBt5T/d5S/92TPjPjP
27j+FiRvSfn0QHweif9qN97Yt97Za/5/Q/Ztaf34OtJKfux1kJ+/g/z2dbz8
AopXhk+wg3xDHWv8Ijk+/+PPDA53jL/e/anBEdIX7eh+YeIZ69D678j6/onB
CZH3WdzgJPWnRP+XvzQ43cH8tTpW6aUCL2lwRu2R8VnlKzhHOK/jf2XaAvUX
hc/k5waXdHzCtGXqryj/NwyudjD/DrT/FwbXOrjf1TsY30YH119T9Yu/DjuY
v0fij7DwOSY+Jzr+ucEtyg9b/S3xdSj+Hvn/VOW/ZfBY+Un+n5E95x3czy8o
/pckb6LyxF9X5K+p9kdNe035cEP+v+3g+rojfE/+nJH/5sR3QfYsO7jfP5D+
R8KrDu7Pa1pfG42n5NtW7f2ttF1pf23aPcU/Nq1fsfDd72J+BLro72AX9Ye6
yC9M8iMiz5P1E+2if2IkL97F+CRU3m9Mm6T5KZqf1vGiz+pa77804GvL4Az1
Z7vov5zKF3vzXcnvlMEFxW8bXCR/lXS+5GNZx4v+iton8al2cf866OJ+WCP7
6tr/psEN0t8kvoddXJ9HFM9j8vdJF/e3lsoX/jb50yHskX9O1d8if0x8zig/
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
bA==
      "]]}, 
    {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxdmLtvFFcUh4cUEaJINpIVoQglg0USh0RogSS8QrgQ3iGwtgFjY2Ds9RM7
ZvxaSxTRbajxH5BipKSOtqTLiBS07mgHUabZFKnSBDPfz9I521x9c86953ln
7t79k4+Gpt9JkuSXXUmyPda/3pnE/gLP/6zH3cE+b4TTe17+lp/eA/eFJ38P
Pvv4yX/o75U+v31uvRTeW9Zjv/ThA07/M9lBPoD9d+GDzt5X8AHkh8LT5/8O
jD89CDfD5VeP+/54cRg+jP5u+Ej45G1A78NHw/Jbgx/CXzt/vnH+fyv/yesx
l5/jTv9EeCP8e/D4p/BJ/NsPnwrbeOnVR/B3zE/h07LH+t87+Rm4wRhs/WKQ
P/zOWnvxLPJ+1jtn8x/PIe9j/IGRukSx+uA88X2J/Hwd/7Mm8gvk+3PkF6jf
B8gvMtKX8aLyS74v2XzEHUZ+WfEx/7LLz5Xw17a55//U+vGK8kP8V20941XX
Lz9a/ShWfq4RzxfYv8Zz9flPjAPIxbJ/3dqL1+U/8hv49xr/bmBP+65V5//S
kZpDi+dHsdci/9gvJdf8QcthkP5lH0XJqWcpVn8O2XqGIRt/HHLzh8Lvb5r1
ZRv/kmFG9lEYDuPbC/7KvozDtn/KYRf/TetvuMlz8hHFvEdKsfb5rdrePvwL
t6x+FPcz/xb+6L14mxEOt7X/mS+58n/b1iMZsfGFEeYrfyOufiPMU/x3GNmP
Qcx7N97R+5L5kh9iHLXrh1FnfxQ9zR91+R+z+QljNp9xzNa7HOP9oPzfpX+P
Mf+u1Y93nX0x9pJxvf+ZP85zzRfzni3Fem/fYzzJ/HtWHsXyX6z83Xf7z3G8
7+K/zzx9Vx64+OEXyOMD60/5gP1xgueZladi7IXM7qdMcu3vzNajkBwuxfhT
ifV+n7DrpRMuHxM2/kz6p7AvOd+9YgJ/+e6VE/Qj+pXm6zs56eIXE29w8kys
/E7W9l/jbyE5+S0nyQ/9UaHfVv+06XfkaduuF9q2P7O2q2/bxle0nf22tVdJ
jn4yhT36J51iPdYPU+hRz2zKrhedvBATTzlFPdk/leSKf9r6m4rxL0yTH84t
meMofepdwDrHlNPhzcf9cd9757Avuc4xM4xwOsP6zA8zxAtnM7bfouYTbzFj
92MpOf1UiZEns9STeNNZniv/szZ/meTEG528mMV/7T/pq/+dfjJH/eF0zvZT
mENP9uesv1Fy5d/JS8nxp5qz+UnmLafzPKcfwrz1J5u3+ylKX/0vpj7lvPWn
mnfxP7T1TB/a+UEs+46j40Ks/ffQ7u9Kcp3DFyynYn1PFmx9sgX7/o4Ltj8L
5u/0v9ajPpXjZNFy6jgsuv0nOetHp18sWn9Lx9Wiy//PjHr/itX/jjOx4hdr
/4lVfzH9VYn1v23Jfr/SJbt/guPM6cclu36xZN+P5ZKtVyV9/E0eWU7F2n9O
nj1y/e+4kL7y77hy+klu90cjd/shR4/6NnN33pCceFti7Zfc9n/u9GNuv++b
uYtH+uSv6+yXklOPLcdVbr9vvdzWM1lm5PvaEPP9TcWc15pizvfByVvL9v9r
5tbLnb24bM+7m8v2/2Ahfc7XXXE/8S/z/5Xz+5aTV457jpMVex5vrPCc9VIx
5/mmmPN0EFO/1oqLX3L2by7W+Vas+Ffs/4dCcvLVdfZLMfnZElOPasXmt+f8
TVbt/IbjVKz6i/vrMaza/0ctx5n08T9fteeruGr7cVP6Ok+69bqOS8dbq/Y+
pXLr9Vw8yRqj6i8mvtRxc431Ff+a7deW40z67Jd8zf0/1PrwpuNCzP/jrpj7
k1Ks+q/Z/VC5+b01m59k3cbTWLfrp2J+zXV7vxQk5/6pJeZ+KduZT/zr3Cft
In7Jua/ZXLf3i4Vbv+u43JlP/Ov2vqraiader7eu+zqed+z9X6Nj/U3FxNPc
4fr+Jjh5q2PtZ269vGPvP2LH3l9tSh9/i469X+t2bH5K58/Wjr36V3XsfWpP
ct3/btj71cYGcu5L0w17/9l0HBy3NJ/740y8r+ZcPFBzdPqbGzbeYsPms7th
61Vu2H7acutV4qT8H4+qV0M=
      "]], LineBox[CompressedData["
1:eJxdXD1oa1t2VoITxGASBUwQg8nTuzgzysTM6CVOoiR+mZNgGBUuNIMLFS5E
4oAKQxRwoeun63tsy/dKtmwf/R/9FIJxocIEFS5UGCImhqgwgwrDqHCh4bkQ
jAsNeEAQF3nv7rUE36fm+PNae/3vffZe50if/+t//Ozff9/j8bT/wOP59mo+
KUv+MFffHJtPIGX9z++C25e/+O2PP+EQYUv5l8w1mrJ+vb/0Xz/59bLBcZKf
VOztf7rYiv0GO3N5BrcVLxvcTVlffudXP09++YcG9+fyDR6mrJPf/LT3Zydf
//cnPFb61ODpnG7s97xF7HuL9gYUT8X/OTbyLMLR+XhjT5xw8i3ab6v+/zPj
nbcS398T/3W8xKtL9P5b9Hc412c+Y9X3HfP/6VvrPz/940+Fb1+uPnP1KfaK
//uU/32Ml7WP/kQJx/fRviTJs/etzz4x/LHR55D+9lyewV2lS731FUu9DffR
v/E+1uNU6X4Z9xWO9ykOiv+KQ+YaUvxDc7UU/8Bco4rfmGv8K+sb53/z0/D3
DE4S3Vb6F+L/V1bkW4P/V3Bb6D3R3xX6T/5K/P/KuvzFtwEV/UPyZ0z6p+SP
J43++tKiX+wLpCV+3xX/lV/kWWnUHyV6PI32JtPW9rcDWn8v/it9XfzX8f8o
/iv978R/pQvupyU+fyP+Kz0s/hP/VLHm/x3a73uH/IF31tU3k+dX//bX4v87
1Gcp/5r4L/Sw2B9X/Lfi/zuJr2Cb5DtKXxX/CXeF/2vN/zsTz2X1/x3Ge/wO
62uq9gr2HMh4qQffgfx/RfwnHDqQ+fqZ+H9A+T9A/+IHmL/kAdprE79zIPH9
B/H/QOIj+eweYLz6ap/Mx+GBzO/vi/8HGL8p8Xvei/1/If6/J//fo32h96jf
eo/xjRI9/h7jmxTcknqxhf9riY9DuK32iP7ue4xHX/T3fiz+K90S/4k+VXsE
e2ysV68t/gr22WLvPxnsF7ws8gO2yBF60Bb9X0q8bJzvYRvrwSJ9EeKP2uhv
zMb6jhNO2FhfSRvjmbIp/jauP1kb56uj/gl2bZx/beLvkL1dtUfquUf6+uT/
gMYPVb/QRzbOjzHZN6HxU6VLPGek33OI9nkPsd59h1jPfsIB4g8eYn5Dh5T/
Q/TXIhw5FLvEvqhiGR8j/vgh1m+C/EnqeKmH1CHWg032ZQ9xfjiHGG/3EOu/
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
Y+piP+WF4jVz8Xz96tL3f+tYXwt1+j5AHc8Pi3U8X/jqIkfO30uK5TztVyz6
luvYXwnU6fxP/ME6njdX67i/CdUxH2t1nK9hsm+9jvPVqmM9bdSx3xMh+mYd
8xMlf7fqWC8xiu+28ks+4yR/p479iEQd+x27pC9J+vbI/hTFM036bJKfIfuy
lJ+80vX92DrWW5nkuXU6/9dxfrXreD6/ovx1SP412d+leNwQvUfjbwn3Cd/V
cT4OKN/3deyHDSk+D2qP9v+o3h/r2B8cK7/0055I/oToz6RvWqf5T/QZxf+V
sKeB/i005P+SH28D87XYoOd/Day/JRrvb9Dz/wbWR6CB9q806H1ikrdK9oSU
rs//yJ8wyVsnfVYD871BONLAeG42cP2MEt4ie2Mkb7uB9RAne3YaWL8Jou+S
vKTqE/69BtZPqoH92rTy6/dfSF6mgfWZJXvyDVyfHJUn8S6Tfy7Fr0X10G7g
fL+i/Hao3q4pv12Sf0P11SN/bik+fYrvHdk3IHvu1V/9vbEG3k8eGni+HJH9
jyRv3MD1+onqaUL8zw3sz05J/wvhWQP7Za8Ub09TriJ/QbHk19tEexab9P0g
4l9qYjz9NH5Z+aXeAoplfq6QPcEm1t9qk/r/TayHNdIfbuJ6t95E/60m7h82
VL/+HkUT91ubTdwPRZu4399q4v431sT98XYT8xdv4nljp4nngQTh3SbWV5Lw
XhP3Zyn1R9//JXttpcv4jGJ9/q9Y5OU1fnI+cJq4HyuTvy7Fq0Xy2uT/VRPP
j50m7qevCXfJn5smnsd7c//7ny63TTx/9pUu+/M7xTJ/BpT/e8rvsInnqQeS
P6L4PyoW+8dNPH8/zf0zeEL2P1N8pkqX90tfiH/WxP7laxPP754W5m+hhfZ7
W5ifxRb9XmIL622phf1D/1y+wcstsU9/P4LwSgvtDSpd+lGrLX0+ZnCohf2m
NeWX/m+4hfFdV3u+Z7Cl/NJv3CD+SAvraVP59fcJWpj/LYpfrIX9k2219wuD
4y3M947Kl3wmSN4u5SPZov5/C/s3KZUnv/+QVuzv/z8vHhJW
      "]]}, 
    {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdmLtvFFcUh4cUEaJINpIVoQglg0USh0RogSS8QrgQ3iGwtgFjY2Ds9RM7
ZvxaSxTRbajxH5BipKSOtqTLiBS07mgHUabZFKnSBDPfz9I521x9c86953ln
7t79k4+Gpt9JkuSXXUmyPda/3pnE/gLP/6zH3cE+b4TTe17+lp/eA/eFJ38P
Pvv4yX/o75U+v31uvRTeW9Zjv/ThA07/M9lBPoD9d+GDzt5X8AHkh8LT5/8O
jD89CDfD5VeP+/54cRg+jP5u+Ej45G1A78NHw/Jbgx/CXzt/vnH+fyv/yesx
l5/jTv9EeCP8e/D4p/BJ/NsPnwrbeOnVR/B3zE/h07LH+t87+Rm4wRhs/WKQ
P/zOWnvxLPJ+1jtn8x/PIe9j/IGRukSx+uA88X2J/Hwd/7Mm8gvk+3PkF6jf
B8gvMtKX8aLyS74v2XzEHUZ+WfEx/7LLz5Xw17a55//U+vGK8kP8V20941XX
Lz9a/ShWfq4RzxfYv8Zz9flPjAPIxbJ/3dqL1+U/8hv49xr/bmBP+65V5//S
kZpDi+dHsdci/9gvJdf8QcthkP5lH0XJqWcpVn8O2XqGIRt/HHLzh8Lvb5r1
ZRv/kmFG9lEYDuPbC/7KvozDtn/KYRf/TetvuMlz8hHFvEdKsfb5rdrePvwL
t6x+FPcz/xb+6L14mxEOt7X/mS+58n/b1iMZsfGFEeYrfyOufiPMU/x3GNmP
Qcx7N97R+5L5kh9iHLXrh1FnfxQ9zR91+R+z+QljNp9xzNa7HOP9oPzfpX+P
Mf+u1Y93nX0x9pJxvf+ZP85zzRfzni3Fem/fYzzJ/HtWHsXyX6z83Xf7z3G8
7+K/zzx9Vx64+OEXyOMD60/5gP1xgueZladi7IXM7qdMcu3vzNajkBwuxfhT
ifV+n7DrpRMuHxM2/kz6p7AvOd+9YgJ/+e6VE/Qj+pXm6zs56eIXE29w8kys
/E7W9l/jbyE5+S0nyQ/9UaHfVv+06XfkaduuF9q2P7O2q2/bxle0nf22tVdJ
jn4yhT36J51iPdYPU+hRz2zKrhedvBATTzlFPdk/leSKf9r6m4rxL0yTH84t
meMofepdwDrHlNPhzcf9cd9757Avuc4xM4xwOsP6zA8zxAtnM7bfouYTbzFj
92MpOf1UiZEns9STeNNZniv/szZ/meTEG528mMV/7T/pq/+dfjJH/eF0zvZT
mENP9uesv1Fy5d/JS8nxp5qz+UnmLafzPKcfwrz1J5u3+ylKX/0vpj7lvPWn
mnfxP7T1TB/a+UEs+46j40Ks/ffQ7u9Kcp3DFyynYn1PFmx9sgX7/o4Ltj8L
5u/0v9ajPpXjZNFy6jgsuv0nOetHp18sWn9Lx9Wiy//PjHr/itX/jjOx4hdr
/4lVfzH9VYn1v23Jfr/SJbt/guPM6cclu36xZN+P5ZKtVyV9/E0eWU7F2n9O
nj1y/e+4kL7y77hy+klu90cjd/shR4/6NnN33pCceFti7Zfc9n/u9GNuv++b
uYtH+uSv6+yXklOPLcdVbr9vvdzWM1lm5PvaEPP9TcWc15pizvfByVvL9v9r
5tbLnb24bM+7m8v2/2Ahfc7XXXE/8S/z/5Xz+5aTV457jpMVex5vrPCc9VIx
5/mmmPN0EFO/1oqLX3L2by7W+Vas+Ffs/4dCcvLVdfZLMfnZElOPasXmt+f8
TVbt/IbjVKz6i/vrMaza/0ctx5n08T9fteeruGr7cVP6Ok+69bqOS8dbq/Y+
pXLr9Vw8yRqj6i8mvtRxc431Ff+a7deW40z67Jd8zf0/1PrwpuNCzP/jrpj7
k1Ks+q/Z/VC5+b01m59k3cbTWLfrp2J+zXV7vxQk5/6pJeZ+KduZT/zr3Cft
In7Jua/ZXLf3i4Vbv+u43JlP/Ov2vqraiader7eu+zqed+z9X6Nj/U3FxNPc
4fr+Jjh5q2PtZ269vGPvP2LH3l9tSh9/i469X+t2bH5K58/Wjr36V3XsfWpP
ct3/btj71cYGcu5L0w17/9l0HBy3NJ/740y8r+ZcPFBzdPqbGzbeYsPms7th
61Vu2H7acutV4qT8H4+qV0M=
      "]], LineBox[CompressedData["
1:eJxdXD1oa1t2VoITxGASBUwQg8nTuzgzysTM6CVOoiR+mZNgGBUuNIMLFS5E
4oAKQxRwoeun63tsy/dKtmwf/R/9FIJxocIEFS5UGCImhqgwgwrDqHCh4bkQ
jAsNeEAQF3nv7rUE36fm+PNae/3vffZe50if/+t//Ozff9/j8bT/wOP59mo+
KUv+MFffHJtPIGX9z++C25e/+O2PP+EQYUv5l8w1mrJ+vb/0Xz/59bLBcZKf
VOztf7rYiv0GO3N5BrcVLxvcTVlffudXP09++YcG9+fyDR6mrJPf/LT3Zydf
//cnPFb61ODpnG7s97xF7HuL9gYUT8X/OTbyLMLR+XhjT5xw8i3ab6v+/zPj
nbcS398T/3W8xKtL9P5b9Hc412c+Y9X3HfP/6VvrPz/940+Fb1+uPnP1KfaK
//uU/32Ml7WP/kQJx/fRviTJs/etzz4x/LHR55D+9lyewV2lS731FUu9DffR
v/E+1uNU6X4Z9xWO9ykOiv+KQ+YaUvxDc7UU/8Bco4rfmGv8K+sb53/z0/D3
DE4S3Vb6F+L/V1bkW4P/V3Bb6D3R3xX6T/5K/P/KuvzFtwEV/UPyZ0z6p+SP
J43++tKiX+wLpCV+3xX/lV/kWWnUHyV6PI32JtPW9rcDWn8v/it9XfzX8f8o
/iv978R/pQvupyU+fyP+Kz0s/hP/VLHm/x3a73uH/IF31tU3k+dX//bX4v87
1Gcp/5r4L/Sw2B9X/Lfi/zuJr2Cb5DtKXxX/CXeF/2vN/zsTz2X1/x3Ge/wO
62uq9gr2HMh4qQffgfx/RfwnHDqQ+fqZ+H9A+T9A/+IHmL/kAdprE79zIPH9
B/H/QOIj+eweYLz6ap/Mx+GBzO/vi/8HGL8p8Xvei/1/If6/J//fo32h96jf
eo/xjRI9/h7jmxTcknqxhf9riY9DuK32iP7ue4xHX/T3fiz+K90S/4k+VXsE
e2ysV68t/gr22WLvPxnsF7ws8gO2yBF60Bb9X0q8bJzvYRvrwSJ9EeKP2uhv
zMb6jhNO2FhfSRvjmbIp/jauP1kb56uj/gl2bZx/beLvkL1dtUfquUf6+uT/
gMYPVb/QRzbOjzHZN6HxU6VLPGek33OI9nkPsd59h1jPfsIB4g8eYn5Dh5T/
Q/TXIhw5FLvEvqhiGR8j/vgh1m+C/EnqeKmH1CHWg032ZQ9xfjiHGG/3EOu/
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
Y+piP+WF4jVz8Xz96tL3f+tYXwt1+j5AHc8Pi3U8X/jqIkfO30uK5TztVyz6
luvYXwnU6fxP/ME6njdX67i/CdUxH2t1nK9hsm+9jvPVqmM9bdSx3xMh+mYd
8xMlf7fqWC8xiu+28ks+4yR/p479iEQd+x27pC9J+vbI/hTFM036bJKfIfuy
lJ+80vX92DrWW5nkuXU6/9dxfrXreD6/ovx1SP412d+leNwQvUfjbwn3Cd/V
cT4OKN/3deyHDSk+D2qP9v+o3h/r2B8cK7/0055I/oToz6RvWqf5T/QZxf+V
sKeB/i005P+SH28D87XYoOd/Day/JRrvb9Dz/wbWR6CB9q806H1ikrdK9oSU
rs//yJ8wyVsnfVYD871BONLAeG42cP2MEt4ie2Mkb7uB9RAne3YaWL8Jou+S
vKTqE/69BtZPqoH92rTy6/dfSF6mgfWZJXvyDVyfHJUn8S6Tfy7Fr0X10G7g
fL+i/Hao3q4pv12Sf0P11SN/bik+fYrvHdk3IHvu1V/9vbEG3k8eGni+HJH9
jyRv3MD1+onqaUL8zw3sz05J/wvhWQP7Za8Ub09TriJ/QbHk19tEexab9P0g
4l9qYjz9NH5Z+aXeAoplfq6QPcEm1t9qk/r/TayHNdIfbuJ6t95E/60m7h82
VL/+HkUT91ubTdwPRZu4399q4v431sT98XYT8xdv4nljp4nngQTh3SbWV5Lw
XhP3Zyn1R9//JXttpcv4jGJ9/q9Y5OU1fnI+cJq4HyuTvy7Fq0Xy2uT/VRPP
j50m7qevCXfJn5smnsd7c//7ny63TTx/9pUu+/M7xTJ/BpT/e8rvsInnqQeS
P6L4PyoW+8dNPH8/zf0zeEL2P1N8pkqX90tfiH/WxP7laxPP754W5m+hhfZ7
W5ifxRb9XmIL622phf1D/1y+wcstsU9/P4LwSgvtDSpd+lGrLX0+ZnCohf2m
NeWX/m+4hfFdV3u+Z7Cl/NJv3CD+SAvraVP59fcJWpj/LYpfrIX9k2219wuD
4y3M947Kl3wmSN4u5SPZov5/C/s3KZUnv/+QVuzv/z8vHhJW
      "]]}, 
    {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdmLtvFFcUh4cUEaJINpIVoQglg0USh0RogSS8QrgQ3iGwtgFjY2Ds9RM7
ZvxaSxTRbajxH5BipKSOtqTLiBS07mgHUabZFKnSBDPfz9I521x9c86953ln
7t79k4+Gpt9JkuSXXUmyPda/3pnE/gLP/6zH3cE+b4TTe17+lp/eA/eFJ38P
Pvv4yX/o75U+v31uvRTeW9Zjv/ThA07/M9lBPoD9d+GDzt5X8AHkh8LT5/8O
jD89CDfD5VeP+/54cRg+jP5u+Ej45G1A78NHw/Jbgx/CXzt/vnH+fyv/yesx
l5/jTv9EeCP8e/D4p/BJ/NsPnwrbeOnVR/B3zE/h07LH+t87+Rm4wRhs/WKQ
P/zOWnvxLPJ+1jtn8x/PIe9j/IGRukSx+uA88X2J/Hwd/7Mm8gvk+3PkF6jf
B8gvMtKX8aLyS74v2XzEHUZ+WfEx/7LLz5Xw17a55//U+vGK8kP8V20941XX
Lz9a/ShWfq4RzxfYv8Zz9flPjAPIxbJ/3dqL1+U/8hv49xr/bmBP+65V5//S
kZpDi+dHsdci/9gvJdf8QcthkP5lH0XJqWcpVn8O2XqGIRt/HHLzh8Lvb5r1
ZRv/kmFG9lEYDuPbC/7KvozDtn/KYRf/TetvuMlz8hHFvEdKsfb5rdrePvwL
t6x+FPcz/xb+6L14mxEOt7X/mS+58n/b1iMZsfGFEeYrfyOufiPMU/x3GNmP
Qcx7N97R+5L5kh9iHLXrh1FnfxQ9zR91+R+z+QljNp9xzNa7HOP9oPzfpX+P
Mf+u1Y93nX0x9pJxvf+ZP85zzRfzni3Fem/fYzzJ/HtWHsXyX6z83Xf7z3G8
7+K/zzx9Vx64+OEXyOMD60/5gP1xgueZladi7IXM7qdMcu3vzNajkBwuxfhT
ifV+n7DrpRMuHxM2/kz6p7AvOd+9YgJ/+e6VE/Qj+pXm6zs56eIXE29w8kys
/E7W9l/jbyE5+S0nyQ/9UaHfVv+06XfkaduuF9q2P7O2q2/bxle0nf22tVdJ
jn4yhT36J51iPdYPU+hRz2zKrhedvBATTzlFPdk/leSKf9r6m4rxL0yTH84t
meMofepdwDrHlNPhzcf9cd9757Avuc4xM4xwOsP6zA8zxAtnM7bfouYTbzFj
92MpOf1UiZEns9STeNNZniv/szZ/meTEG528mMV/7T/pq/+dfjJH/eF0zvZT
mENP9uesv1Fy5d/JS8nxp5qz+UnmLafzPKcfwrz1J5u3+ylKX/0vpj7lvPWn
mnfxP7T1TB/a+UEs+46j40Ks/ffQ7u9Kcp3DFyynYn1PFmx9sgX7/o4Ltj8L
5u/0v9ajPpXjZNFy6jgsuv0nOetHp18sWn9Lx9Wiy//PjHr/itX/jjOx4hdr
/4lVfzH9VYn1v23Jfr/SJbt/guPM6cclu36xZN+P5ZKtVyV9/E0eWU7F2n9O
nj1y/e+4kL7y77hy+klu90cjd/shR4/6NnN33pCceFti7Zfc9n/u9GNuv++b
uYtH+uSv6+yXklOPLcdVbr9vvdzWM1lm5PvaEPP9TcWc15pizvfByVvL9v9r
5tbLnb24bM+7m8v2/2Ahfc7XXXE/8S/z/5Xz+5aTV457jpMVex5vrPCc9VIx
5/mmmPN0EFO/1oqLX3L2by7W+Vas+Ffs/4dCcvLVdfZLMfnZElOPasXmt+f8
TVbt/IbjVKz6i/vrMaza/0ctx5n08T9fteeruGr7cVP6Ok+69bqOS8dbq/Y+
pXLr9Vw8yRqj6i8mvtRxc431Ff+a7deW40z67Jd8zf0/1PrwpuNCzP/jrpj7
k1Ks+q/Z/VC5+b01m59k3cbTWLfrp2J+zXV7vxQk5/6pJeZ+KduZT/zr3Cft
In7Jua/ZXLf3i4Vbv+u43JlP/Ov2vqraiader7eu+zqed+z9X6Nj/U3FxNPc
4fr+Jjh5q2PtZ269vGPvP2LH3l9tSh9/i469X+t2bH5K58/Wjr36V3XsfWpP
ct3/btj71cYGcu5L0w17/9l0HBy3NJ/740y8r+ZcPFBzdPqbGzbeYsPms7th
61Vu2H7acutV4qT8H4+qV0M=
      "]], LineBox[CompressedData["
1:eJxdXD1oa1t2VoITxGASBUwQg8nTuzgzysTM6CVOoiR+mZNgGBUuNIMLFS5E
4oAKQxRwoeun63tsy/dKtmwf/R/9FIJxocIEFS5UGCImhqgwgwrDqHCh4bkQ
jAsNeEAQF3nv7rUE36fm+PNae/3vffZe50if/+t//Ozff9/j8bT/wOP59mo+
KUv+MFffHJtPIGX9z++C25e/+O2PP+EQYUv5l8w1mrJ+vb/0Xz/59bLBcZKf
VOztf7rYiv0GO3N5BrcVLxvcTVlffudXP09++YcG9+fyDR6mrJPf/LT3Zydf
//cnPFb61ODpnG7s97xF7HuL9gYUT8X/OTbyLMLR+XhjT5xw8i3ab6v+/zPj
nbcS398T/3W8xKtL9P5b9Hc412c+Y9X3HfP/6VvrPz/940+Fb1+uPnP1KfaK
//uU/32Ml7WP/kQJx/fRviTJs/etzz4x/LHR55D+9lyewV2lS731FUu9DffR
v/E+1uNU6X4Z9xWO9ykOiv+KQ+YaUvxDc7UU/8Bco4rfmGv8K+sb53/z0/D3
DE4S3Vb6F+L/V1bkW4P/V3Bb6D3R3xX6T/5K/P/KuvzFtwEV/UPyZ0z6p+SP
J43++tKiX+wLpCV+3xX/lV/kWWnUHyV6PI32JtPW9rcDWn8v/it9XfzX8f8o
/iv978R/pQvupyU+fyP+Kz0s/hP/VLHm/x3a73uH/IF31tU3k+dX//bX4v87
1Gcp/5r4L/Sw2B9X/Lfi/zuJr2Cb5DtKXxX/CXeF/2vN/zsTz2X1/x3Ge/wO
62uq9gr2HMh4qQffgfx/RfwnHDqQ+fqZ+H9A+T9A/+IHmL/kAdprE79zIPH9
B/H/QOIj+eweYLz6ap/Mx+GBzO/vi/8HGL8p8Xvei/1/If6/J//fo32h96jf
eo/xjRI9/h7jmxTcknqxhf9riY9DuK32iP7ue4xHX/T3fiz+K90S/4k+VXsE
e2ysV68t/gr22WLvPxnsF7ws8gO2yBF60Bb9X0q8bJzvYRvrwSJ9EeKP2uhv
zMb6jhNO2FhfSRvjmbIp/jauP1kb56uj/gl2bZx/beLvkL1dtUfquUfx65P/
Axo/VP1CH9k4P8Zk34TGT5Uu8ZyRv55DtM97iPXuO8R69hMOEH/wEPMbOqT8
H6K/FuHIodgl9kUVy/gY8ccPsX4T5E9Sx0s9pA6xHmyyL3uI88M5xHi7h5i/
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
hjT+gfI7crD/8Ej6xyT/ieI1IfxM+qYOvg/6QvmaOdgffnWwX+IpYDwXChg/
bwHlLSpd3xdVLPYvFVCfv6D2G/uWiT9QwPVvpUD3kwLW62qB5n8B622tgPUU
LuB6tF7AeFoFfJ6xUcB+c0Tp3zd4s4D5jRawnrdIXkz9lf74ttr3I4Pjc38M
3lF+6QcnFEu97BawnpIFzP8exT81z6e5pimfNo3PzPNjcJbin6f8OAWcr2XS
51K+W8Tfpnq7KmB9dyje1wXqr9P4G4pfT+Mr+JbG95Vf+ud3pH9QwPvFPdk/
JP8eqB5GZP8j1d+Y+J+ovidkz/PcX2P/tIDPO15oPsxI/yvl01NUeea6UMT1
wat06ccuFrH+fEWsn6Ui2usv4vPw5SLupwJFjOfK3B7zCRbx/rpaxP1rqIjz
e61I9/8i7v/Wi7g/soi+UcT9XKSI55lNwlHCW0U8f8RI3nYR94dxGr9TxPUr
UcR87pK8ZBHn414R7y+pIu4P0hQ/u4j7ywzZkyV78kWcD04R67dM8XWLuN9r
aX4lP22y/4rqoVPEer0me7qU7xuVL/p6iiUft0W83/RJ3h3ZOyji/vae7BkS
fqB8jUj+I/k7pvp9onxNSN4z4SnNjxetPzn/zNR/wa9F7L94SnKV/sCCYtnv
ektYr4slnL++Ep63lkqo319C/5dJXqCE/YYVogdJ3moJ6zNE9q+VaP4rXebL
umJ9/6yE/d4NsidSwvmySf5HS9jf2CphfGNE3y7h+hBXfcK/Q+MT5O8u+Zcs
4fq6R/lLlXB9S5N+m8ZnSlj/2RKuN3mKj6P+Sb+wrPIFuyXsx7VUvn6/g+y7
Ins6Kk/ye63+aX+d8E0J+1M9ot+SPf0S9v/uSN+A6Pcl7KcNif5A/oyovh7J
nrFgW+hPpH+i/EJ/Jv3TkvWzbwd88c8Gv1A+Zurvvxj8WsJ+mqeMeKGM9nnL
qG+xjPH1Kb/gpTL2Z/1lzPdyGe0LkP6VMtZ/sGx9s9jtL/2R2L8q+Jfib4jk
rxEOkz/rZJ9F+jfKWB8R8m+T+KNE31L79XkF0bcJx8tYPztl7LcmylgPuzpe
+JNkzx6NT5Vx/UiXcf7apD9D/FnVJ/Mxr1jWA6eM61u5jOuFW8b9QKuM/dA2
1dMV2d8p43p0Tfq6ZVzPbtQ+7bcT/y3J71N935VxPR5Q/O+pfoeEHyieI8r3
YxnXgzH5/0T1O6Hxz2Uz338r46dk/wvJm1E9vlJ+PRWM70IF72/eCs7HxQrO
D18F47lUwf2Nn+QtV9CfQAXtX6ng/T5YQXtXSV9I5cn9bq2C+42w0qX/tl7B
/a5VwXhtUDwiFbzfblZwvxWtYP9sq4L7oVgF7wfbxB9X+4R/h8YnSN9uBfd/
yQruP/cq9L4TxSNN+m3VL+fXTAX3o9kK7vfzFeqPV3B/VFZ5+r40+d8if9uU
nyvyr0P4mvR1dbzYc0O4V8H14Zb09Sl+dxU8nw8onvcVPF8NafwD5WtE8X2s
4HlpXMHz/hPpmxD/M8VjqvLFnheafzPK9yvNR08V7V2oYj/QW8X+wWIVz0M+
4l+qor/+Kp5nlqsYv4DySz5WquhfkPBqlZ4vVbH/sFbF/kS4iv2I9Sr2xyzy
b4PsiVSx/jeVru+nVzGeW1W8/8WquJ5sk7w4xW+H/E1UsT52q/R+I9H3yL8U
xSddxfXPpvEZyle2iuflPOl3NB7yKZM8l+qhRfloz+vB2HdVxX5oh/y5VnnS
r+sS/YboPaqHW+LvE74jfwZkzz3JG875Df2hiv2LURXn8+Oc31zHFJ8niv+E
4v9M829K9fpSxfV+Rv68KpZ+qKeG/e6FGvavvTXh1/5fDfuNvhrWw1IN57e/
pvYb/mWV90ODAzXsr68oXb5vECR9qzV8nhOq4fxZ0/ES37BiWS/Wa/T+2Zzf
yNsgeyJKl374JtkTVbrU71YN6zlWw3rZrmH/PU7x3anh85IE+bdbw/UjSfL3
KD4p0pcmbNewH56hfGVruD7mSb+j8ZT38cs6Xt7Hd0l+i+S1yd6rGq5XHbL3
muLVJXwzz6f59Cg+tzWa/8R/R/EekL33NH5I9AcaP6rhfH5UfW/MdUz2P5E9
E4rfM9GnNVxPX8i+GfG/kjyPi3jBxfr2uliPiy7K97l0/yfsd9G/ZRftDbi4
fqy4eP8IuvT8T+Xp71G49PxP6fIJu1g/6y6uz5aL98MNF/dbERfv35surm9R
pct+YIvoMfJnW+17Y65x8n/HxXpJuNgP23Vp/pP/eypf33dSLOtdmuJhk30Z
ikfWxf12XuXJ81+H9JddvD+5yi/7oZaL+6W2i+e9K+LvuHgevnbxPNuleNxQ
ffRI/i3p7xO+c3H/NnCxf3BP8oak/4HwiOx5VH/kfZex6hf/nlw8704oHs+U
j6mL/ZQXitfMxfP1q0vf/61jfS3U6fsAdTw/LNbxfOGrixw5fy8plvO0X7Ho
W65jfyVQp/M/8QfreN5creP+JlTHfKzVcb6Gyb71Os5Xq471tFHHfk+E6Jt1
zE+U/N2qY73EKL7byi/5jJP8nTr2IxJ17Hfskr4k6dsj+1MUzzTps0l+huzL
Un7yStf3Y+tYb2WS59bp/F/H+dWu4/n8ivLXIfnXZH+X4nFD9B6NvyXcJ3xX
x/k4oHzf17EfNqT4PKg92v+jen+sY39wrPzST3si+ROiP5O+aZ3mP9FnFP9X
wp4G+rfQkP9LfrwNzNdig57/NbD+lmi8v0HP/xtYH4EG2r/SoPeJSd4q2RNS
uj7/I3/CJG+d9FkNzPcG4UgD47nZwPUzSniL7I2RvO0G1kOc7NlpYP0miL5L
8pKqT/j3Glg/qQb2a9PKr99/IXmZBtZnluzJN3B9clSexLtM/rkUvxbVQ7uB
8/2K8tuherum/HZJ/g3VV4/8uaX49Cm+d2TfgOy5V3/198YaeD95aOD5ckT2
P5K8cQPX6yeqpwnxPzewPzsl/S+EZw3sl71SvD1NuYr8BcWSX28T7Vls0veD
iH+pifH00/hl5Zd6CyiW+blC9gSbWH+rTer/N7Ee1kh/uInr3XoT/beauH/Y
UP36exRN3G9tNnE/FG3ifn+rifvfWBP3x9tNzF+8ieeNnSaeBxKEd5tYX0nC
e03cn6XUH33/l+y1lS7jM4r1+b9ikZfX+Mn5wGnifqxM/roUrxbJa5P/V008
P3aauJ++Jtwlf26aeB7vzf3vf7rcNvH82Ve67M/vFMv8GVD+7ym/wyaepx5I
/oji/6hY7B838fz9NPfP4AnZ/0zxmSpd3i99If5ZE/uXr008v3tamL+FFtrv
bWF+Flv0e4ktrLelFvYP/XP5Bi+3xD79/QjCKy20N6h06UettvT5mMGhFvab
1pRf+r/hFsZ3Xe35nsGW8ku/cYP4Iy2sp03l198naGH+tyh+sRb2T7bV3i8M
jrcw3zsqX/KZIHm7lI9ki/r/LezfpFSe/P5DWrG///+xIRKU
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{},
  PlotRange->{{0., 1823.}, {-20., 39.39}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.618493436001089*^9, 3.6184935119615498`*^9, {3.61849373718495*^9, 
   3.618493797353938*^9}, 3.618493863615481*^9, 3.618494728523888*^9, 
   3.618504634584996*^9, {3.618505187061001*^9, 3.618505216294052*^9}, {
   3.618505247036829*^9, 
   3.618505261296092*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
ZfEqBrNk/Ovs6Mp4dAm1Li5k5b9PYjFTAlhdUR4qs9L5GJvjeLiDMnUsG3++
qMxN69YaynwOlblmQXYHZT7PakpCpDIv4cqUEyMlsI8a1BtZ++7NkLLGzp06
ye+kH21Ak5U/Z8syKfZk+yOUOGQewV2s3jvG6KyCM6x40vesdty7MtqWSlRe
zmz2McwxU4ZXgHsJDxfAX5TolBMA91dxtqeZPWg8aQiDoQREceR7sO3r5njd
ebHrVVJovHpQ2bb72KnG9Thrcyy+C2eccRcJloe1Qp/p8KOyYgmUrauoWa6E
cBUrjPlB3chVSp2yfBoslKRSZYcmqsUYekvANDNUunXbLjo8KnaPwQuu4qaS
mg+kUuNkGpamPmoioEohDm5p3iiFvJt7dEWcoVKcZUW5XRGnrL56veoKKsVp
9sSSF/ZPlun/jBbn7/9lR35+g61zDmZfxCxk4+1JbOPPH0ozsmYJijNnFh43
y3vMLsowxPlPEidatZitwRnvh4pMUgVdY+1vi+tOUA7Q3EnPsb2zf0dFNn77
FAv/LUiGlqekoiKh7Ctk/55XkdZ/oSK3b9pEpqKhyPVLS30UuXKuGxXpUecC
qZanCHMtxW50gwPCSZGYZbSkzKHe6lFSpOnq14o0LBfpB2bFUaGs2hMoI1Oo
GsDlLH9qX7ZwlEqW4nY+JSDaHmYRMalKkXKhs7tGsvIprxmK1K5+Q5EblmZ5
3XmOYwAp0mPTJt/x3TU4wdMslNhA7x5rrPlu672oyCSfH5VzArNMUZEVadPU
APRQj+ZVH0XG+Ciyvyridh0+9N179tNblHrG4wWvW1uL+31SJJbGURNfK1Iv
pxBSLBRp+6e3InV6qzz8kp8yPDRXKrKsqOuKvE41K5SKdFu9K07BUGX6P60U
eTtrmvY5OzL6dbba/rX4qHGOFLb6p2fZsmE3sy1z8lCRcCIq70veY255ISkS
SKQaXhuKvE8p8jVSZLJdxqrE2GWRiSQVYJk99QW2p2QyKZIrIPQ3WVo4OzGl
P93cdeIU2FSkWaolRity9/btlDxhKHJz3TxvRfLtbX11FioSRwrO2kCNoMqW
Qrnvbt+zhSVZXzQUKUMI5uTMVIrUa6S5VUFFxhotm+DKYLjm5OexpaXZSpFX
kiLLJg5iS396Vynyfm47oiIfYdFxHRU52kuR5qKQhpuGHmz1gnivO8+0v0yK
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
ozWZbX2Rv18S8TRUhveV7nc0MMi6WHqaw7Pk9sVNspnTHEXaC/UqOLx3n+zR
paM+hLPnLuoB4C+wNfnzEB4BdM/lWQeIEaBFZqinHsyTI4A5uPQaYe6/BrGW
hKAR4LsOp5gDVJYgrLBJ/eHttmHdG/MFa97ukoF6mj3CDckvsKuB4di2JQb5
SuZLGws0+U8y+bmxn/JWd4X9TXZ+9Tg/MpFvgKLI7y/u/rK+u0ruM8zXjG6B
2rXiavOekfju8zxL1eZEgDfuY4P2P8lY159++qlHtGt9yNZmJM5nPsd/KtpT
J5inXz0FMu3mo94UXdegJv51or0y5imVPcx5nZwB10y8E1anKxMfk4so2tV+
89LAuwbt4yW+aOTI8gL2ckwhSQ3BRnSnXUkj1fYMFE3uz4VryuP/zrT7KxrI
tUImD65zT1V5Z3Z1qnRYoqWom6umG7RT/nkzPybvEJO9YKwWSFcbnEZRNKad
sll5QjjHen36RIP2l7vRnh0fIXvBFTOXaT/YWW+i/RnS7pqkEd1aa6Tt+wO3
ljLAmWlvzIqAlozPNe1/kqUD6Pul85+C6rCH5eGhQftdpj2fB2HzauX9Ot1E
+3EdCtU86mM4d+GSfK6jHWXoH2HQbutCu/S0Jdrfku8H0z4QYmKdivb46xTt
a+xQqFNPZVqfZdrNkjJoVw6GKHGsnhQvzZ7bDNofgEJN+7e7Vhi0K7/gFcvq
utNuGcLHt5Vx7xsHj65Qpr1rEpuC6P6SYBp3iHZP/EdMu9lmTLf25/RsLWVO
wegQQ/X+zDrTA9ppDZujzcZy/0tQFRioNTHMoJ2HOKbdnA2Nwo8rnK8S7WVR
/eRYonMgQvuE22FFgtq1xhzgWPa8dYG6a7P/DY6Fjp8kFwbooSDLQjsqjdQG
veRA0J12JY0U298gP/xVdlmsTPiYaU+qbKQzWNF7z8LqzHmqrPSBL9WxnM5F
vXymmXblo44+jMSP6RiZv2d+j3S12m7MoES7Oa4CdRFfi3OmGbQP6EZ7jjta
0R47n2k/srPFRPuzpN21gVFdaDf2DNFzivQl1XofLf2rk6dCk66QjTYhph/4
FYlv3uPQNOEOGa0h1VIYOim2V9lERRNhX+cWmBObD55o1+O6cad1Hpem0Z9i
3tlrCWttaucJ3BZk1WC+HRPWb3fB+nqZRjwpRm0TuwjrdiuHDWRanobz65bC
2eo0BIMSt2WJuR9dJjBRTbq1L41eRDMeMS1P+xjybA/C2aN7DJrVPNq2emkX
msV6wjqMx8xq9yfsnrLAEyHvZF77djeArxJrh4FCH8n7SpPtR7I/YbLNPkbp
1hc5TmzN4iwxGnxikG1UuvuXZBsRGTmWZ3QCpithUdZUY9xxyXUoj4TmzUPK
n1bmeJlwLlkoffok9bgAaBt/G7TqWia0b1AVoxzxmjyv0FX98eGin26TfTgk
aRFMjEOcb6BnIhPXjDMNdKm2flA06z3eb630fMY4p1Q3yfxq8dr02VdjVUUN
ju9XOGOqbaGGS2YbW3gp2vvVHEBg3tYzNu4No5B0tMLW3VSn7NFmnJcVzPkl
nHP9DoWzJZJxPrZnJV+m1v4c4VyXMrYbznQgiyfgtoTxeuS9h3Cu8I2BRdoB
B3dYcTOKgKqY0xeWj/mDjFfCz2f4XDA5PsOE81/hxIGv1Qb4gimE8/lzKt9t
w+hBmFyHcKaVc55VnammWh8y4fyOfN+YZa8TLRlIXU/1vITFR3lnn4STCWHy
NrhFRixnC5ZlDVJHMSbroaei/QxzhNjzulnyaMsdAus3rNMgP8Ug51pGGsdq
/lCOvcGUS3L1xMVGe+l01NcEgZzoeFcuCuO1sYCvUDFFu52DGGSzj1G69SXO
QrpjQwOULniFQbYaxdl6CrJoUU7sAAa5KXsm3wk/xyrJRjIAw1AgY6LY/iIp
UWFkf+V1FPdraTGhr3Bz5N2ktlVRD8mQqEWuF/iKPvd0yHMoKyjZ9ghMcGUZ
O5Bi/jPqZDDElIgs1fY8VHtmcYhLtXcIQ5xWu1iGOSmIX4TDbYWwOeEDuHj6
mDpXF63cM+x+aJrzVxPEyoJANyKC2Lw7Zx5YukJcYuu+E0fxUfiH6n2sqY41
IDYynhHE+QGv1BinzcYQn9i31piTbf0J4vpUw7eaExxzmroH0NGUZgaCuMw9
FMpin2LO0ceSIK6c9YiEOF0nUZvq80OYM53HX4yAOHP8mIJ4IUOMAS5Yeq5u
zFBMSKEg7s2Fq/OsytcJl5umsun59vfERPlqF45fYY6xgmlJ/GNc0R7LeWJI
o6r69O/McY71dd7zT7eoDXgBiuFqHJxvId3yQMgLZp6F5m/q7OzGc75tvHGW
ljqRDxmx7oTk2dXbxPMVXXi+WvKcqg1+yk6MPOORh2je1fpr5mog6aKDknTt
kmMHNkF5xKu8DWQqQNbNC5VBxlwCzt+AJ2aiBvlGaMqfZ4CsUytSD0udxMlI
76KgnuOr0NaflCk/Wobnyskbx4FlAub6uXeR+lYv6AMnvdOgIa4fw+x3z4Jl
GVwuWubOFyYW7xY4OOkww0yGa4pd7T6l6+2h2sTQEMrskFUvlysa5gGUK1ee
posGxsTMEj97nTG2U9Jyo7gQlUU1Y2zeSiOMC6O59EYIlVlBXaZaqdhl+Ppu
72rxvpF3LcM+sBvLW5vrIXPGfFiRncIsn/pmi7wOmizL4z4llhvSJnVpntq3
XJL5PuS5P5Ix31MSEiEj5j398xuJ6RLRLxROgQLOtDzMTFfPeEhYLn8Ej3W4
HAyHJdVAuDPVxPTDcOniBdhUkA1frWl/QrcmfmoMzJzuk//XFeh8QRy+psWV
4o6FAfQHgvWBQUBzZmdVjlT2t1+roAQ6fqIG+rcmoN8QfRYBebNmQob1KRo6
CWiZVovcf61/w1WkCeib5WedO75Umhz7iG7KDVDgmMK7tItzZvHOP9YKlDaT
6yrj1FQdO/OuPa5t6PDOa1d5/0L96nfe2LFX66fFrIXktZwuTJSAfvpzJw/A
MvGzvJgn9Kx5R8idPZiYhfRlpdrYcOa5pTjaxLNYd6KZIfg1VmJ/5N5J1Ev1
AtvzxHNezLPq6/ig4mtLxt0KtfONyXnB/XAibjzUc+59wbNnHuxZYkRGzfFa
jaoUvajIaReedW0nvb+UrstL1SeNYJ5zGlukuyO+X27hEnLyPF00cJS3VAwV
fzd4flXrwe+YZ8yF2JVn054B81wQ3XVaVsetBdFPEs/UqAzjwEpMzW9RYuML
nW2Uu4MpPnNkhx5hboJ210SmOCO8S6OU35yUQ8Mm+DR5OYxxF0PV3JfIDa9I
zhQPsvgyLMaaonbWw7B83H/BPAu6gwl1E3eeEpfK27nplkee1nceZWmUZ+KX
I7ZA+zROd3Yh9u9innstiFjaMjQTS+NzpuVxOOmcQIUXDVPa+qZ8r2PSZ4JY
FXojFr3kO62oVA1Ojhv5IsP6Ownd9j37ZONKYx5ipct3zWeVbi2KoQWB6gIV
ISpDeOWKWDpCM6u42kbbBxs/1RGQl27bsgVKMzKhcvbbxCqOhbSxkyFGrYB2
e7t4/gyc7aiDztAHNat39ozV61TImXUqs7qs3MHahIM9Jn7DfvDo2+KuCa2i
0T0RX3nW54jV3Nh+8iHUquPfYNHEu6A64h72Hl0oWI0ZDrXs4NMbEhMXwpFN
hXxXdIRkR51ess56V1bJLxL3XsysNqSMZVbzmpbIuCV8v8b+vMHq/bKBGHSc
6HiPt7Xsb2hW/9PE6uPdWDWl8gqhotu5MQaA8o+b3FWvkANwQRQx+3tqXKap
VF6a/T2D2XZK28XMfv/tPrIKoD2BmV2UObVL43qzq3pRUyd8FlgqmC2C6jkv
M7P215TbpUdVqMmwGEuIRlwKj/9viIiNY2anxiXzwUeG5VFidpJzsczZGcys
2p0ptL4tWzDDWYI74dSTBY5/CmZfD2KWNp6lMmlmaZcBs6zjkK6rBpqYVRHC
a8IGC/1/jkwKg9nfmZgdRcziEgbh2/P1IWaWVrBohpV4Y43trhq/cj53/8oE
7rVY3lNPsNdId/Be+pY4OStX1l/BNEeApHNuWQU0TH+TbiIfWCyK+Tbpwhqh
U1J8XdjeAfuGqB1arOHbA3gT4tWBUZJ9OsPbWm2EDOGsUiC0L8XyZzYRZEpc
PddToZ9cy7MEb7racGTR5EYOgMoFDG+FgBcDPGpiHuUVR2JSLJw7upW9HeTe
kRYBjlTl/hdDntDU0mokRducmdpibskKZ2qLFi/DACVIEsPOEu8HQdSKr2JO
1UTHOwa1Kp+vz/EHg1q7kTvSvNYJfu+KoPVVdsxDvfir7G0QQo4NeOJZGPVU
V4iz9IpTQhz3EUF8cVuHhriIIT538oju2ZthTcJkUpOmrBld2mVAXNy8XZh5
LTJGpnz+6wRxgZAReeOqyuoGxIvnPSEg/h9YEGs3IHYk83lGhuUxgniGbykM
WVB7eYjtqlr2zGCIC+M+EpPvG0EQc6BMwpUGxPq0Hh2mFsUugKIpmLj1RsNU
tr2jIR4ivtNfDwJXkVzkz/WoE3COYYjFsyKIB4+ckI0ri6XnViVWyhPtvL+x
vrlQTvu4NsTQ+mlxXlnitCD67pBfSRv56iDHP8IlWa7LrhAgJzHIrZXQPPW1
IJAxKpby5KYLKwJDchJ1VuZLB/fA4alqDky23t0jkGWtgd9BinMWg7xmsRFm
gJbYWtc/5VYubWMhSrTQp6VdjvVvBDLtAnv0eIr1+cQIZgb52+nv4dZ0CL2X
mKpCtrF2H0m8MvAqt5bOK2kFkmJ7XQ8fShfXVUYyxKVLWuUqI2neZ3B0XSVD
rFNfhfoqBcRvszFuV431O24xQcxFw0MosFx2uR5mMmMfMIBlJwHDw8ZNDgCP
M7imHM9ZFp7YIc05hMHdvpay7jK4F86e0nbB72CNO4zUojlndrebkv952ZId
su792IRCqPAMJnDzLS/IPRV1tf+DhUUZ3NaFz8HyCbdCZIyVwRWziQncvgRu
RMoK+HxhV3DVlipmP8EX5jBPtvXlNJjOjwW45snoKh2TdDODOim+SqZlwLmN
sg7k2FRynvbwzzF6mUZDSaJuWMA5zgD091KVKRa01Poobwng+5Up8XzHnR3N
sDLpdQiPT8ZUUOTuLI9RVGUUnmDx/3GmxDtON3G5vBpWTH7F9Ey9heE4iu+Q
bn1LJrP6wt9EOTJVlW5V+fCOnmB5g3zUdNccxnJzm+FTiD3Y6ftExtSgPGVu
yAXP8QqAXBdyjBgB8qyg5Yq5EgPGFNoio6Ay+iF+9qR0FT65Mm849oPZU+3g
VqUCNLfS4UOyTv2cpypywvpaK2NZ0ary7SSkpcKFU0cJyzTGslpg+RbJLMmm
9q0SHXqzT1jztPGXbB/I53Q4XOvciel6LKA5lPPbGT5v6danL08kOyFDqmsk
E7ljHWXWZyKpKBhupq/IiyeFaMmb341INHvwhfXxBicuhZHuOqjwfk5E5ln6
cWAvDqYBq1EsqS32ZSHZP0NUtIWJnBxXzEsfMb0QkZas1RAaVRdEJF22RNfm
XO2OQSuC81s7PxNEvnUZIm/SRD4qq2ThFjHmIzKIfF8ROWWY+M4Ag8jfc8OS
nOODifw1HD+por9KbQaReLe6TA9P1gd2b4VVKe9AuDMZjSwiEpUa4TUTqdax
98g7znAkMpEra2HN+BeDiMTzOIPIt+UIM8rfSEQGYj+CtISwnhN5o1zVFydH
MZH7d7WZiPx3OLq2HL5udMPi7E+gbOF90DL+bjYLSB2yLU8SkVynWUc44JER
b706BsB0exKURz3Az56clUjNwgdjO9RUvYKI5ASp9n/KD+pj+0Jh9D3QuTTL
iKTZswciMmugZe06/URX8MkuBlMm2e4ggfkcwzSO/8OMJesNGGG3G6dttzB+
FIZJqsFZa41CXmm2flAYaTp/UG3INuGY7JlEOP5w/BCcrUzBozDG8cdL5+XQ
gGHuy0uTuexfweVwVOfaO/Z9K3BshS/cTVDhH06Hl1jPQe/9aBlcA5vi34WV
k24TFq1NDl0R0cngi7DyI2VYHg8hDlduOgBVrbsuz2GcykR7Km0hbh4zh67B
UGB/29DZXxmbuuJ7j8L4+Bq1zxp/jQGhzkHVNnW4uP9rBoR/4GYlOicqCH8t
FRZho8iOpa4XpRooT4P/gMa8ZF72njj+LaxM+QCSIz4B3/zPRWuQwitg5bTb
Bag3k5sBKSNeAk9TUXFn2P3U9edX1cPW0eZSNEZUjlkcse6pRo5063sQmV0D
SRUMJ8aQdmw91HM4fy2XlHW5dlbl0999w2okAw4VGYvH3wH1YY/ycSgZTlmy
2KpqMPpFq1n1phBKQ4p2dnhcGpRG6xgSvYJLzU3nOc7sTpRs7fMUw6hOqBLt
qjDo8qjnVHTT2gZdH/kKPo3VdBF4HodyIUpy6IA9mSde7TflRz1P6VxQ9DKe
zKW0h/xVyEo3krIZXiUYnlgURfTdwrvMFo6vg4Bv9jNE2g8X5TaDJK2MK6Av
LYruJlqyPfA1xL8MRgjSqhJHUeci3tqDWI9sKi/pFu9HsCrsDphvVx4ZrWPe
kVMNubBmWp54hcFSHVrqVBlhTkuwjAnONRQKdHYP8wRHoUEYKsdsiRUHsZXr
+CccHvIYtE0bgRMGsYVSpUb448MUWzdLfUPlOaO9pHdmqHLmyAlOfs3FGcrW
EgPimVOnYUXqP6Ftyi2wYvwfZYIDmdxixl2yR7H+OkYNM1wJvaQMcfabSXD1
hvNtDXBIrBjiXcN5lSV+Rg1d6JnLU2qa9YM+/5ob7BE80l5UGM/cXLp4zsTN
zcRN0/i7oG7KU+LrlFP9N5qbviZuHpW9ZajbVbIaxMT4HCjR3FBPphVmMzfm
SHMTNzSF+OJURuTl0c/LXvtqQzPXFafNV0MBr5G952VwbuNpKEV7G+RHvsiJ
kFBZZVBG/FU0D9GTa4JuZHJovEq1vQLFkZchxyg5n5RsIXJ++uGSbBFueq4o
SyVylpVaujS8N/ss4QsTTo5wL4LqwDjqXtzywdomQeSIAaHT/ymsCr8TIjQ5
K0e/JeaHUN4uzrQ82ZWcMpdKWX86IwqnGiKn1B0KhY73u5FDh0RYsDg2LkIe
yatiR0TOR0Ix+0Lb9JFCCf5hkPNHlneiK9wgR6aWxlrwshG7Mj+TckWVws+W
VeYr6MS8ge5OK9I+hvapt8hQy9VT71XkzLxb+qzib3DWZHLc6lQeWzzdnsrk
tC+S0+YIbwVM9GdoDb6JGjrfE8XzYJrtHz0hR9wX1bal1MNBVbTwxyM3Kq65
NLwPLJ2PWzR/5BFZYfOo1jPjeA7z6kpvRs7iLOYO+wtiLV8ERRof2jnKKC1k
fMzxnynWBwgf2rb0uFRusGbrB7Lr9m9t/0V8AtYHhMFH+Nyuqb2W/U4LFr5i
ilv6c5ffXyGjAjB/R5L9NXGtPrRVwsUYnL8JMaa3m6UHP0VLptrfhCJNluiJ
y5KV6WeyZBkoHD7+AJ1NuUTW8jJHlzb1ZkcifGFWNySrNmUikZUpZgS9Qcxk
4YjRmThIlhr22GZCdOwcyJ0wAsosTiYry/J0V7LKPeMUWZnRuJJisjyjoDDu
AxNZyn2bbGF0fkuy3s77TXlxH0HxuNFQbk8QMv3UIMoo6OJPmKaI+p3ME5Ms
rGmstoevPcUqghKXcjI7UmOFhvFamQuiNMsCi8PugZWT/wR7yiPkfLRy3hOi
7++Hgph7xbX+Zs6kpHKX/QZcCy0hTFTHYknUWFcVDAvU0aBJDcWkR5RvIc32
YQ+IQo8B9N9d2WCEKZKRhaVNiagtvo9hV14Yl1tCIjCLf6aOBcY8gAZRT6jz
frbqr5I5z7/wVUJO7CN6GFD2UGZlORMVsBmlVlOsDxJR5DHi9c+Xba93qsSN
B/dsN4iydiXqeuna6Y8bo4nSpln89TIkHv9dM+8ZWf0Rp2OHazT1YZxrpBzP
hyYuwhHKkMat1HAGCU/27VGTudZAsu0jTDlJqsXHkhadF0WMVGkl5QySLmaC
g9R325YSSCsr47uDpPd78TXJUQnTbMVQmx5OIGWI8UTP5gZIQsX3lEVIR8Lq
pBgom/A4DJ+TC7acNvb9yLK8bICktimrEqfJu2BOtgzLYyTSct8YKIr7RzeQ
zGWO/Lb/ZpDy4z6lZPCiV4ZR36LVQzf3uWcqkP6PPLT8PLGBH3F/g0tKOErA
j6JYs6ReHkLj9IIvV2EHFE58VkxLyl8NQ+dXxrwJiyb1gRVhd0r7FyfLgCnW
E/exZPjF1E+YJjy2OTzzH1ARNgFSZkVJg5hTDF8B03xetkxSbZ+YaQryZxuc
uEw2c9OuXcwQLQu9spy6UuQUHtavgwsbl0NmrFJasTo19gStz1Dsj2k2ek5e
P6DTo5GVlFVTY8xGjneNGpDWh3g20saXL9On2HGpFEyHvvrSNBs90kXhrpeP
nhg3VrOjqy25BDtWNU0sFewMS6xXaT392dRjAiOd678e/W+IHYp6MBJuXC0n
oIqwj3krMknMfQVqxxrnN4Md5eeKVknxoua/cffi2eIt8v8InNXVOuUahyKo
wDJ67Ql9DjaPfRfqs2YSOOmWBymSwdh91kqGr6LF23+FeizexsIhNG2kW95/
Rd+UuKlNjeCGUCoFo0PF0jppPBSp/PnBAJkioDDhMQMUP4gSqIu5ZBQDJBrL
p7nu2QQQHhhinzNAjQlSzDExM6U8Nre1Sg9fOmh0F62FwknPyYLbEqDJf4HN
7r/DGjEboa2HAMkYVZ/XFN3zB+VENG2QnhWuhMOHDsCRzx+BI0MfkUMBFnOk
pk7ypxulqG2DejAXEUfbvvrK4EgPMCoLvFJqTP1NRu75jmbIiH1Ii6WviaN+
wq65qwtH/eT1KQswtS6nYRFz9IWvSXz+QFeOPJ5wufZLLC2Xbd6UN1d28Olj
X/8iR+H+JDHGx6oc+mr8BKf7N1AYMRCP2WFFxJswwlcOgwIt4LYuoD1Kh2us
SpPvrYQRSei18oYRjaU1zohTvlpG6G8bPgCSLZ/KE4eU+OlQqDab0U5lmAz/
CWhY3W7AdHU3mNprk9TDiPWGuovaiKXXobED4ODMj6EhZ66eFm+ShX7JHUta
IJY+RoXMa1n5pIIePiU37z6bXw2OPIOs5NjPiSxah9bnOgyyrH27dDGeWIYJ
sj7qRpa5ZgyOwvRZQfxQSVaCmETiHRZT7I+qr8iRoZ55ZrywVjS9cLdZVl0R
K/O02R/Avl3bISEuVFgSg+XnmONhefSbMkscvnCDZYvnn7B2wTMSOX9Strhm
MUzxJQZt1+HAnudOZryOHjkER4Y9LPHKcLyGKV1NMcbXSt8wDCZiP0b70B5g
NiRRFWXZfeBrxoyWmgiw2ubtzcG/51bVoTe6/DzDyidbabb+kOk0Fc8W6ydy
sUm2P6tJe0glCbYr8+vE6VNM2gjfIo4jTrP+lUj7+vAhWL99O3x7UlWb+nbz
IthdPBt+OHeaScswXKmYNP/CaVCTF1C58uLmyM8tnt/D2lFq6dpuHQbj3LnS
zlidGUFPgccVg5OWSF9HafX560y5CrThaf9PJk20FPYl3AGtkx+G2skPwbb8
aYI0lbBGTHP0cPnW/jTjwapNm5k0QQfWOjaT1tGgz/3ZUf9GdtTB1/Gw12Wm
5EX5kTQ5ypZi0MN0X4Ls31TL/eZCKXTqYdzmSun5gdYYuW8EYj4P6Ypac1my
aRLr7glXnToFilwfd0fN5FeDy3D6rND1ORUDEB2dbqqxd4Uu1a1R8y6gA6yx
7gJZDJVRa/KE0MnU8cMHYaRYQg71L9XNvFamnsZK7xKzKXfJdcq6qOcZPfSF
mexPIUtE1kbLWRLUM5gpMXpmDKRHTQWrJxIjJ0wH/L/hAkaUbzXZHtoTyvyK
sgNHDjNltOjx225hyihK70xLOec9y7T2Nyh7CbKdxi61qligGoduT1jPIVHH
FWbEoU9yCB3yjvQvYn9GobYDWbBdrRPxy7kToaVEZ6OLUyN6rOePAp77JTwd
7ikw2ZUqazitzbfQiI5hO5hpblxCoTy3/MJXxcMuxZR48cSX2HlYRr1tmHyn
rhlvhUKHikUOWO8kdgo0OzjdbNu712DnWlml08zO2uZszc7VTCgOhsxO+JuS
ncWFNj0X3tFLnuz24uLRuMg1pzDoyg06XqARRiNkatQwEzfq8Lu1rsTEzRPd
uKlNnwHFrk+7c2PKfiWY5c+KEkKlu6WneB04PJkoYOYG16HEsM8Xqbi5TubW
x+43uPHKPm4Yr/JKnTh+FEYlNOI2DLOzu2SO3GvBFy6lcEdzfexLzBO6owgr
jtkRtrQ3rzWod06fvSAJj4xLAod3PgxNagjyajPYUdsGAceI/wU7R789zuwY
/oz/pdm5XiUXTegFhxPnCmNDOflm2l/RNs71fPSQZnsV8lyP0VabOWA/2f6M
MtLUfoeY0aRjJ0M0yt8ovyPty1+GKC12LqypyoLpcW6wWidriP5LzP5qA70j
1wvWqCkw12aHdcUugsgpllkzrQUCogJZDSrCGsUCTrWR28QtDJGwMlcG3oYN
sx9VK7nWdIYo2XoXQVRofUF3161w6PgxA6LrqCIva+zGZQVdhpar5WqbIZr6
NnwXORSWlDo1qvf0IjdZXfkUDRflJntDUPhwV5hwAqpYtpMlkBY1lGFKl/nb
/gLtrS0hVJuOYJKVFcWT4JZYfXYklLgH6bMEI+MM/UF3JgbJPVIu3KqXfwmu
5CKZ7dYA6U/cDm9iDIOUkCdMk0p++gOLfbKfI2bMgdGzU+DsuQsw15ID023F
Wjevhm2pX8C+WhtssA2UuUPxNd2RKGNqZbHOeF5BVbZsCeoRzPaDAEU5k8Hl
mYVRPiaAbpIYoFMTey04xvYAoAmuQpjgKYWz588xQBQ0XRTfXwP0a2k34CC0
9/N+DFNWvFYmYbuRYy3uEO9cFeBrGGuP3rKYks50Ki3+7ct9sKp8YjBAauMi
J+4xA6Culvz1ECjIhO+3tsHuYfdBnVuFdcd4boUzBzrhSHsJ7P/6G3UKMfoW
2FybQQCVzR8Im0e9BaMTqkVXtcqvpNpekGfH+Lce+I1ZSFWq3JUXLr96bEMt
FKnTF1xbMUC2l7S59Re4dOkSAYTDSleANi0v1QBdxwD5bQZAWLcWt5qWVqlx
JmDro/yLekvTE8FBzxEc4VDJRcebM2qQbK/gFqjT5Yxog52pDpV7ctO6tdyq
TL1VI9aD2p2pFzSVBKDEM9g0EfXiWDM1Nipuij2juPX+0vVyj9zMDQWkeAN2
g5t8ec5jcONXBXyTMsAhEMRNcpyKj08aqJPcXCsTGbfPUdnQZtr98hHmu6PY
dQGn8p9+/FGp0g1ywxTN2JnOUgjkqK/TFIp7X8p+X8rJDFzOhSE9gGWiczEs
TF2hgVTv+bS73tK8MQwLpUrbFYqJlJTVlu35SMPyqFG9wKFcMinVWbLldj6l
wXzMmLUQ38+2PH+lluwYfwNV3hZ9/yxBktkNEoFbSTFc2tOpEggF5mpI/kwu
HG2j3oBvhv4VtrYtDiFAyucNhPVj35fz/2eB5VIsaM1hf6XY1F1TbI+Q6qbr
9HZfFkyTX0X8itUhClo8pF9F9gEarTtDnmXdvEGGTZjp6FxVpaVxvbEZa/tv
FgMfINVn6a58OITwGOWu1MTdrmtt3IafG3u6Rowu4cG1uyOHMB5hcaXyYbdv
3WrgoRMcmvFoKU+DMs/QLnhwtlHGo8Q7hvUcU4tjnCQ7cIrlGbkDeFLiFR5X
QaivSegmZ92GA82JsnNP7W7nJuEkixYryIUB/vcaObVsjHtTI6JSwQ9OXMLU
ojmktOh6mBzfLCN1chuX6FQOV+rR+mb5/5g3Up63YRxyQoZG42p99zNnzsD5
H4JlAj+cF++fD+rgyyG0qG2vLPloRojCZ9vKppgQUtsIm4e/ACkWlUkwL3Go
lvsTENA+4KkO5UBXG/s85EffA9kx95sQegLsCapwXo51gBkhXRpSyKefQug6
GRNgtg7QRGxd1wGX9m6VCLWkKqe1aM/tIcRQ6uwYKJ48GXZt6WCG8he8DdkL
7GKSaZAMNY57AKY4VU5uuzNMlhAOON5khnTR02+3NAkze670YC3W+3+p1vup
f4u1sRqw3c0MlUbdC7WqmjLLYeuaem3b3GBi6H+6MHQjrGqukKcFCc7BMNOm
NkOmOLLknIE+DMinOvFT+y440Oa436EC2cROTvRgEztl8jL7937FZhmxkyLs
HQw6w8+XVWdDqZdSe10RZGSLf5NFJuse6zEbW1oUWMBPiam8dUAKSxtbTWfY
3tQEwikqswLmp5tmm5aAwmlPB18O/cV1FXu9c9QbkiKsELMwGWLsSUyp6Egi
qGH1HqhftQeKmlu1D+C1khZUrDGuBrEaqsFUxHKoj/XkaIIo/Syc2QHe8FBB
yFhJSaBxh2zcyc4K0SjxDtKzoAKOB0ktmKi79HsBu3I929iw0KBHu4muHzVA
jLJ3yNYVpI7WongGChxq4Vyf+Km82Eb7XKnjeUH0PM6VoXKsbxI9Y/31QkqD
5NulvucNep4IogeXD/i6tHebvHJrRqSm506mZ5pniYzx3b9nJ1t2tEGUEvUh
zBUm2lhXPXyWtBx84Z/ISB251+2pU33uHEEqnq6TKJs7q0QnSsFqs4yR83Vt
vt3HGOGRBrqSmn+7a10L6aPJl6IrRjfA2lVqAJ3sSoP8aUOVXRLj0VPQrapi
klBknPXxeuhccRUxpJcj+UHzj2LoyOEjJoaUx182lrlNXCQ/X9VQCOX+L5gh
c9INgS4xJFMe6R79NNACRRlJxvZDzWZyijAYErMm5XfxpvuoVQeXJCtm9q4L
uVHz0TH9CynY3fmpHLsn/qbqsNUrVqlwAgE3jh3478jIdLBkVvAkavHmcIfe
ZwbkOtiRK8DwrlYfnuyAsaHhsOHMQXAKACp24zRzHmpmhcKsmt2sTpeDIy1O
ufhuW+5hOMinpm3MQC4uU5ypCpSmCFwb3CqJ6JpcZdpuTHRqOPqY4OgrS5/j
93Jtfyc4xiXWgyVBxcuX+V8gOMwBDPEeI/fVpX3bVcLM7Fj5fpTnbv00v4V5
ycthtLURDh/Yz8MgHQEmR34sQ33GuepgUFIreMIHwUxHvOzkUZ5aBUfcCNbc
DJ2YNIgOnXkkVUYaqfdKXW9p260P04EnEpvi3wv67e7NK5SmmSqTobZ3pWND
myrlitNf0dRB8t/WhbFyr9trJHOWvSnpiPttNzoKo7rTcfr0aYMOnSouy/oC
09HeXAnliaOZDsrqrAcmokPmEtKbkJ+KyaksK4UfMatuC52fmWaYv7BDlS8j
yaAjRZ3w7dtg0DFTlaM61FDKcfjCJCU6mto7ZENx3Y5CxX9jsnZbViXTYfXl
/hwdwtoCfp3cAOFiGuk4gn8HaMoQ0HghPLDhF+nAmq7YMrFg70ZH84znMOZF
GgQVRTFSHgHHW9Ca+K4M9+8sVYXwOksL4EthpOVx3LRyj6VhJ9s2iOiYllID
c9xx8pJ1ae/9HB04mkg6Du6R1WjWlLo1HffqpxHaU7xOEoLnXpREFbUKF3eB
qKHgK1kH0+NLpW9z8uzhMFu7Xo7xKrdie/xEPknMwIgPAuAT+VaajJtV75W5
39HG2IMGFOF3yiJ4Zij2bl2jofitCQojtShDsUZtdE6JS4KysE9guK8GEudM
18kjFOBYayOFofj3blAUR49kKGY78mTVNUxWbEwZCopsrMiW2Cjvt255PVQk
jWEokkw+VMI+MKAI42bgkUE5+8/3gpz6TjoBYlnjCEpeG76sFGrVkfZi6Ih4
Gs5+s52h2DBvnITizJpmmVoQ5wYx1BAUKzZtlg2VHRF/jYIiJgNsOVUMhc3f
DQraIpBTgkXZU+HFncLG2gCzxpqA2BBAIKQGXYnfukM3Nc+ldmh3d2QxYRm6
DA26sOI6DTt+9eYtMCGxTmbj/L6pQD7KhU0rmbCChH68/qOd8GzHcG7vO/K/
V2JOriB9x2UxXWP9dhWxFOnpo5dHveHEyRNME3prY78UpbjI325/vRPm2WLl
2+P9avAfLVbDVLEhw/IUr8jK1NECOiCwUGt87+v3HjD0e8rdsDnh70H6/fWX
G1gfDQ+Du7vo91WwddMGVX/IWQ1b62pkN20c9bY8WSelQQ9tcoLwOG4y1Ftt
FhV43SFv6MtlWf6mVfkleSIrN6/aFkNVYILJbLmde0hYW8ZBOXvMcDoOdPYi
TxG8VFV5FT9hwaJtqp5gF/VO0XFCZbXFH2qZnGspgVP+mXDx613yqAsvNdGV
Taq8fscO+ZYKTbhOnZalV4OjsI5V2d5dlUn7zhzeDTsOqvLHB1u9EBpeLBbX
G6QV1KkihYSFFA6hGb88vhd5VN/tXV/Ip4jkhon7Vjhn4xR06sxp6oPvm4uV
Yne28aXL/C92U+wsB29smBT76SDFDljv4Wt07lqrFftBVuzvv/+edx6wVhj2
UmmqmxQb59UIa6Tq20Q1bo91lwvF1mnpOU0rDtKDtBI/yuJcmvqhfC8v9l5W
bHRZQvcls2If2reT5g9W7FSrUSCdFHv7lo2yDZPiKmFbQ73spvXj/yE9IUhd
UuxviLUIuY7fbCi2OpIqTko0KfazrNjokYWX3rp+OVSnTuLLzfHaOVmOWEJw
xgpTwBYpNgZsyRnNrRS7urKGn7Bo8XaVQChIse8QQ4OaAo7u3/mJ/irORkqZ
s0JIm3fu+4qP5tBYxn/Py6jBIjeszXFJeT+nzQcbFwjtzJAD8cEWJ4SOFdoM
JyF3bCh4Ww+KcfsgBIT2ZnSe/EVtLtdquH9zBWtzli43gAdyiWLhgp119vw5
XtgvLZNiuritgy9dkfhyd212hnXT5myTU7scWKz38zW27dmktfmvrM0XL/1g
RL6L+Rt7qTzDR9p8eHUBRMaquhOTk1Qnj0so5fIZZm0u9wzRQ3dflmFrmhq6
82PvN7R52r3SW8iszUe+poxAN7M2p9me6abNOzu36GSx5bBjsYq+WBs2GHdK
Taucd9iDRszKpM0UMluSkm5os1VNftnWl3lA3LGlHarTp/Dl0AcF96J0GW0j
/8qV3bQ5xj1dVxz+N3mpuupaY5XSsoMcboyWWu8UQKkz9hOH9pA2f+Gr7qbN
B44ele+hbYYWiFyyZ1ZjjTNDmwM/q80Ah6FCmxmhoQug9aAakM/va4VZ8j2x
KhV203nZgJ/X5kM7m2FzsxULuLI2Z/PI8Tt5LIR/X7p0iR78x5PH4eLODfDj
92f40pVJr3TX5oRZ3bQ5q5s2P8jX2PXVFq3Nj7A2//jjT0YcrfU5KJkyANZX
5pA2H99YBzWTH4Lc6a/ClIDqZDxGpCQGmZZnWZsr1D65DMelR1mTpwKWi6yG
0dE2/X6hzR8GafOJYzo1jt0otYKZ87pq876d25Wrk6MUdi1pUSlkZowQA+8Q
kza/z6fxKfaXgrRZDJoVWXkmbVbujzlCm0O1TbV31yaoyZjBl8Pi75GeObJ+
Y7LtMUObe3XT5kyxXpeHcUKb6yaNgq2r2wzza8WXFDFq0ua7oLMpGVqzJ8Gl
ixdZm72qoyfFG9ospm6lwZ4oeVwk46Aza8BVUs/aHJ+c31WbL3fK9ZBWlTzW
wpvksSIabuRPVxkY2F3dPJHd1C3b8rcgdRNPyOq258Au+d5Cz2OGuv30kymQ
tJ+U31dr2kndTuxQh7WN4+6Cacm6F7zFWKW1u7r5QvV7T3AnrytSFZJKrQ8Z
6jajj/QBM9SoN5w+cVJPJyrWDLd4wuJSrtCdfXDvLnnrGY5iAciPMsvoDz/8
ALMS4lh2aZa3+cja5/gwWMt+BTX5Jaxl2bpuTrZ1gMxdJTf+vt4JdVmz+XIj
E8vYNSbZ1pe1zPAHYi0rn/eG9rETs8CQR+CrDRu5A1ZtPiBk8IhJy3pxcn38
xqf6eyO8VV1UrJd8QvTZQmWirGeoYlgWjpqWkFLwSweopFqFViOmB52E0HQi
1apOfr2bamUnOnugWo+yau0/tEer1uN6UL2Sl/lZluelWu1buzaE9Or0V+vZ
92l6itKrMG8R+OPUml+MA6xXVf4RstszLU9zt24sHS/HjnLbw6xXWJ/lu21m
x8HecP7sWR0yQnWMPoEwZxpd+uC+3bKHZzsKQyieFxPj0iNmRb/Gx1OeuMEh
hlKp5LCLSiq1Ul2LZ8VaqV5hY+7MtwegOksnJUL7MGkZjQ209RbvCWE/mYq5
b7IiHcIe27yZn3j7V8exx7sokrEKJEUa6VGKNN5Vqs8Ne0vvFFIY/IMLaW9Z
AzXFnVr4vxmmKpM/4XKLeECDMRGkS98d3CiW8zk6UZ+BTG56qvzGu6xLzwbp
Uqrtcdalg0f2a116MoSOvWjLN9PSXw9d18hDb+k2POdRmJmqdCghPR1yYv9G
esc6VJ1hl5/HxizkHj22Nlf+fpv/bZ31tzdcECsj1FXKRZUQPxhm2L10mR9P
fSc/PhE3gfVlgiudHyPN+jFnLU23fGDSF5UCsbmiTuvLDULFtceN1BfMKrMc
Lp45DnXFatcNjbVAig8G6dO7ZNFF17KivK687YQOomvS/sOn+LG+O3VOdOdL
QdsFKTpruFlR6PBxjKtGK8o1ck/brCgLs2RCSQj1tqgdooyiXxptVKrqK3hz
HzERa5frtNCDSgaK3ijMzQt5jxWiXxeFeIoV4th3h7VCPNNNIbKsL7JCfH94
lxQohsjMTlMK4c3MEAqhd6qF8pAka7Lj5OeWaCMo6Pj6Qvn7HYEPWCEunr+g
FCJWH7O5QmFhbAwrxGmlECcTwlghxifkmc5Pv5Bec1IhrP8IUggU8PL6ZlaI
bO1Um2N9VfqJYsAJHkq3rmpRVRBw1y4rlV0vk21PsEJUznmDByVUiANHTnPe
ghwL7yKgIgzSTdgd2l+OfWNcdSx/ijugP5h8RMm/WfVmz+RPlYm1u5Qhf8MH
HQeQkuJyln+OnpK5obZnWf7fnfpWyd/7rEn+H+kB4SWW/7lj+5QX54Jn5KaP
XDrn5Qn599O68gLLvy7HKT+3Rc9n+X+7sUSVSk//2JD/hWD5O10jwB45w5C/
qiF00jed5T/Rlc3rUSwIRylR06wfsfxl8lNh5bc3rzDJ/wUt/4Eyqmho0iLp
T9W+aaNOQ/UfkJafI4TR1F3+s9/UOb+ulPI/eNQkf1V3VMv/XpL/l8NflBPD
2HhD/ljGzCz/6Jxg+fuzinsi/xQdlqIOY/9syP9KZh/XmJVVdYb89WhoyP95
lv/p71W2v0jvcyx/nMiVTAew/C+cOCTltzayn9wmwRYHKhvlRo+cmS0vsvy3
La+A1Dn/gKq4kSz/U1+uUGk0Kuax/H+4dEnL/0k9qr8J5VMGsPzPnJQfnwrM
ZflnzvyQbR+Pa7aQv+I61fppsPwFIetXdJjkrzjNsb0m3fRwNY8v3NPE4DRM
cZ5ZmAdjfPVa/k+y/LMX/EPZzq7e0svn+/OXfkb+95H8d33xsjzgHxdfy/If
rhPRk0srngxI+XuU/JNySnsm/3sk7OiskmS7jeRPUOBAhftGW7fuYfnnaSc3
Q/4vsvwvCmtf8d/fJP/PtPxfZfnj7InyWxfdX9rJ2OLU6iYh95e1/F9i+Z/e
v1GVUq6IZPmf/Wa7jP36pjXDkL+wwc3yL13wOKwcdy/L/+xpJf+0hSz/lWPu
Vr5fQs2dPhdk2JRck61DDfkLWaGOdK7dYqxKtJywCslIbznHCmzYtZO97XJK
CmDn/n1SrdFRURuWV+t5PilyMCUI4VRgOdaXLyf+L0e9Kqf1MEe5Fr9yBCbx
C9WgfsHyfvhWWnVjSLcIa5K5yrb/K+W/ZL3dkLnaylg3vh/sG/o0fPXNSZZ5
gd6Bo6PgFNsrLB/FOxVjUO8lONV+RpbtbZb5D+dOq2KcsS9JsxbbmVnXLOaT
AVrmL/M1sc605LsqJoSC6nE1GSTfiMdh1bg+LN/vlXxPZ8WyfDeOflUdeeLK
MuCHTBvVPg01yVel3dy+aYeWby+zfIU8hYRVPjTY/OWX3Ov55cXyvfrVbdJf
TU+VJN9EPGHFsFqTfHOtA0zU9CH57hn7utoon/wJy3dcYv0vyTdLGCM9oJuc
bHFBE7DeyZLWuwgbJw2Aw/MHozcxS7okXhUawfMiTIAx3eVnqaze1Aw79mwK
knRUtBOm+9zgdrlZ0j9euqDKrwvzaKGWNLpRsqStA0yS3qIkXWNlSeNUenjX
Lsi0qsOSsvl9YeWER+knmDPlh6MH0KJjSW8Y85psLp4GuFJSwZngls0qzM3q
Iukb4csdXzHJhFyu7Q0h5zIY7VFSFeQyySXVKky5YXW7dMXQkiaLPcnxardF
eZFnNCX6N+hWNRdUD9jvJ+kfjRgipX8sdhRLH08TEqMTuko/1K+kn9PY0hPp
U5ipGtHuuk5/lY72dqxrDvlAy7LKr86GMFhb7bqXhVyvv78g2qdWFF46+71a
Smyj/Q2IylHSLVi8VPD7iub4FRbuga2q1nWtPWSgblWGdkapmPcYLA/vdy0J
cOxbMDigbJqEjGywe5UTfnVFhUmAf5AT1d49B01DsdKpPNubMMpTKgN/8HXo
+FEWYE2Tso0WtXeYBMjFTMiDzyzAMv946eWFYTwkwGzHe9yfuY4+g0mAQ/vC
CftY3TPqvcqoBbL1YpUW0lV6eYuW9ER6GUa1bPSyMaSnzJWvd6xj6TXnz9DS
e1StE9113aTn92Wy9FZM+B/Y5HwbYrT0MN00LmXkkGcZSNLDSVYmW2qIZ+mR
K1HF3EehdcYbhvTegyFJytj15uSLyVRJr76mmqVHiRwPHDhu4KdKgUGu/W0h
vTKxIFPbsGe//56l19DSKN9DhyAKHjNJD6tddJVeeeIkeXAbLL33DenFPUDS
OzbqOTjhGBckvYaYiMtIT9lb+U09lB6n0IHUuPdJenQsdPybvSy97R1N0gV7
pletc8b4GrpJL5BoSE/5Yr4Hljy16V7ZKj6PHSdPN5NixxvS26HiQhvdLL2W
jMlQFtEXmifcCvVxk0l6+9auZb8Bf34x7Nq2BbmD40cOdZHeTXD42CktPbFC
CLhUEsx0P8y3pkBUHPnBXE27obC4vV32THPHOhlkjaOPqTCYPX4CbTaw9CqT
p0kHJ8wzT9JLcmP9IcVpvusxkh4e9Vw6sDtIesuam7pJj6zlosXLeiI9c3UR
v3sCSS8v9gXIFKvLi+e+Z+n9cP4M7K62wdFtrXDh4kU8i2LpLYxS0ksJGCMn
na5b85X0aleuBp9ltiLHMpekd+nsd3CgOUk6zJH00BBeU2gD+5RRUFVWSa2i
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\
\>"]]
}, Open  ]],

Cell["Remove all missing temperature values", "Text",
 CellChangeTimes->{{3.618494544662417*^9, 3.6184945593485403`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"wdMaxTempList", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "40", "]"}], "]"}], " ", "//", " ", "FullForm"}]], "Input",
 CellChangeTimes->{{3.618494788597054*^9, 3.6184948433922243`*^9}, {
  3.618494963882593*^9, 3.61849496807117*^9}, {3.618495251847179*^9, 
  3.6184952785538063`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.618494803179984*^9, 3.618494844308962*^9}, 
   3.6184949716232567`*^9, {3.618495263188362*^9, 3.618495279323704*^9}, 
   3.6185046346443987`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"wdMaxTemps", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"DeleteCases", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}], "]"}], "&"}], 
    " ", "/@", " ", "wdMaxTempList"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.618495097879459*^9, 3.6184951790927773`*^9}, {
  3.618495292332984*^9, 3.618495296266982*^9}, {3.618502083996483*^9, 
  3.618502132551497*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Length", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
  "wdMaxTemps"}]], "Input",
 CellChangeTimes->{{3.6185021398241663`*^9, 3.618502156927718*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1821", ",", "1822", ",", "1821", ",", "1821", ",", "1821", ",", "1821", 
   ",", "1821", ",", "1822", ",", "1822", ",", "1822"}], "}"}]], "Output",
 CellChangeTimes->{{3.618502152137493*^9, 3.61850215780865*^9}, 
   3.618504634739497*^9, 3.6185056746177273`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"wdMaxTemps2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{"#", ",", " ", "1821"}], "]"}], " ", "&"}], " ", "/@", " ", 
    "wdMaxTemps"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6185021689465933`*^9, 3.618502218565627*^9}, {
  3.6185056822324667`*^9, 3.618505685426195*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wdMaxTempsMeans", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Mean", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
   "wdMaxTemps2"}]}]], "Input",
 CellChangeTimes->{{3.618502225022933*^9, 3.6185022434049883`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"14.215859417902253`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"13.258577704557934`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"14.244854475562878`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"13.621087314662276`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"14.244854475562878`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"13.951422295442065`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"14.244854475562878`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"13.554579901153213`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"13.554579901153213`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"13.556743547501373`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.618502244278749*^9, 3.61850463484065*^9, 
  3.618505697755249*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wdMaxTempsSD", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"StandardDeviation", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
   "wdMaxTemps2"}]}]], "Input",
 CellChangeTimes->{{3.618502254894418*^9, 3.618502289371935*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"11.229207554262649`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"11.418933251505491`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"11.301819290639077`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"11.15874528294399`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"11.301819290639077`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"11.423032617687625`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"11.301819290639077`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"11.368197480605065`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"11.368197480605065`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )], ",", 
   TemplateBox[{"11.371376123369636`"},
    "QuantityUnit",
    DisplayFunction->(TooltipBox[
      StyleBox[
       RowBox[{#, "\[InvisibleSpace]", 
         StyleBox[
          RowBox[{" ", "\"\[Degree]C\""}], "QuantityUnitTraditionalLabel"]}], 
       ShowStringCharacters -> False], "Unit: degrees Celsius"]& ),
    InterpretationFunction->(RowBox[{"Quantity", "[", 
       RowBox[{#, ",", "\"DegreesCelsius\""}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.6185022909177933`*^9, 3.6185046349172*^9, 
  3.6185057079783983`*^9}]
}, Open  ]],

Cell["\<\
The means and standard deviations are pretty close. However, the max \
temperatures in the cities are *not* independent. So now \
let\[CloseCurlyQuote]s see if the CLT holds.\
\>", "Text",
 CellChangeTimes->{{3.6185023285853024`*^9, 3.618502393855666*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s check the non-independence of the random variables. We \
know that if X,Y are independent then the Cov(X,Y) = 0. \
Let\[CloseCurlyQuote]s check the covariance between each of the vectors.\
\>", "Text",
 CellChangeTimes->{{3.61850354624835*^9, 3.618503600189991*^9}, {
  3.618503956959113*^9, 3.618503971917809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxTempsCovs", " ", "=", " ", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Covariance", "[", 
      RowBox[{
       RowBox[{"wdMaxTemps2", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
       RowBox[{"wdMaxTemps2", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "wdMaxTemps2", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "wdMaxTemps2", "]"}]}], "}"}]}], "]"}], " ", "//",
    " ", "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.618503603669959*^9, 3.618503633807109*^9}, {
  3.6185038020541077`*^9, 3.618503805620338*^9}, {3.618503847965042*^9, 
  3.618503928544932*^9}, {3.618503973961338*^9, 3.618503977583201*^9}, {
  3.6185050626418552`*^9, 3.618505069792045*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"126.09510229670933`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"121.83993372301781`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"122.10230060590426`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.92311791118273`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"122.10230060590426`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"123.11305451874047`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"122.10230060590426`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"120.38102067717293`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"120.38102067717293`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"120.40917249799348`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )]},
    {
     TemplateBox[{"121.83993372301781`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"130.39203660233773`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"119.36654410609432`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"115.70218380007962`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"119.36654410609432`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"121.17803081524458`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"119.36654410609432`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"122.29022838568353`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"122.29022838568353`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"122.31804959658683`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )]},
    {
     TemplateBox[{"122.10230060590426`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"119.36654410609432`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"127.73111927826156`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"116.97391609238373`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"127.73111927826156`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"126.8062775422573`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"127.73111927826156`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.42243319432625`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.42243319432625`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.44811927859351`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )]},
    {
     TemplateBox[{"118.92311791118273`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"115.70218380007962`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"116.97391609238373`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"124.51759628962473`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"116.97391609238373`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.37095751860166`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"116.97391609238373`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"122.2669844680196`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"122.2669844680196`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"122.3024421141626`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )]},
    {
     TemplateBox[{"122.10230060590426`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"119.36654410609432`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"127.73111927826156`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"116.97391609238373`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"127.73111927826156`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"126.8062775422573`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"127.73111927826156`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.42243319432625`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.42243319432625`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.44811927859351`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )]},
    {
     TemplateBox[{"123.11305451874047`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"121.17803081524458`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"126.8062775422573`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.37095751860166`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"126.8062775422573`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"130.4856741847554`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"126.8062775422573`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"120.41200633959122`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"120.41200633959122`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"120.4402543594571`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )]},
    {
     TemplateBox[{"122.10230060590426`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"119.36654410609432`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"127.73111927826156`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"116.97391609238373`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"127.73111927826156`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"126.8062775422573`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"127.73111927826156`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.42243319432625`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.42243319432625`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.44811927859351`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )]},
    {
     TemplateBox[{"120.38102067717293`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"122.29022838568353`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.42243319432625`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"122.2669844680196`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.42243319432625`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"120.41200633959122`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.42243319432625`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"129.23591395803535`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"129.23591395803535`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"129.26779206528232`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )]},
    {
     TemplateBox[{"120.38102067717293`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"122.29022838568353`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.42243319432625`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"122.2669844680196`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.42243319432625`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"120.41200633959122`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.42243319432625`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"129.23591395803535`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"129.23591395803535`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"129.26779206528232`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )]},
    {
     TemplateBox[{"120.40917249799348`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"122.31804959658683`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.44811927859351`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"122.3024421141626`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.44811927859351`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"120.4402543594571`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"118.44811927859351`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"129.26779206528232`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"129.26779206528232`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )], 
     TemplateBox[{"129.30819493914103`"},
      "QuantityUnit",
      DisplayFunction->(TooltipBox[
        StyleBox[
         RowBox[{#, "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{" ", 
              RowBox[{
                SuperscriptBox["\"\[Degree]C\"", "2"]}]}], 
            "QuantityUnitTraditionalLabel"]}], ShowStringCharacters -> False],
         "Unit: degrees Celsius squared"]& ),
      InterpretationFunction->(RowBox[{"Quantity", "[", 
         RowBox[{#, ",", 
           SuperscriptBox["\"DegreesCelsius\"", "2"]}], "]"}]& )]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.618503653071905*^9, 3.6185038078359222`*^9, 
  3.618503851428937*^9, 3.618503937056323*^9, 3.618503982958398*^9, 
  3.6185046393980217`*^9, 3.618505075773973*^9, 3.618505750062763*^9}]
}, Open  ]],

Cell["\<\
And we should expect the correlations to be super high as well...\
\>", "Text",
 CellChangeTimes->{{3.618505123718401*^9, 3.618505133412492*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxTempsCorrs", " ", "=", " ", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Correlation", "[", 
      RowBox[{
       RowBox[{"wdMaxTemps2", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
       RowBox[{"wdMaxTemps2", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "wdMaxTemps2", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "wdMaxTemps2", "]"}]}], "}"}]}], "]"}], " ", "//",
    " ", "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.618505078077569*^9, 3.618505098216671*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1.`", "0.9501999661203058`", "0.9621136555804606`", 
     "0.9490777972164459`", "0.9621136555804606`", "0.9597841651857275`", 
     "0.9621136555804606`", "0.943012181534929`", "0.943012181534929`", 
     "0.9429690485617556`"},
    {"0.9501999661203058`", "0.9999999999999998`", "0.924929704339721`", 
     "0.9080309623985997`", "0.924929704339721`", "0.929002621615253`", 
     "0.924929704339721`", "0.942051428574731`", "0.942051428574731`", 
     "0.9420023549821054`"},
    {"0.9621136555804606`", "0.924929704339721`", "0.9999999999999998`", 
     "0.9275243215416834`", "0.9999999999999998`", "0.9822249869626779`", 
     "0.9999999999999998`", "0.921709390175015`", "0.921709390175015`", 
     "0.9216516094821899`"},
    {"0.9490777972164459`", "0.9080309623985998`", "0.9275243215416835`", 
     "0.9999999999999998`", "0.9275243215416835`", "0.9286421236937162`", 
     "0.9275243215416835`", "0.9638339674928087`", "0.9638339674928087`", 
     "0.9638439822720856`"},
    {"0.9621136555804606`", "0.924929704339721`", "0.9999999999999998`", 
     "0.9275243215416834`", "0.9999999999999998`", "0.9822249869626779`", 
     "0.9999999999999998`", "0.921709390175015`", "0.921709390175015`", 
     "0.9216516094821899`"},
    {"0.9597841651857275`", "0.9290026216152529`", "0.982224986962678`", 
     "0.9286421236937163`", "0.982224986962678`", "1.0000000000000002`", 
     "0.982224986962678`", "0.9272498391128849`", "0.9272498391128849`", 
     "0.927208111905241`"},
    {"0.9621136555804606`", "0.924929704339721`", "0.9999999999999998`", 
     "0.9275243215416834`", "0.9999999999999998`", "0.9822249869626779`", 
     "0.9999999999999998`", "0.921709390175015`", "0.921709390175015`", 
     "0.9216516094821899`"},
    {"0.943012181534929`", "0.942051428574731`", "0.9217093901750151`", 
     "0.9638339674928086`", "0.9217093901750151`", "0.927249839112885`", 
     "0.9217093901750151`", "0.9999999999999998`", "0.9999999999999998`", 
     "0.999967066883825`"},
    {"0.943012181534929`", "0.942051428574731`", "0.9217093901750151`", 
     "0.9638339674928086`", "0.9217093901750151`", "0.927249839112885`", 
     "0.9217093901750151`", "0.9999999999999998`", "0.9999999999999998`", 
     "0.999967066883825`"},
    {"0.9429690485617555`", "0.9420023549821055`", "0.92165160948219`", 
     "0.9638439822720855`", "0.92165160948219`", "0.9272081119052409`", 
     "0.92165160948219`", "0.999967066883825`", "0.999967066883825`", 
     "0.9999999999999999`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.618505103612507*^9, 3.61850577026447*^9}]
}, Open  ]],

Cell["\<\
Since the covariance is not zero we know the random variables are not \
independent.\
\>", "Text",
 CellChangeTimes->{{3.6185040562776546`*^9, 3.6185040736996937`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxTotals", " ", "=", " ", 
   RowBox[{"Total", "[", "wdMaxTemps2", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.618502502122622*^9, 3.618502519622521*^9}, {
   3.6185040837679157`*^9, 3.618504083932283*^9}, {3.618504126611949*^9, 
   3.618504170130927*^9}, 3.6185042205317287`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxTotalsNormalized", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"10", "^", "0.5"}], ")"}]}], ")"}], " ", "*", " ", 
    "maxTotals"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6185042228061037`*^9, 3.618504292112576*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distMaxTotals", " ", "=", " ", 
  RowBox[{"Histogram", "[", "maxTotalsNormalized", "]"}]}]], "Input",
 CellChangeTimes->{{3.618504296308895*^9, 3.618504313687982*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.574], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.574], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-60., 0}, {-50., 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{26.25440352281825, 44.822191086202295`}, {
          90.51173827090174, 91.93456273819316}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-50., 0}, {-40., 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{44.322191086202295`, 62.88997864958634}, {
          90.51173827090174, 91.93456273819316}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-40., 0}, {-30., 10}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{62.38997864958634, 80.95776621297038}, {
          82.20631806527898, 91.93456273819316}}],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-30., 0}, {-20., 28}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{80.45776621297038, 99.02555377635443}, {
          65.59547765403343, 91.93456273819316}}],
        StatusArea[#, 28]& ,
        TagBoxNote->"28"],
       StyleBox["28", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[28, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-20., 0}, {-10., 78}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{98.52555377635443, 117.09334133973847`}, {
          19.45425428946247, 91.93456273819316}}],
        StatusArea[#, 78]& ,
        TagBoxNote->"78"],
       StyleBox["78", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[78, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-10., 0}, {0., 137}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{116.59334133973847`, 
          135.16112890312252`}, {-34.992389280731246`, 91.93456273819316}}],
        StatusArea[#, 137]& ,
        TagBoxNote->"137"],
       StyleBox["137", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[137, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {10., 147}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{134.66112890312252`, 
          153.22891646650658`}, {-44.22063395364543, 91.93456273819316}}],
        StatusArea[#, 147]& ,
        TagBoxNote->"147"],
       StyleBox["147", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[147, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10., 0}, {20., 133}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{152.72891646650658`, 
          171.2967040298906}, {-31.30109141156558, 91.93456273819316}}],
        StatusArea[#, 133]& ,
        TagBoxNote->"133"],
       StyleBox["133", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[133, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{20., 0}, {30., 136}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{170.7967040298906, 
          189.36449159327464`}, {-34.069564813439825`, 91.93456273819316}}],
        StatusArea[#, 136]& ,
        TagBoxNote->"136"],
       StyleBox["136", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[136, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{30., 0}, {40., 154}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{188.86449159327464`, 
          207.4322791566587}, {-50.68040522468539, 91.93456273819316}}],
        StatusArea[#, 154]& ,
        TagBoxNote->"154"],
       StyleBox["154", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[154, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{40., 0}, {50., 133}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{206.9322791566587, 
          225.50006672004275`}, {-31.30109141156558, 91.93456273819316}}],
        StatusArea[#, 133]& ,
        TagBoxNote->"133"],
       StyleBox["133", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[133, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{50., 0}, {60., 148}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{225.00006672004275`, 
          243.56785428342678`}, {-45.14345842093687, 91.93456273819316}}],
        StatusArea[#, 148]& ,
        TagBoxNote->"148"],
       StyleBox["148", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[148, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{60., 0}, {70., 163}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{243.06785428342678`, 
          261.6356418468108}, {-58.985825430308154`, 91.93456273819316}}],
        StatusArea[#, 163]& ,
        TagBoxNote->"163"],
       StyleBox["163", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[163, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{70., 0}, {80., 210}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{261.1356418468108, 
          279.7034294101949}, {-102.35857539300486`, 91.93456273819316}}],
        StatusArea[#, 210]& ,
        TagBoxNote->"210"],
       StyleBox["210", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[210, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{80., 0}, {90., 211}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{279.2034294101949, 
          297.77121697357893`}, {-103.28139986029626`, 91.93456273819316}}],
        StatusArea[#, 211]& ,
        TagBoxNote->"211"],
       StyleBox["211", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[211, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{90., 0}, {100., 104}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{297.27121697357893`, 
          315.839004536963}, {-4.539181860114425, 91.93456273819316}}],
        StatusArea[#, 104]& ,
        TagBoxNote->"104"],
       StyleBox["104", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[104, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{100., 0}, {110., 25}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{315.339004536963, 333.906792100347}, {
          68.36395105590769, 91.93456273819316}}],
        StatusArea[#, 25]& ,
        TagBoxNote->"25"],
       StyleBox["25", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[25, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{110., 0}, {120., 2}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{333.406792100347, 351.97457966373105`}, {
          89.58891380361032, 91.93456273819316}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-63.6, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-60., 120.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.618504314567971*^9, 3.618504639792301*^9, 
  3.618505794782795*^9}]
}, Open  ]],

Cell["\<\
It doesn\[CloseCurlyQuote]t look very normal. Let\[CloseCurlyQuote]s apply \
our normality test of checking for proportions within 1, 2, and 3 standard \
deviations of the mean.\
\>", "Text",
 CellChangeTimes->{{3.6185043250071774`*^9, 3.6185043537491693`*^9}, {
  3.618504397998186*^9, 3.6185044002522297`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"percentOfResults", "[", 
    RowBox[{"maxTotalsNormalized", ",", "#"}], "]"}], " ", "&"}], " ", "/@", 
  " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.618504411309455*^9, 3.618504415493925*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5837451949478308`", ",", "0.9879187259747392`", ",", "1.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.618504418516677*^9, 3.618504458909483*^9, 
  3.618504642367887*^9, 3.618505819750205*^9}]
}, Open  ]],

Cell["\<\
It\[CloseCurlyQuote]s not the right  proportion for one standard deviation \
from the mean but for 2 and 3 standard deviations from the mean, the \
distribution looks normal! Perhaps the crucial test for normality is the \
percentage of results that fall within 1 standard deviation of the mean. \
\>", "Text",
 CellChangeTimes->{{3.6185045186434813`*^9, 3.618504603384172*^9}, {
  3.620203888769025*^9, 3.6202039263393183`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experiment 3: Uniform Distributions", "Section",
 CellChangeTimes->{{3.606909356169656*^9, 3.6069093672876253`*^9}, {
  3.606925722963581*^9, 3.6069257278976393`*^9}, {3.606928294328497*^9, 
  3.6069282949367733`*^9}, {3.618502490041507*^9, 3.618502490701191*^9}, {
  3.6185047532707777`*^9, 3.618504754492052*^9}}],

Cell["10 RVs each uniformly (but differently) distributed.", "Text",
 CellChangeTimes->{{3.6069258684515867`*^9, 3.606925883200225*^9}, {
  3.6069263539915133`*^9, 3.606926365933185*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"urv", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomVariate", "[", 
     RowBox[{"UniformDistribution", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"60", ",", "100"}], "}"}], "]"}], ",", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"400", ",", "700"}], "}"}], "]"}]}], "}"}], "]"}], "]"}], 
    ",", " ", 
    RowBox[{"{", "nVar", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6069257769881067`*^9, 3.606925825586851*^9}, {
  3.606926369839221*^9, 3.606926405447752*^9}, {3.606926439114213*^9, 
  3.606926454326585*^9}, {3.606926500184844*^9, 3.606926533001129*^9}, {
  3.606926588654747*^9, 3.606926591262541*^9}, {3.606926902030642*^9, 
  3.606926910900838*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "459.00843247028604`", ",", "311.9450743212053`", ",", "483.6659744824685`",
    ",", "582.6963624886926`", ",", "459.5631124276065`", ",", 
   "617.2827338032594`", ",", "103.00909955045228`", ",", "411.985502428926`",
    ",", "339.0735229787839`", ",", "425.33557620592387`"}], "}"}]], "Output",\

 CellChangeTimes->{{3.606925827044783*^9, 3.606925840314021*^9}, 
   3.606926407416185*^9, {3.6069264635947866`*^9, 3.606926470789563*^9}, 
   3.606926534193039*^9, 3.606926592424881*^9, 3.606948646465588*^9, 
   3.6072078036331997`*^9, 3.607207932999967*^9, 3.618504642492423*^9}]
}, Open  ]],

Cell["Sum of these 10 RVs", "Text",
 CellChangeTimes->{{3.606926577126186*^9, 3.606926582571786*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"turv", " ", "=", " ", 
  RowBox[{"Total", "[", "urv", "]"}]}]], "Input",
 CellChangeTimes->{{3.6069265957970247`*^9, 3.606926599155916*^9}, {
  3.606926660237137*^9, 3.60692666186158*^9}}],

Cell[BoxData["4193.565391157605`"], "Output",
 CellChangeTimes->{3.606926600414565*^9, 3.606926662783544*^9, 
  3.606948646499469*^9, 3.607207803682353*^9, 3.607207933049827*^9, 
  3.6185046425383453`*^9}]
}, Open  ]],

Cell["\<\
Now sum up a series of trials of the sum of these uniformly (but \
differentlly) distributed RVs.\
\>", "Text",
 CellChangeTimes->{{3.606926619157761*^9, 3.6069266542351913`*^9}}],

Cell["Generate the 10 distinct uniform distributions", "Text",
 CellChangeTimes->{{3.606927009963314*^9, 3.606927018072967*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"udists", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"UniformDistribution", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"50", ",", "100"}], "}"}], "]"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"400", ",", "1000"}], "}"}], "]"}]}], "}"}], "]"}], ",", " ", 
    RowBox[{"{", "nVar", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6069257769881067`*^9, 3.606925825586851*^9}, {
   3.606926369839221*^9, 3.606926405447752*^9}, {3.606926439114213*^9, 
   3.606926454326585*^9}, {3.606926500184844*^9, 3.606926533001129*^9}, {
   3.606926588654747*^9, 3.606926591262541*^9}, 3.60692670036793*^9, {
   3.606926850924363*^9, 3.606926866094302*^9}, {3.6069269251592627`*^9, 
   3.60692698026116*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"79", ",", "769"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"92", ",", "952"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"94", ",", "483"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"64", ",", "612"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"82", ",", "609"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"50", ",", "680"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"73", ",", "418"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"56", ",", "616"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"98", ",", "678"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"52", ",", "853"}], "}"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.606926953088463*^9, 3.6069269814418573`*^9}, 
   3.6069486465311823`*^9, 3.607207803733346*^9, 3.607207933084004*^9, 
   3.618504642587894*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"uvals", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"RandomVariate", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
      "udists"}], ",", " ", 
     RowBox[{"{", "nTrials", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.606927046292348*^9, 3.60692705270656*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tuVals", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"nTrials", "^", "0.5"}]}], ")"}], " ", "*", " ", 
      RowBox[{"Total", "[", "#", "]"}]}], " ", "&"}], " ", "/@", " ", 
    "uvals"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.606864690571073*^9, 3.6068647084606743`*^9}, {
   3.606864811935142*^9, 3.606864820387293*^9}, 3.606868643674786*^9, {
   3.606927104580112*^9, 3.6069271096184683`*^9}, {3.606927285451335*^9, 
   3.606927294961637*^9}}],

Cell["See if these values are normally distributed:", "Text",
 CellChangeTimes->{{3.606868538054558*^9, 3.6068685588811502`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"htuVals", " ", "=", " ", 
  RowBox[{"Histogram", "[", "tuVals", "]"}]}]], "Input",
 CellChangeTimes->{{3.606868568538292*^9, 3.606868577393078*^9}, {
  3.6069271238520947`*^9, 3.606927127866996*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5529999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5529999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{65., 0}, {70., 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{26.25440352281825, 42.24107857714742}, {
          91.73869173234993, 93.93187401581505}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{70., 0}, {75., 4}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{41.74107857714742, 57.72775363147662}, {
          86.65914488195455, 93.93187401581505}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{75., 0}, {80., 7}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{57.22775363147662, 73.21442868580579}, {
          81.57959803155917, 93.93187401581505}}],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{80., 0}, {85., 19}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{72.71442868580579, 88.70110374013498}, {
          61.26141062997767, 93.93187401581505}}],
        StatusArea[#, 19]& ,
        TagBoxNote->"19"],
       StyleBox["19", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[19, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{85., 0}, {90., 30}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{88.20110374013498, 104.18777879446415`}, {
          42.63640551186129, 93.93187401581505}}],
        StatusArea[#, 30]& ,
        TagBoxNote->"30"],
       StyleBox["30", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[30, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{90., 0}, {95., 53}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{103.68777879446415`, 119.67445384879332`}, {
          3.693212992163396, 93.93187401581505}}],
        StatusArea[#, 53]& ,
        TagBoxNote->"53"],
       StyleBox["53", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[53, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{95., 0}, {100., 75}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{119.17445384879332`, 
          135.1611289031225}, {-33.55679724406936, 93.93187401581505}}],
        StatusArea[#, 75]& ,
        TagBoxNote->"75"],
       StyleBox["75", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[75, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{100., 0}, {105., 81}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{134.6611289031225, 
          150.64780395745166`}, {-43.71589094486012, 93.93187401581505}}],
        StatusArea[#, 81]& ,
        TagBoxNote->"81"],
       StyleBox["81", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[81, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{105., 0}, {110., 96}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{150.14780395745166`, 
          166.13447901178083`}, {-69.113625196837, 93.93187401581505}}],
        StatusArea[#, 96]& ,
        TagBoxNote->"96"],
       StyleBox["96", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[96, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{110., 0}, {115., 96}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{165.63447901178083`, 
          181.62115406611005`}, {-69.113625196837, 93.93187401581505}}],
        StatusArea[#, 96]& ,
        TagBoxNote->"96"],
       StyleBox["96", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[96, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{115., 0}, {120., 95}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{181.12115406611005`, 
          197.10782912043922`}, {-67.42044291337189, 93.93187401581505}}],
        StatusArea[#, 95]& ,
        TagBoxNote->"95"],
       StyleBox["95", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[95, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{120., 0}, {125., 115}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{196.60782912043922`, 
          212.5945041747684}, {-101.28408858267437`, 93.93187401581505}}],
        StatusArea[#, 115]& ,
        TagBoxNote->"115"],
       StyleBox["115", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[115, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{125., 0}, {130., 85}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{212.0945041747684, 
          228.08117922909756`}, {-50.48862007872063, 93.93187401581505}}],
        StatusArea[#, 85]& ,
        TagBoxNote->"85"],
       StyleBox["85", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[85, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{130., 0}, {135., 74}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{227.58117922909756`, 
          243.56785428342673`}, {-31.863614960604238`, 93.93187401581505}}],
        StatusArea[#, 74]& ,
        TagBoxNote->"74"],
       StyleBox["74", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[74, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{135., 0}, {140., 68}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{243.06785428342673`, 
          259.05452933775587`}, {-21.70452125981349, 93.93187401581505}}],
        StatusArea[#, 68]& ,
        TagBoxNote->"68"],
       StyleBox["68", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[68, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{140., 0}, {145., 41}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{258.55452933775587`, 274.5412043920851}, {
          24.011400393744907`, 93.93187401581505}}],
        StatusArea[#, 41]& ,
        TagBoxNote->"41"],
       StyleBox["41", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[41, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{145., 0}, {150., 29}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{274.0412043920851, 290.0278794464143}, {
          44.32958779532641, 93.93187401581505}}],
        StatusArea[#, 29]& ,
        TagBoxNote->"29"],
       StyleBox["29", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[29, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{150., 0}, {155., 13}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{289.5278794464143, 305.51455450074343`}, {
          71.42050433076842, 93.93187401581505}}],
        StatusArea[#, 13]& ,
        TagBoxNote->"13"],
       StyleBox["13", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[13, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{155., 0}, {160., 8}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{305.01455450074343`, 321.00122955507265`}, {
          79.88641574809405, 93.93187401581505}}],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{160., 0}, {165., 6}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{320.50122955507265`, 336.48790460940177`}, {
          83.2727803150243, 93.93187401581505}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{165., 0}, {170., 4}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{335.98790460940177`, 351.974579663731}, {
          86.65914488195455, 93.93187401581505}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{62.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{65., 170.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6068685782580748`*^9, 3.606868648589066*^9, 
  3.606869009227743*^9, 3.606906427507902*^9, 3.606906533844841*^9, 
  3.606906586312525*^9, 3.606908382036767*^9, 3.6069084698111753`*^9, 
  3.6069085549200277`*^9, 3.606927130816011*^9, 3.606927298790351*^9, 
  3.606948646656129*^9, 3.607207804022377*^9, 3.607207933212619*^9, 
  3.6185046427975197`*^9}]
}, Open  ]],

Cell["\<\
The percentage of results within 1, 2, and 3 standard deviation of the mean:\
\>", "Text",
 CellChangeTimes->{{3.606868723715685*^9, 3.606868753727902*^9}, {
  3.6068688120577374`*^9, 3.606868816223525*^9}, {3.606929247709957*^9, 
  3.606929251922496*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"percentOfResults", "[", 
    RowBox[{"tuVals", ",", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.606869293351736*^9, 3.606869316597967*^9}, 
   3.606927257979444*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.658`", ",", "0.96`", ",", "1.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6068693178289413`*^9, 3.606906458735417*^9, 3.606906546124496*^9, 
   3.606906586448675*^9, 3.606908382180192*^9, 3.6069084699396772`*^9, 
   3.606908555046671*^9, 3.6069272593357973`*^9, {3.6069273053499813`*^9, 
   3.6069273081989193`*^9}, 3.60694864670019*^9, 3.607207804066017*^9, 
   3.607207933266011*^9, 3.6185046428372803`*^9}]
}, Open  ]],

Cell["\<\
Conclusion: Close to normal even when the CLT conditions are relaxed \
considerably.\
\>", "Text",
 CellChangeTimes->{{3.606988221063676*^9, 3.606988255254107*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experiment 4: Exponential Distributions", "Section",
 CellChangeTimes->{{3.606928263506998*^9, 3.606928265072875*^9}, {
  3.606928298472602*^9, 3.606928301840836*^9}, {3.606928351714633*^9, 
  3.60692835529633*^9}, {3.61850475905453*^9, 3.618504760052238*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomVariate", "[", 
   RowBox[{"ExponentialDistribution", "[", "1", "]"}], "]"}], " ", "*", " ", 
  "1000"}]], "Input",
 CellChangeTimes->{{3.606928403983244*^9, 3.606928471449008*^9}}],

Cell[BoxData["631.0141919226871`"], "Output",
 CellChangeTimes->{{3.606928439604088*^9, 3.6069284968567257`*^9}, 
   3.606948646752852*^9, 3.6072078041469088`*^9, 3.607207933296618*^9, 
   3.618504642888937*^9}]
}, Open  ]],

Cell["\<\
10 RVs each exponentially distributed but with different lambdas.\
\>", "Text",
 CellChangeTimes->{{3.606928788367552*^9, 3.606928804037407*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"edists", "  ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ExponentialDistribution", "[", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "2.0"}], "}"}], "]"}], "]"}], ",", " ", 
    RowBox[{"{", "nVar", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.606928658939927*^9, 3.6069286875869913`*^9}, {
   3.606928733089226*^9, 3.606928761991899*^9}, 3.606928895176776*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ExponentialDistribution", "[", "1.6590697265568535`", "]"}], ",", 
   
   RowBox[{"ExponentialDistribution", "[", "0.5696425510053986`", "]"}], ",", 
   
   RowBox[{"ExponentialDistribution", "[", "1.932904485486283`", "]"}], ",", 
   RowBox[{"ExponentialDistribution", "[", "0.9562470176888924`", "]"}], ",", 
   
   RowBox[{"ExponentialDistribution", "[", "0.8158314964572413`", "]"}], ",", 
   
   RowBox[{"ExponentialDistribution", "[", "1.9807239480392234`", "]"}], ",", 
   
   RowBox[{"ExponentialDistribution", "[", "1.7805109511341088`", "]"}], ",", 
   
   RowBox[{"ExponentialDistribution", "[", "0.9884540507778214`", "]"}], ",", 
   
   RowBox[{"ExponentialDistribution", "[", "1.8090329973986603`", "]"}], ",", 
   
   RowBox[{"ExponentialDistribution", "[", "0.7793642620284345`", "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6069287668588047`*^9, 3.606928898377743*^9, 
  3.6069486467849216`*^9, 3.607207804200748*^9, 3.6072079333502493`*^9, 
  3.618504642938919*^9}]
}, Open  ]],

Cell["\<\
Generate trials -- the 1000 multiplier here harks back to the the rough total \
of 1000 grams for a loaf of bread.\
\>", "Text",
 CellChangeTimes->{{3.606928906602845*^9, 3.606928929172456*^9}, {
  3.606929038307391*^9, 3.606929048883911*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"evals", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"1000", "  ", "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"RandomVariate", "[", "#", "]"}], " ", "&"}], " ", "/@", " ",
         "edists"}], ")"}]}], ",", " ", 
     RowBox[{"{", "nTrials", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.606928866672842*^9, 3.6069288811990633`*^9}, {
  3.6069291202448187`*^9, 3.6069291838695507`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"teVals", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"nTrials", "^", "0.5"}]}], ")"}], " ", "*", " ", 
      RowBox[{"Total", "[", "#", "]"}]}], " ", "&"}], " ", "/@", " ", 
    "evals"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.606864690571073*^9, 3.6068647084606743`*^9}, {
   3.606864811935142*^9, 3.606864820387293*^9}, 3.606868643674786*^9, {
   3.606927104580112*^9, 3.6069271096184683`*^9}, {3.606927285451335*^9, 
   3.606927294961637*^9}, {3.606929076623671*^9, 3.606929084630142*^9}}],

Cell["See if these values are normally distributed:", "Text",
 CellChangeTimes->{{3.606868538054558*^9, 3.6068685588811502`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hteVals", " ", "=", " ", 
  RowBox[{"Histogram", "[", "teVals", "]"}]}]], "Input",
 CellChangeTimes->{{3.606868568538292*^9, 3.606868577393078*^9}, {
  3.6069271238520947`*^9, 3.606927127866996*^9}, {3.60692909218332*^9, 
  3.6069290969810963`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.46199999999999997`], Thickness[Small]}], 
     RectangleBox[{60., 0}, {80., 2},
      RoundingRadius->0], RectangleBox[{80., 0}, {100., 5},
      RoundingRadius->0], RectangleBox[{100., 0}, {120., 12},
      RoundingRadius->0], RectangleBox[{120., 0}, {140., 23},
      RoundingRadius->0], RectangleBox[{140., 0}, {160., 36},
      RoundingRadius->0], RectangleBox[{160., 0}, {180., 48},
      RoundingRadius->0], RectangleBox[{180., 0}, {200., 64},
      RoundingRadius->0], RectangleBox[{200., 0}, {220., 85},
      RoundingRadius->0], RectangleBox[{220., 0}, {240., 92},
      RoundingRadius->0], RectangleBox[{240., 0}, {260., 83},
      RoundingRadius->0], RectangleBox[{260., 0}, {280., 78},
      RoundingRadius->0], RectangleBox[{280., 0}, {300., 83},
      RoundingRadius->0], RectangleBox[{300., 0}, {320., 93},
      RoundingRadius->0], RectangleBox[{320., 0}, {340., 55},
      RoundingRadius->0], RectangleBox[{340., 0}, {360., 49},
      RoundingRadius->0], RectangleBox[{360., 0}, {380., 41},
      RoundingRadius->0], RectangleBox[{380., 0}, {400., 32},
      RoundingRadius->0], RectangleBox[{400., 0}, {420., 39},
      RoundingRadius->0], RectangleBox[{420., 0}, {440., 23},
      RoundingRadius->0], RectangleBox[{440., 0}, {460., 10},
      RoundingRadius->0], RectangleBox[{460., 0}, {480., 11},
      RoundingRadius->0], RectangleBox[{480., 0}, {500., 10},
      RoundingRadius->0], RectangleBox[{500., 0}, {520., 3},
      RoundingRadius->0], RectangleBox[{520., 0}, {540., 2},
      RoundingRadius->0], RectangleBox[{540., 0}, {560., 6},
      RoundingRadius->0], RectangleBox[{560., 0}, {580., 3},
      RoundingRadius->0], RectangleBox[{580., 0}, {600., 3},
      RoundingRadius->0], RectangleBox[{600., 0}, {620., 2},
      RoundingRadius->0], RectangleBox[{620., 0}, {640., 2},
      RoundingRadius->0], RectangleBox[{640., 0}, {660., 2},
      RoundingRadius->0], RectangleBox[{660., 0}, {680., 1},
      RoundingRadius->0], RectangleBox[{700., 0}, {720., 1},
      RoundingRadius->0], RectangleBox[{720., 0}, {740., 1},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{46.4, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{60., 740.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6068685782580748`*^9, 3.606868648589066*^9, 
  3.606869009227743*^9, 3.606906427507902*^9, 3.606906533844841*^9, 
  3.606906586312525*^9, 3.606908382036767*^9, 3.6069084698111753`*^9, 
  3.6069085549200277`*^9, 3.606927130816011*^9, 3.606927298790351*^9, 
  3.606929097988255*^9, 3.6069291416496964`*^9, 3.6069291919455423`*^9, 
  3.606948647114008*^9, 3.607207804449288*^9, 3.607207933629271*^9, 
  3.6185046432636557`*^9}]
}, Open  ]],

Cell["\<\
The percentage of results within 1, 2, and 3 standard deviation of the mean:\
\>", "Text",
 CellChangeTimes->{{3.606868723715685*^9, 3.606868753727902*^9}, {
  3.6068688120577374`*^9, 3.606868816223525*^9}, {3.606929236660903*^9, 
  3.606929239266614*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"percentOfResults", "[", 
    RowBox[{"teVals", ",", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"0.5", ",", "1", ",", "1.5", ",", "2", ",", "3"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.606869293351736*^9, 3.606869316597967*^9}, 
   3.606927257979444*^9, {3.60692920868019*^9, 3.6069292101490602`*^9}, {
   3.618504775789398*^9, 3.61850479118885*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.403`", ",", "0.711`", ",", "0.898`", ",", "0.961`", ",", "0.988`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6068693178289413`*^9, 3.606906458735417*^9, 3.606906546124496*^9, 
   3.606906586448675*^9, 3.606908382180192*^9, 3.6069084699396772`*^9, 
   3.606908555046671*^9, 3.6069272593357973`*^9, {3.6069273053499813`*^9, 
   3.6069273081989193`*^9}, {3.606929211286104*^9, 3.606929216969405*^9}, 
   3.6069486471547003`*^9, 3.6072078045544577`*^9, 3.607207933662936*^9, 
   3.618504643284398*^9, {3.618504778078528*^9, 3.6185047922187853`*^9}}]
}, Open  ]],

Cell["\<\
Conclusion: Close to normal even when the CLT conditions are relaxed \
considerably.\
\>", "Text",
 CellChangeTimes->{{3.606988221063676*^9, 3.606988255254107*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experiment 5: LogNormal Distributions", "Section",
 CellChangeTimes->{{3.606930428932481*^9, 3.606930438282804*^9}, {
  3.618505840720071*^9, 3.618505841316839*^9}}],

Cell["\<\
As we did for the Normal distributions, let\[CloseCurlyQuote]s create a \
generating function for the LogNormal distribution. We can control the size \
of the standard deviation using the stdFraction constant.\
\>", "Text",
 CellChangeTimes->{{3.6069304430752993`*^9, 3.60693047683459*^9}, {
  3.606930607579955*^9, 3.60693065009755*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"genLogNormalDist", "[", "mean_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"stdFraction", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "50."}], ")"}], "*", " ", "mean"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Make", " ", "the", " ", "standard", " ", "deviation", " ", "a", " ", 
        "very", " ", "small", " ", 
        RowBox[{"fraction", " ", "--"}], " ", 
        RowBox[{"stdFraction", " ", "--"}], " ", "of", " ", "the", " ", 
        "mean"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"LogNormalDistribution", "[", 
       RowBox[{"mean", ",", "stdFraction"}], "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.606861854796383*^9, 3.606861902813018*^9}, {
  3.606862366658029*^9, 3.606862491621779*^9}, {3.606862579356385*^9, 
  3.606862580626604*^9}, {3.6068626162397547`*^9, 3.606862618379139*^9}, {
  3.606862701305883*^9, 3.606862745290107*^9}, {3.60690637751451*^9, 
  3.606906379766334*^9}, {3.606906477248253*^9, 3.6069064787983027`*^9}, {
  3.60690656349548*^9, 3.606906564246459*^9}, {3.606908363693448*^9, 
  3.606908364193922*^9}, {3.606908456723769*^9, 3.606908457073805*^9}, {
  3.6069085386246977`*^9, 3.606908539848867*^9}, {3.6069306544209127`*^9, 
  3.606930662712813*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lndists", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"genLogNormalDist", "[", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"10", ",", "50"}], "}"}], "]"}], "]"}], " ", ",", 
    RowBox[{"{", "nVar", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6068624951370792`*^9, 3.606862515577705*^9}, {
   3.606862568980297*^9, 3.6068626327674103`*^9}, {3.606862675162938*^9, 
   3.606862688097204*^9}, {3.606862750498536*^9, 3.6068627722322187`*^9}, {
   3.606862803346058*^9, 3.606862861584261*^9}, {3.6068629405843983`*^9, 
   3.60686294347957*^9}, {3.606864176789632*^9, 3.606864199139604*^9}, {
   3.6068642369180393`*^9, 3.606864278834988*^9}, 3.606864437290539*^9, {
   3.606868928632922*^9, 3.606868959081833*^9}, {3.606930697973164*^9, 
   3.606930703025395*^9}, {3.6069314644174232`*^9, 3.6069314953184757`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"47", ",", "0.9400000000000001`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"16", ",", "0.32`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"48", ",", "0.96`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"21", ",", "0.42`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"29", ",", "0.58`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"26", ",", "0.52`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"17", ",", "0.34`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"16", ",", "0.32`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"40", ",", "0.8`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"46", ",", "0.92`"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.60693070897828*^9, {3.606931470310566*^9, 3.606931496278057*^9}, 
   3.6069486472281437`*^9, 3.6072078046707497`*^9, 3.6072079337314997`*^9, 
   3.6185046433531437`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lnvals", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"RandomVariate", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
   "lndists"}]}]], "Input",
 CellChangeTimes->{{3.606862879227641*^9, 3.606862905183379*^9}, {
  3.606864395737308*^9, 3.606864413673717*^9}, {3.606930749140183*^9, 
  3.606930759658918*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.1561877723085849`*^20", ",", "8.918659247154485`*^6", ",", 
   "1.4722049624261384`*^21", ",", "1.0147985170633476`*^9", ",", 
   "2.086224591363017`*^12", ",", "1.8454491061393906`*^11", ",", 
   "2.0002356227524992`*^7", ",", "6.234102768590991`*^6", ",", 
   "2.679642794174073`*^17", ",", "1.8968110383964697`*^20"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6068629057962008`*^9, 3.606864415861774*^9, 
  3.6068644516749363`*^9, 3.606864793524394*^9, 3.606868974925932*^9, 
  3.606906397569723*^9, 3.606906516246707*^9, 3.606906586033259*^9, 
  3.60690838184766*^9, 3.606908469617051*^9, 3.606908554729437*^9, 
  3.606930761315988*^9, 3.606930906587421*^9, 3.606931503340518*^9, 
  3.6069486472558737`*^9, 3.607207804702332*^9, 3.607207933765184*^9, 
  3.6185046433763313`*^9}]
}, Open  ]],

Cell["Adding the random variables together gives us:", "Text",
 CellChangeTimes->{{3.606864611807568*^9, 3.606864623020756*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tlnVals", " ", "=", " ", 
  RowBox[{"Total", "[", "lnvals", "]"}]}]], "Input",
 CellChangeTimes->{{3.6068645068654957`*^9, 3.606864520812772*^9}, {
  3.60693081227601*^9, 3.6069308165140963`*^9}}],

Cell[BoxData["1.7777728100478807`*^21"], "Output",
 CellChangeTimes->{
  3.606864521864449*^9, {3.6068647742345037`*^9, 3.6068647971735277`*^9}, 
   3.6068689807189713`*^9, 3.60690640162586*^9, 3.6069065196844273`*^9, 
   3.606906586127697*^9, 3.606908381882036*^9, 3.606908469670452*^9, 
   3.606908554762536*^9, 3.606930818055087*^9, 3.606948647287106*^9, 
   3.607207804785296*^9, 3.607207933818144*^9, 3.618504643694291*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "lnvals", "]"}]], "Input",
 CellChangeTimes->{{3.606930898519507*^9, 3.606930916944121*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6789999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6789999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {5.*^20, 9}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{15.465772618094473`, 
          127.8953162530024}, {-107.58091598093354`, 93.96259636226306}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.*^21, 0}, {1.5*^21, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{239.32485988791032`, 351.7544035228183}, {
          71.1244283241301, 93.96259636226306}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-3.*^19, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 1.5*^21}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6069309177985764`*^9, 3.606948647341713*^9, 
  3.60720780483778*^9, 3.607207933849722*^9, 3.618504643738551*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomVariate", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
  "lndists"}]], "Input",
 CellChangeTimes->{{3.6069309569019003`*^9, 3.606930976783432*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.837348205430686`*^20", ",", "4.2057253815774135`*^6", ",", 
   "1.8011188335112733`*^21", ",", "1.311877547412799`*^9", ",", 
   "2.9057658536900103`*^12", ",", "3.340491440693261`*^11", ",", 
   "3.447467978236194`*^7", ",", "1.3575938181718577`*^7", ",", 
   "3.842118038297652`*^17", ",", "1.0481172408083834`*^20"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6069309776963387`*^9, 3.6069486473877068`*^9, 
  3.6072078048842487`*^9, 3.607207933883128*^9, 3.618504643751808*^9}]
}, Open  ]],

Cell["Now let\[CloseCurlyQuote]s run some trials.", "Text",
 CellChangeTimes->{{3.6068645550753098`*^9, 3.606864570533668*^9}, {
  3.6068685986028547`*^9, 3.6068686044249496`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lnvals", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"RandomVariate", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
      "lndists"}], ",", " ", 
     RowBox[{"{", "nTrials", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6068645769322653`*^9, 3.6068645946156387`*^9}, {
  3.606864629126903*^9, 3.606864634287259*^9}, {3.606868623058442*^9, 
  3.606868637333198*^9}, {3.606930838965436*^9, 3.6069308450746098`*^9}, {
  3.606930997778336*^9, 3.606931003393132*^9}, {3.6069312938791943`*^9, 
  3.606931305161113*^9}}],

Cell["Add the values of the random variables for each trial.", "Text",
 CellChangeTimes->{{3.606864655046526*^9, 3.606864686716683*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tlnVals", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"nTrials", "^", "0.5"}]}], ")"}], " ", "*", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Total", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
      "lnvals"}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.606864690571073*^9, 3.6068647084606743`*^9}, {
   3.606864811935142*^9, 3.606864820387293*^9}, 3.606868643674786*^9, {
   3.606927163003811*^9, 3.606927182306308*^9}, {3.606930852051888*^9, 
   3.6069308574979687`*^9}, 3.606931013930689*^9, 3.60693131516957*^9, {
   3.6069487589091*^9, 3.606948765289235*^9}}],

Cell["\<\
See if these values are normally distributed (skip the histogram):\
\>", "Text",
 CellChangeTimes->{{3.606868538054558*^9, 3.6068685588811502`*^9}, {
  3.60693108013056*^9, 3.606931084590578*^9}}],

Cell["\<\
The percentage of results within 1, 2, and 3 standard deviation of the mean:\
\>", "Text",
 CellChangeTimes->{{3.606868723715685*^9, 3.606868753727902*^9}, {
  3.6068688120577374`*^9, 3.606868816223525*^9}, {3.606929270485841*^9, 
  3.606929273898283*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"percentOfResults", "[", 
    RowBox[{"tlnVals", ",", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.606869293351736*^9, 3.606869316597967*^9}, 
   3.6069271973563223`*^9, {3.606931052626954*^9, 3.606931053897113*^9}, {
   3.606931351054768*^9, 3.6069313810706244`*^9}, {3.606948625619154*^9, 
   3.6069486309701557`*^9}, {3.606948667243409*^9, 3.606948725553334*^9}, {
   3.606948996754527*^9, 3.60694899767179*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.905`", ",", "0.962`", ",", "0.98`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6068693178289413`*^9, 3.606906458735417*^9, 3.606906546124496*^9, 
   3.606906586448675*^9, 3.606908382180192*^9, 3.6069084699396772`*^9, 
   3.606908555046671*^9, 3.606927198848002*^9, 3.606928626556842*^9, 
   3.606931060786889*^9, 3.606931321255691*^9, {3.606931354127335*^9, 
   3.606931382159594*^9}, {3.606948633038988*^9, 3.606948726460082*^9}, 
   3.6069487739937897`*^9, 3.606948998751025*^9, 3.607207805123953*^9, 
   3.607207934120496*^9, 3.618504644102645*^9}]
}, Open  ]],

Cell["Conclusion: Quite different from normal.", "Text",
 CellChangeTimes->{{3.606988221063676*^9, 3.606988255254107*^9}, {
  3.606988291631824*^9, 3.606988302125778*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experiment 6: Bernoulli Distribution", "Section",
 CellChangeTimes->{{3.60694880832859*^9, 3.606948853174303*^9}, {
  3.6185058465004883`*^9, 3.618505847060389*^9}}],

Cell["Generate 10 distinct Bernoulli distributions.", "Text",
 CellChangeTimes->{{3.606949275101529*^9, 3.60694929063536*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bdists", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"BernoulliDistribution", "[", 
     RowBox[{"RandomReal", "[", "]"}], "]"}], ",", " ", 
    RowBox[{"{", "nVar", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6069257769881067`*^9, 3.606925825586851*^9}, {
   3.606926369839221*^9, 3.606926405447752*^9}, {3.606926439114213*^9, 
   3.606926454326585*^9}, {3.606926500184844*^9, 3.606926533001129*^9}, {
   3.606926588654747*^9, 3.606926591262541*^9}, 3.60692670036793*^9, {
   3.606926850924363*^9, 3.606926866094302*^9}, {3.6069269251592627`*^9, 
   3.60692698026116*^9}, {3.6069492977196617`*^9, 3.606949334311059*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"BernoulliDistribution", "[", "0.8101472905347786`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.37619414963537`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.4605297198949725`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.48000139132754227`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.8418419903459486`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.4143673209756049`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.3134825321830521`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.7069986772614458`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.1927575450181096`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.606949343010428*^9, 3.607207805314035*^9, 
  3.607207934148868*^9, 3.618504644160654*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"bvals", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"RandomVariate", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
      "bdists"}], ",", " ", 
     RowBox[{"{", "nTrials", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.606927046292348*^9, 3.60692705270656*^9}, {
  3.606949599963661*^9, 3.6069496065531387`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tbVals", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"nTrials", "^", "0.5"}]}], ")"}], " ", "*", " ", 
      RowBox[{"Total", "[", "#", "]"}]}], " ", "&"}], " ", "/@", " ", 
    "bvals"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.606864690571073*^9, 3.6068647084606743`*^9}, {
   3.606864811935142*^9, 3.606864820387293*^9}, 3.606868643674786*^9, {
   3.606927104580112*^9, 3.6069271096184683`*^9}, {3.606927285451335*^9, 
   3.606927294961637*^9}, {3.606949614261458*^9, 3.606949621707423*^9}}],

Cell["See if these values are normally distributed:", "Text",
 CellChangeTimes->{{3.606868538054558*^9, 3.6068685588811502`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"htbVals", " ", "=", " ", 
  RowBox[{"Histogram", "[", "tbVals", "]"}]}]], "Input",
 CellChangeTimes->{{3.606868568538292*^9, 3.606868577393078*^9}, {
  3.6069271238520947`*^9, 3.606927127866996*^9}, {3.606949628947324*^9, 
  3.6069496353069143`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.595], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.595], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.02, 0}, {0.04, 4}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{26.25440352281825, 48.4357485988791}, {
          88.29398269628203, 91.93456273819315}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.06, 0}, {0.08, 32}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{69.61709367493994, 91.79843875100079}, {
          66.30992240290419, 91.93456273819315}}],
        StatusArea[#, 32]& ,
        TagBoxNote->"32"],
       StyleBox["32", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[32, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.08, 0}, {0.1, 116}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{91.29843875100079, 113.47978382706164`}, {
          0.35774152277068083`, 91.93456273819315}}],
        StatusArea[#, 116]& ,
        TagBoxNote->"116"],
       StyleBox["116", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[116, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.12, 0}, {0.14, 210}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{134.6611289031225, 
          156.84247397918335`}, {-73.44588946214064, 91.93456273819315}}],
        StatusArea[#, 210]& ,
        TagBoxNote->"210"],
       StyleBox["210", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[210, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.14, 0}, {0.16, 248}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{156.34247397918335`, 
          178.5238190552442}, {-103.28139986029628`, 91.93456273819315}}],
        StatusArea[#, 248]& ,
        TagBoxNote->"248"],
       StyleBox["248", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[248, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.18, 0}, {0.2, 203}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{199.70516413130503`, 
          221.8865092073659}, {-67.94987438879618, 91.93456273819315}}],
        StatusArea[#, 203]& ,
        TagBoxNote->"203"],
       StyleBox["203", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[203, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.22, 0}, {0.24, 145}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{243.06785428342673`, 
          265.24919935948753`}, {-22.411463781084947`, 91.93456273819315}}],
        StatusArea[#, 145]& ,
        TagBoxNote->"145"],
       StyleBox["145", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[145, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.24, 0}, {0.26, 36}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{264.74919935948753`, 286.9305444355484}, {
          63.16934236099307, 91.93456273819315}}],
        StatusArea[#, 36]& ,
        TagBoxNote->"36"],
       StyleBox["36", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[36, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.28, 0}, {0.3, 5}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{308.11188951160926`, 330.2932345876701}, {
          87.50883768580425, 91.93456273819315}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.3, 0}, {0.32, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{329.7932345876701, 351.97457966373094`}, {
          90.64941772771537, 91.93456273819315}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.014, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0.02, 0.32}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6068685782580748`*^9, 3.606868648589066*^9, 
  3.606869009227743*^9, 3.606906427507902*^9, 3.606906533844841*^9, 
  3.606906586312525*^9, 3.606908382036767*^9, 3.6069084698111753`*^9, 
  3.6069085549200277`*^9, 3.606927130816011*^9, 3.606927298790351*^9, 
  3.606948646656129*^9, 3.60694963770644*^9, 3.607207805616589*^9, 
  3.607207934381949*^9, 3.618504644718852*^9}]
}, Open  ]],

Cell["\<\
The percentage of results within 1, 2, and 3 standard deviation of the mean:\
\>", "Text",
 CellChangeTimes->{{3.606868723715685*^9, 3.606868753727902*^9}, {
  3.6068688120577374`*^9, 3.606868816223525*^9}, {3.606929247709957*^9, 
  3.606929251922496*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"percentOfResults", "[", 
    RowBox[{"tbVals", ",", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.606869293351736*^9, 3.606869316597967*^9}, 
   3.606927257979444*^9, {3.606949653861176*^9, 3.606949655331181*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.661`", ",", "0.958`", ",", "0.999`"}], "}"}]], "Output",
 CellChangeTimes->{3.6069496566331244`*^9, 3.607207805656762*^9, 
  3.607207934434388*^9, 3.618504644753237*^9}]
}, Open  ]],

Cell["\<\
Conclusion: Close to normal even when the CLT conditions are relaxed \
considerably.\
\>", "Text",
 CellChangeTimes->{{3.606988221063676*^9, 3.606988255254107*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experiment 7: A Mix of Distributions", "Section",
 CellChangeTimes->{{3.6069812361662188`*^9, 3.6069812444760303`*^9}, {
  3.618505851684257*^9, 3.6185058522126637`*^9}}],

Cell["\<\
In this case we randomly pick a distribution for each RV. We pick from the \
sets of distributions that we\[CloseCurlyQuote]ve already created -- Normal, \
LogNormal, Bernoulli, Exponential, or Uniform.\
\>", "Text",
 CellChangeTimes->{{3.606981249988153*^9, 3.606981343363352*^9}}],

Cell["\<\
Here\[CloseCurlyQuote]s the complete set of the specific distributions we\
\[CloseCurlyQuote]ve created so far.\
\>", "Text",
 CellChangeTimes->{{3.606981361989093*^9, 3.606981368299244*^9}, {
  3.606982127565921*^9, 3.6069821345180197`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allDists", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Fold", "[", 
    RowBox[{"Append", ",", "dists", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "udists", ",", " ", "edists", ",", " ", "lndists", ",", " ", "bdists"}],
       "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.606982244584588*^9, 3.606982257887113*^9}, {
  3.6069822902710543`*^9, 3.606982304473186*^9}, {3.6069823407353487`*^9, 
  3.6069823447272367`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"469", ",", "9.38`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"575", ",", "11.5`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"459", ",", "9.18`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"177", ",", "3.54`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"561", ",", "11.22`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"394", ",", "7.88`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"308", ",", "6.16`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"497", ",", "9.94`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"270", ",", "5.4`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"240", ",", "4.8`"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"79", ",", "769"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"92", ",", "952"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"94", ",", "483"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"64", ",", "612"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"82", ",", "609"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"50", ",", "680"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"73", ",", "418"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"56", ",", "616"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"98", ",", "678"}], "}"}], "]"}], ",", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"52", ",", "853"}], "}"}], "]"}], ",", 
   RowBox[{"ExponentialDistribution", "[", "1.6590697265568535`", "]"}], ",", 
   
   RowBox[{"ExponentialDistribution", "[", "0.5696425510053986`", "]"}], ",", 
   
   RowBox[{"ExponentialDistribution", "[", "1.932904485486283`", "]"}], ",", 
   RowBox[{"ExponentialDistribution", "[", "0.9562470176888924`", "]"}], ",", 
   
   RowBox[{"ExponentialDistribution", "[", "0.8158314964572413`", "]"}], ",", 
   
   RowBox[{"ExponentialDistribution", "[", "1.9807239480392234`", "]"}], ",", 
   
   RowBox[{"ExponentialDistribution", "[", "1.7805109511341088`", "]"}], ",", 
   
   RowBox[{"ExponentialDistribution", "[", "0.9884540507778214`", "]"}], ",", 
   
   RowBox[{"ExponentialDistribution", "[", "1.8090329973986603`", "]"}], ",", 
   
   RowBox[{"ExponentialDistribution", "[", "0.7793642620284345`", "]"}], ",", 
   
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"47", ",", "0.9400000000000001`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"16", ",", "0.32`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"48", ",", "0.96`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"21", ",", "0.42`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"29", ",", "0.58`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"26", ",", "0.52`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"17", ",", "0.34`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"16", ",", "0.32`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"40", ",", "0.8`"}], "]"}], ",", 
   RowBox[{"LogNormalDistribution", "[", 
    RowBox[{"46", ",", "0.92`"}], "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.8101472905347786`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.37619414963537`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.4605297198949725`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.48000139132754227`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.8418419903459486`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.4143673209756049`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.3134825321830521`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.7069986772614458`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.1927575450181096`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.606982312037668*^9, 3.6069823457429323`*^9, 
  3.607207805734951*^9, 3.607207934466161*^9, 3.607208194828021*^9, 
  3.618504644780539*^9}]
}, Open  ]],

Cell["\<\
Now make 10 random selections from this set to create a distinct distribution \
for each of the 10 RVs. Just for variety, we\[CloseCurlyQuote]ll pick 50 \
times just to be sure we\[CloseCurlyQuote]ve seen a wide mix of distributions.\
\>", "Text",
 CellChangeTimes->{{3.606982378358626*^9, 3.606982412948539*^9}, {
  3.6069825044062*^9, 3.606982578099579*^9}, {3.6069854436788263`*^9, 
  3.6069854444128304`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mdists", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomChoice", "[", 
      RowBox[{"allDists", ",", " ", "nVar"}], "]"}], ",", " ", 
     RowBox[{"{", "50", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.606982419964843*^9, 3.6069824624365463`*^9}, {
   3.60698258372558*^9, 3.606982592085704*^9}, 3.606982670071229*^9, {
   3.6069829480152617`*^9, 3.606982949708124*^9}, 3.606983503476413*^9, {
   3.60698449233479*^9, 3.6069845004835873`*^9}, {3.606986913716769*^9, 
   3.606986915335487*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomVariate", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
  RowBox[{"mdists", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6069309569019003`*^9, 3.606930976783432*^9}, {
  3.606982782398395*^9, 3.606982801179076*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6.698561602769088`*^16", ",", "118.46630622930286`", ",", "0", ",", "0", 
   ",", "483.37027183884913`", ",", "3.297159563028525`", ",", 
   "0.28277944111309433`", ",", "451.4016680052293`", ",", 
   "354.01333029287946`", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6069309776963387`*^9, 3.6069486473877068`*^9, 
  3.606982807279353*^9, 3.606982954897839*^9, 3.6072078058028917`*^9, 
  3.6072079345332937`*^9, 3.607208194949545*^9, 3.618504644857479*^9}]
}, Open  ]],

Cell["Now let\[CloseCurlyQuote]s run some trials for each mix of \
distributions.", "Text",
 CellChangeTimes->{{3.6068645550753098`*^9, 3.606864570533668*^9}, {
  3.6068685986028547`*^9, 3.6068686044249496`*^9}, {3.60698292823379*^9, 
  3.606982935337933*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mvals", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"RandomVariate", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        RowBox[{"mdists", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
       RowBox[{"{", "nTrials", "}"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "mdists", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6068645769322653`*^9, 3.6068645946156387`*^9}, {
  3.606864629126903*^9, 3.606864634287259*^9}, {3.606868623058442*^9, 
  3.606868637333198*^9}, {3.606930838965436*^9, 3.6069308450746098`*^9}, {
  3.606930997778336*^9, 3.606931003393132*^9}, {3.6069312938791943`*^9, 
  3.606931305161113*^9}, {3.6069828244926863`*^9, 3.606982903638088*^9}}],

Cell["Add the values of the random variables for each trial.", "Text",
 CellChangeTimes->{{3.606864655046526*^9, 3.606864686716683*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tmVals", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"nTrials", "^", "0.5"}]}], ")"}], " ", "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        RowBox[{"mvals", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "mvals", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.606864690571073*^9, 3.6068647084606743`*^9}, {
   3.606864811935142*^9, 3.606864820387293*^9}, 3.606868643674786*^9, {
   3.606927163003811*^9, 3.606927182306308*^9}, {3.606930852051888*^9, 
   3.6069308574979687`*^9}, 3.606931013930689*^9, 3.60693131516957*^9, {
   3.6069487589091*^9, 3.606948765289235*^9}, {3.606982971558111*^9, 
   3.6069830162608128`*^9}}],

Cell["\<\
See if these values are normally distributed (skip the histogram):\
\>", "Text",
 CellChangeTimes->{{3.606868538054558*^9, 3.6068685588811502`*^9}, {
  3.60693108013056*^9, 3.606931084590578*^9}}],

Cell["\<\
The percentage of results within 1, 2, and 3 standard deviation of the mean:\
\>", "Text",
 CellChangeTimes->{{3.606868723715685*^9, 3.606868753727902*^9}, {
  3.6068688120577374`*^9, 3.606868816223525*^9}, {3.606929270485841*^9, 
  3.606929273898283*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pr", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"percentOfResults", "[", 
       RowBox[{
        RowBox[{"tmVals", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "#"}], "]"}], " ", "&"}], " ", "/@",
      " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", 
      RowBox[{"Length", "[", "tmVals", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.606869293351736*^9, 3.606869316597967*^9}, 
   3.6069271973563223`*^9, {3.606931052626954*^9, 3.606931053897113*^9}, {
   3.606931351054768*^9, 3.6069313810706244`*^9}, {3.606948625619154*^9, 
   3.6069486309701557`*^9}, {3.606948667243409*^9, 3.606948725553334*^9}, {
   3.606948996754527*^9, 3.60694899767179*^9}, {3.6069830330853558`*^9, 
   3.60698306204449*^9}, {3.606983784464726*^9, 3.606983786112262*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.88`", ",", "0.954`", ",", "0.979`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.805`", ",", "0.955`", ",", "0.982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.92`", ",", "0.969`", ",", "0.984`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.758`", ",", "0.959`", ",", "0.984`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9`", ",", "0.966`", ",", "0.983`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.649`", ",", "0.968`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.867`", ",", "0.953`", ",", "0.982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.741`", ",", "0.958`", ",", "0.984`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.882`", ",", "0.959`", ",", "0.979`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.784`", ",", "0.947`", ",", "0.98`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.712`", ",", "0.953`", ",", "0.99`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.902`", ",", "0.961`", ",", "0.982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.642`", ",", "0.97`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.917`", ",", "0.969`", ",", "0.984`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.933`", ",", "0.969`", ",", "0.985`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.887`", ",", "0.964`", ",", "0.98`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.648`", ",", "0.964`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.92`", ",", "0.968`", ",", "0.982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.876`", ",", "0.955`", ",", "0.983`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.895`", ",", "0.955`", ",", "0.981`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.911`", ",", "0.967`", ",", "0.982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.646`", ",", "0.972`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.736`", ",", "0.954`", ",", "0.99`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.849`", ",", "0.96`", ",", "0.984`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.88`", ",", "0.958`", ",", "0.982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.889`", ",", "0.964`", ",", "0.982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.66`", ",", "0.967`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.714`", ",", "0.961`", ",", "0.989`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.577`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.699`", ",", "0.95`", ",", "0.997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.764`", ",", "0.962`", ",", "0.984`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.864`", ",", "0.955`", ",", "0.981`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.715`", ",", "0.951`", ",", "0.991`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.914`", ",", "0.957`", ",", "0.976`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.903`", ",", "0.968`", ",", "0.986`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.945`", ",", "0.984`", ",", "0.992`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.863`", ",", "0.957`", ",", "0.988`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.736`", ",", "0.956`", ",", "0.986`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.696`", ",", "0.961`", ",", "0.99`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.703`", ",", "0.953`", ",", "0.992`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.892`", ",", "0.957`", ",", "0.979`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.889`", ",", "0.957`", ",", "0.985`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.921`", ",", "0.965`", ",", "0.985`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.893`", ",", "0.953`", ",", "0.979`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.906`", ",", "0.964`", ",", "0.979`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.757`", ",", "0.95`", ",", "0.988`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.725`", ",", "0.955`", ",", "0.988`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.915`", ",", "0.964`", ",", "0.981`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.892`", ",", "0.953`", ",", "0.976`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.891`", ",", "0.964`", ",", "0.983`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6068693178289413`*^9, 3.606906458735417*^9, 3.606906546124496*^9, 
   3.606906586448675*^9, 3.606908382180192*^9, 3.6069084699396772`*^9, 
   3.606908555046671*^9, 3.606927198848002*^9, 3.606928626556842*^9, 
   3.606931060786889*^9, 3.606931321255691*^9, {3.606931354127335*^9, 
   3.606931382159594*^9}, {3.606948633038988*^9, 3.606948726460082*^9}, 
   3.6069487739937897`*^9, 3.606948998751025*^9, 3.606983067748685*^9, 
   3.606983787165044*^9, 3.606984520564066*^9, 3.6069869418720007`*^9, 
   3.607207814722499*^9, 3.6072079426157093`*^9, 3.6072082030612926`*^9, 
   3.618504656506445*^9}]
}, Open  ]],

Cell["\<\
Some of these percentages are about where they should be and some clearly \
diverge by a significant amount. Let\[CloseCurlyQuote]s see if we can detect \
a pattern between which mix of distributions result in a roughly normal \
distribution and which mix of distributions don\[CloseCurlyQuote]t. \
\>", "Text",
 CellChangeTimes->{{3.6069835696485167`*^9, 3.606983585990514*^9}, {
  3.606983622326296*^9, 3.6069837135659113`*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s calculate the distance between each of the above \
percentages and what they should be for a normal distribution. We\
\[CloseCurlyQuote]ll designate {0.682, 0.954, 0.998} to be the percentages \
for the normal distribution. Now calculate the Euclidean distance between the \
experimental value and the designated value for each distribution mix.\
\>", "Text",
 CellChangeTimes->{{3.606985474246615*^9, 3.606985499700594*^9}, {
  3.606985932397917*^9, 3.606985984794134*^9}, {3.606986018941283*^9, 
  3.6069860865056267`*^9}, {3.606986774449538*^9, 3.606986780926317*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pnorm", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0.682", ",", " ", "0.954", ",", " ", "0.998"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.606986801600515*^9, 3.606986830791484*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ed", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"EuclideanDistance", "[", 
     RowBox[{"pnorm", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
   "pr"}]}]], "Input",
 CellChangeTimes->{{3.606986840348606*^9, 3.6069868718469343`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.19890952717253133`", ",", "0.12404031602668546`", ",", 
   "0.23888281646028872`", ",", "0.07744029958619733`", ",", 
   "0.2188446937899112`", ",", "0.035902646142032514`", ",", 
   "0.18569329551709715`", ",", "0.060770058416953925`", ",", 
   "0.20096268310310744`", ",", "0.10381233067415448`", ",", 
   "0.03106444913401805`", ",", "0.22069209319774008`", ",", 
   "0.043127717305695694`", ",", "0.2358940440112891`", ",", 
   "0.2517836372761344`", ",", "0.20603155098188236`", ",", 
   "0.03549647869859773`", ",", "0.23894769302087854`", ",", 
   "0.19458160241913927`", ",", "0.21367966679120406`", ",", 
   "0.22992607507631663`", ",", "0.0402988833592198`", ",", 
   "0.05458937625582466`", ",", "0.16769317219254923`", ",", 
   "0.19868568141665363`", ",", "0.20785812469085732`", ",", 
   "0.025632011235952615`", ",", "0.03397057550292599`", ",", 
   "0.1146516463030515`", ",", "0.017492855684535808`", ",", 
   "0.08357032966310468`", ",", "0.18279496710795945`", ",", 
   "0.03386738844375212`", ",", "0.23306007809146545`", ",", 
   "0.22176789668479968`", ",", "0.2647734880987897`", ",", 
   "0.1813008549345534`", ",", "0.055353410012392135`", ",", 
   "0.017578395831246874`", ",", "0.021863211109075357`", ",", 
   "0.21087911228948206`", ",", "0.20742950609785482`", ",", 
   "0.23960592647094517`", ",", "0.21185608322632604`", ",", 
   "0.22502666508660701`", ",", "0.07576938695805843`", ",", 
   "0.04415880433163917`", ",", "0.23383327393679454`", ",", 
   "0.2111516043036377`", ",", "0.20977607108533608`"}], "}"}]], "Output",
 CellChangeTimes->{3.606986873194475*^9, 3.606986948704172*^9, 
  3.6072078161166286`*^9, 3.607207942686446*^9, 3.607208203148513*^9, 
  3.618504656557786*^9}]
}, Open  ]],

Cell["Here\[CloseCurlyQuote]s how the distances from the Normal distribution \
look:", "Text",
 CellChangeTimes->{{3.607208235539156*^9, 3.607208268481229*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bp", " ", "=", " ", 
  RowBox[{"BoxWhiskerChart", "[", "ed", "]"}]}]], "Input",
 CellChangeTimes->{{3.607208143094594*^9, 3.6072081589151278`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.19605693430634064`, 0.005128824063823114}, {
     2.1960569343063403`, 0.2771375197195024}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], {}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          GraphicsGroupBox[{Antialiasing -> False, 
            
            PolygonBox[{{0.8039430656936596, 0.2188446937899112}, {
             1.1960569343063403`, 0.2188446937899112}, {1.1960569343063403`, 
             0.05458937625582466}, {0.8039430656936596, 
             0.05458937625582466}}], {}, {{}, {}}, {}, {
             GrayLevel[0], 
             GrayLevel[1], 
             
             LineBox[{{1.1960569343063403`, 0.1901374489681182}, {
              0.8039430656936597, 0.1901374489681182}}]}, {}, {
             GrayLevel[0], 
             GrayLevel[0.5], 
             
             LineBox[{{{1., 0.05458937625582466}, {1., 
              0.017492855684535808`}}, {{1., 0.2188446937899112}, {1., 
              0.2647734880987897}}}]}, {
             GrayLevel[0], 
             GrayLevel[0.5], 
             
             LineBox[{{{1.0980284671531702`, 0.017492855684535808`}, {
              0.9019715328468298, 0.017492855684535808`}}, {{
              1.0980284671531702`, 0.2647734880987897}, {0.9019715328468298, 
              0.2647734880987897}}}]}, {}}]},
         ImageSizeCache->{{163.5857864376269, 
          216.4142135623731}, {-89.4142135623731, 84.4142135623731}}],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], 
             "0.2647734880987897`"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], 
             "0.2188446937899112`"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             "0.1901374489681182`"}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], 
             "0.05458937625582466`"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             "0.017492855684535808`"}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 0.2647734880987897}, {
            Style["75%", Bold], 0.2188446937899112}, {
            Style["median", Bold], 0.1901374489681182}, {
            Style["25%", Bold], 0.05458937625582466}, {
            Style["min", Bold], 0.017492855684535808`}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], 
        "Tooltip"]& ]}}, {}, {}}, {{{{{{}, {}}, {}}, {}}, {}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.7843373722630256, 0.005128824063823114},
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.008, 0}}, {0.8039430656936596, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0, 0}}, {1.1960569343063403`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.008, 0}}, {0.8039430656936596, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0, 0}}, {1.1960569343063403`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0, 0}}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{1., 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[0]], TraditionalForm], {0.008, 0}}, {0.8039430656936596, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[0]], TraditionalForm], {0, 0}}, {1.1960569343063403`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[0]], TraditionalForm], {0, 0}}}, Automatic}]], "Output",
 CellChangeTimes->{3.6072081602181997`*^9, 3.607208203208996*^9, 
  3.618504656632056*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pres", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"mdists", ",", " ", "pr", ",", " ", "ed"}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.607208302091111*^9, 3.60720834078493*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plist", " ", "=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mdists", ",", " ", "pr", ",", " ", "ed"}], "}"}], "]"}], ",", 
     " ", 
     RowBox[{"Dividers", "\[Rule]", "All"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6069837233721647`*^9, 3.6069837379451923`*^9}, {
   3.606983793208852*^9, 3.606983817431299*^9}, {3.6069838575848083`*^9, 
   3.606983874444871*^9}, {3.6069868898977337`*^9, 3.606986891223919*^9}, 
   3.607208135705657*^9}],

Cell["\<\
Conclusion: It depends; further investigation is needed. The Excel sheet has \
a more readable view of the results (cf. NormalOrNot.xlsx tab \
\[OpenCurlyDoubleQuote]Mixes\[CloseCurlyDoubleQuote]).\
\>", "Text",
 CellChangeTimes->{{3.606988221063676*^9, 3.606988255254107*^9}, {
  3.6069883296802464`*^9, 3.606988392621571*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Investigate the Mixed Distributions", "Section",
 CellChangeTimes->{{3.607208344732546*^9, 3.6072083532452393`*^9}, {
  3.6072084642965183`*^9, 3.607208489181121*^9}}],

Cell["\<\
Look at the distribution mixes that result close-to-normal distributions -- \
i.e. those with Euclidean distance from Normal close to 0.\
\>", "Text",
 CellChangeTimes->{{3.6072086701746893`*^9, 3.607208724692511*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vLow", " ", "=", "  ", 
   RowBox[{"Sort", "[", 
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{"pres", ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], " ", "/;", " ", 
        RowBox[{"z", " ", "\[LessEqual]", "  ", "0.05"}]}]}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", "<", " ", 
       RowBox[{"#2", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], " ", "&"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.607209695409618*^9, 3.6072097153441153`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vLowt", " ", "=", " ", 
  RowBox[{
   RowBox[{"Sort", "[", 
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{"pres", ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], " ", "/;", " ", 
        RowBox[{"z", " ", "\[LessEqual]", "  ", "0.05"}]}]}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", "<", " ", 
       RowBox[{"#2", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], " ", "&"}]}], "]"}], " ", "//", " ",
    "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.607208728688561*^9, 3.607208789920109*^9}, {
   3.607208834705987*^9, 3.607208916329144*^9}, {3.607209018252556*^9, 
   3.607209031443303*^9}, {3.607209308106529*^9, 3.6072093346722307`*^9}, {
   3.607209369263734*^9, 3.607209388651226*^9}, 3.6072096859854183`*^9}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.1927575450181096`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.1927575450181096`", "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9562470176888924`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"575", ",", "11.5`"}], "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "1.8090329973986603`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.8418419903459486`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"308", ",", "6.16`"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"459", ",", "9.18`"}], "]"}]},
       {
        RowBox[{"ExponentialDistribution", "[", "1.932904485486283`", "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.699`"},
       {"0.95`"},
       {"0.997`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.017492855684535808`"},
    {GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"98", ",", "678"}], "}"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.1927575450181096`", "]"}]},
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"17", ",", "0.34`"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"469", ",", "9.38`"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"50", ",", "680"}], "}"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}]},
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"17", ",", "0.34`"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.7069986772614458`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"308", ",", "6.16`"}], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.696`"},
       {"0.961`"},
       {"0.99`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.017578395831246874`"},
    {GridBox[{
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"79", ",", "769"}], "}"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"73", ",", "418"}], "}"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"64", ",", "612"}], "}"}], "]"}]},
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"16", ",", "0.32`"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.8418419903459486`", "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.8158314964572413`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.7069986772614458`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"82", ",", "609"}], "}"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"394", ",", "7.88`"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"575", ",", "11.5`"}], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.703`"},
       {"0.953`"},
       {"0.992`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.021863211109075357`"},
    {GridBox[{
       {
        RowBox[{
        "ExponentialDistribution", "[", "1.7805109511341088`", "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.7793642620284345`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.7069986772614458`", "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.7793642620284345`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"56", ",", "616"}], "}"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"561", ",", "11.22`"}], "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "1.6590697265568535`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"64", ",", "612"}], "}"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.1927575450181096`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"561", ",", "11.22`"}], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.66`"},
       {"0.967`"},
       {"1.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.025632011235952615`"},
    {GridBox[{
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"16", ",", "0.32`"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"98", ",", "678"}], "}"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"79", ",", "769"}], "}"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"94", ",", "483"}], "}"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.4143673209756049`", "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9562470176888924`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.7069986772614458`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"79", ",", "769"}], "}"}], "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.8158314964572413`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"469", ",", "9.38`"}], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.712`"},
       {"0.953`"},
       {"0.99`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.03106444913401805`"},
    {GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.8418419903459486`", "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9884540507778214`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"177", ",", "3.54`"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"73", ",", "418"}], "}"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"50", ",", "680"}], "}"}], "]"}]},
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"16", ",", "0.32`"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"98", ",", "678"}], "}"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"240", ",", "4.8`"}], "]"}]},
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"16", ",", "0.32`"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"459", ",", "9.18`"}], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.715`"},
       {"0.951`"},
       {"0.991`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.03386738844375212`"},
    {GridBox[{
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"92", ",", "952"}], "}"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}]},
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"16", ",", "0.32`"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"64", ",", "612"}], "}"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"73", ",", "418"}], "}"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"270", ",", "5.4`"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.48000139132754227`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"52", ",", "853"}], "}"}], "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9884540507778214`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"308", ",", "6.16`"}], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.714`"},
       {"0.961`"},
       {"0.989`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.03397057550292599`"},
    {GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.1927575450181096`", "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "1.8090329973986603`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.7069986772614458`", "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9884540507778214`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"79", ",", "769"}], "}"}], "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "1.6590697265568535`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.4143673209756049`", "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.5696425510053986`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"52", ",", "853"}], "}"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"270", ",", "5.4`"}], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.648`"},
       {"0.964`"},
       {"1.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.03549647869859773`"},
    {GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.8101472905347786`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"459", ",", "9.18`"}], "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.8158314964572413`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"82", ",", "609"}], "}"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"52", ",", "853"}], "}"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"575", ",", "11.5`"}], "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9884540507778214`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.48000139132754227`", "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9884540507778214`", "]"}]},
       {
        RowBox[{"ExponentialDistribution", "[", "1.932904485486283`", "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.649`"},
       {"0.968`"},
       {"1.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.035902646142032514`"},
    {GridBox[{
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"469", ",", "9.38`"}], "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "1.9807239480392234`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.8418419903459486`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"394", ",", "7.88`"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"52", ",", "853"}], "}"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"459", ",", "9.18`"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"50", ",", "680"}], "}"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"73", ",", "418"}], "}"}], "]"}]},
       {
        RowBox[{"ExponentialDistribution", "[", "1.932904485486283`", "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.646`"},
       {"0.972`"},
       {"1.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.0402988833592198`"},
    {GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"177", ",", "3.54`"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"308", ",", "6.16`"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.1927575450181096`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"79", ",", "769"}], "}"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.37619414963537`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.8101472905347786`", "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "1.7805109511341088`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"94", ",", "483"}], "}"}], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.642`"},
       {"0.97`"},
       {"1.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.043127717305695694`"},
    {GridBox[{
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9884540507778214`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"94", ",", "483"}], "}"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"98", ",", "678"}], "}"}], "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.5696425510053986`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.4143673209756049`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"177", ",", "3.54`"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"575", ",", "11.5`"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"64", ",", "612"}], "}"}], "]"}]},
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"16", ",", "0.32`"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"497", ",", "9.94`"}], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.725`"},
       {"0.955`"},
       {"0.988`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.04415880433163917`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{{
      BernoulliDistribution[0.1927575450181096], 
      BernoulliDistribution[0.1927575450181096], 
      ExponentialDistribution[0.9562470176888924], 
      NormalDistribution[575, 11.5], 
      ExponentialDistribution[1.8090329973986603`], 
      BernoulliDistribution[0.4657386049486798], 
      BernoulliDistribution[0.8418419903459486], 
      NormalDistribution[308, 6.16], 
      NormalDistribution[459, 9.18], 
      ExponentialDistribution[1.932904485486283]}, {0.699, 0.95, 0.997}, 
     0.017492855684535808`}, {{
      BernoulliDistribution[0.4657386049486798], 
      UniformDistribution[{98, 678}], 
      BernoulliDistribution[0.1927575450181096], 
      LogNormalDistribution[17, 0.34], 
      NormalDistribution[469, 9.38], 
      UniformDistribution[{50, 680}], 
      BernoulliDistribution[0.4657386049486798], 
      LogNormalDistribution[17, 0.34], 
      BernoulliDistribution[0.7069986772614458], 
      NormalDistribution[308, 6.16]}, {0.696, 0.961, 0.99}, 
     0.017578395831246874`}, {{
      UniformDistribution[{79, 769}], 
      UniformDistribution[{73, 418}], 
      UniformDistribution[{64, 612}], 
      LogNormalDistribution[16, 0.32], 
      BernoulliDistribution[0.8418419903459486], 
      ExponentialDistribution[0.8158314964572413], 
      BernoulliDistribution[0.7069986772614458], 
      UniformDistribution[{82, 609}], 
      NormalDistribution[394, 7.88], 
      NormalDistribution[575, 11.5]}, {0.703, 0.953, 0.992}, 
     0.021863211109075357`}, {{
      ExponentialDistribution[1.7805109511341088`], 
      ExponentialDistribution[0.7793642620284345], 
      BernoulliDistribution[0.7069986772614458], 
      ExponentialDistribution[0.7793642620284345], 
      UniformDistribution[{56, 616}], 
      NormalDistribution[561, 11.22], 
      ExponentialDistribution[1.6590697265568535`], 
      UniformDistribution[{64, 612}], 
      BernoulliDistribution[0.1927575450181096], 
      NormalDistribution[561, 11.22]}, {0.66, 0.967, 1.}, 
     0.025632011235952615`}, {{
      LogNormalDistribution[16, 0.32], 
      UniformDistribution[{98, 678}], 
      UniformDistribution[{79, 769}], 
      UniformDistribution[{94, 483}], 
      BernoulliDistribution[0.4143673209756049], 
      ExponentialDistribution[0.9562470176888924], 
      BernoulliDistribution[0.7069986772614458], 
      UniformDistribution[{79, 769}], 
      ExponentialDistribution[0.8158314964572413], 
      NormalDistribution[469, 9.38]}, {0.712, 0.953, 0.99}, 
     0.03106444913401805}, {{
      BernoulliDistribution[0.8418419903459486], 
      ExponentialDistribution[0.9884540507778214], 
      NormalDistribution[177, 3.54], 
      UniformDistribution[{73, 418}], 
      UniformDistribution[{50, 680}], 
      LogNormalDistribution[16, 0.32], 
      UniformDistribution[{98, 678}], 
      NormalDistribution[240, 4.8], 
      LogNormalDistribution[16, 0.32], 
      NormalDistribution[459, 9.18]}, {0.715, 0.951, 0.991}, 
     0.03386738844375212}, {{
      UniformDistribution[{92, 952}], 
      BernoulliDistribution[0.4657386049486798], 
      LogNormalDistribution[16, 0.32], 
      UniformDistribution[{64, 612}], 
      UniformDistribution[{73, 418}], 
      NormalDistribution[270, 5.4], 
      BernoulliDistribution[0.48000139132754227`], 
      UniformDistribution[{52, 853}], 
      ExponentialDistribution[0.9884540507778214], 
      NormalDistribution[308, 6.16]}, {0.714, 0.961, 0.989}, 
     0.03397057550292599}, {{
      BernoulliDistribution[0.1927575450181096], 
      ExponentialDistribution[1.8090329973986603`], 
      BernoulliDistribution[0.7069986772614458], 
      ExponentialDistribution[0.9884540507778214], 
      UniformDistribution[{79, 769}], 
      ExponentialDistribution[1.6590697265568535`], 
      BernoulliDistribution[0.4143673209756049], 
      ExponentialDistribution[0.5696425510053986], 
      UniformDistribution[{52, 853}], 
      NormalDistribution[270, 5.4]}, {0.648, 0.964, 1.}, 
     0.03549647869859773}, {{
      BernoulliDistribution[0.8101472905347786], 
      NormalDistribution[459, 9.18], 
      ExponentialDistribution[0.8158314964572413], 
      UniformDistribution[{82, 609}], 
      UniformDistribution[{52, 853}], 
      NormalDistribution[575, 11.5], 
      ExponentialDistribution[0.9884540507778214], 
      BernoulliDistribution[0.48000139132754227`], 
      ExponentialDistribution[0.9884540507778214], 
      ExponentialDistribution[1.932904485486283]}, {0.649, 0.968, 1.}, 
     0.035902646142032514`}, {{
      NormalDistribution[469, 9.38], 
      ExponentialDistribution[1.9807239480392234`], 
      BernoulliDistribution[0.4657386049486798], 
      BernoulliDistribution[0.8418419903459486], 
      NormalDistribution[394, 7.88], 
      UniformDistribution[{52, 853}], 
      NormalDistribution[459, 9.18], 
      UniformDistribution[{50, 680}], 
      UniformDistribution[{73, 418}], 
      ExponentialDistribution[1.932904485486283]}, {0.646, 0.972, 1.}, 
     0.0402988833592198}, {{
      BernoulliDistribution[0.4657386049486798], 
      NormalDistribution[177, 3.54], 
      NormalDistribution[308, 6.16], 
      BernoulliDistribution[0.1927575450181096], 
      UniformDistribution[{79, 769}], 
      BernoulliDistribution[0.37619414963537], 
      BernoulliDistribution[0.4657386049486798], 
      BernoulliDistribution[0.8101472905347786], 
      ExponentialDistribution[1.7805109511341088`], 
      UniformDistribution[{94, 483}]}, {0.642, 0.97, 1.}, 
     0.043127717305695694`}, {{
      ExponentialDistribution[0.9884540507778214], 
      UniformDistribution[{94, 483}], 
      UniformDistribution[{98, 678}], 
      ExponentialDistribution[0.5696425510053986], 
      BernoulliDistribution[0.4143673209756049], 
      NormalDistribution[177, 3.54], 
      NormalDistribution[575, 11.5], 
      UniformDistribution[{64, 612}], 
      LogNormalDistribution[16, 0.32], 
      NormalDistribution[497, 9.94]}, {0.725, 0.955, 0.988}, 
     0.04415880433163917}}]]], "Output",
 CellChangeTimes->{
  3.607208791806278*^9, 3.607208841338595*^9, {3.607208889585326*^9, 
   3.607208917759811*^9}, 3.6072090327186317`*^9, 3.607209336445776*^9, {
   3.607209372692487*^9, 3.607209389554305*^9}, 3.607209688787036*^9, 
   3.618504656912085*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Tally", "[", 
     RowBox[{"#", ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "#1", "]"}], "===", " ", 
        RowBox[{"Head", "[", "#2", "]"}]}], "&"}]}], "]"}], " ", "&"}], " ", "/@",
    " ", 
   RowBox[{"vLow", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], " ", "//", " ", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.607210214510955*^9, 3.607210219287922*^9}, {
  3.6072104593432007`*^9, 3.607210468794367*^9}, {3.6072105055139027`*^9, 
  3.6072105427928753`*^9}, {3.607210631680943*^9, 3.607210634407256*^9}, {
  3.607210696615457*^9, 3.60721070792376*^9}, {3.6072107589184637`*^9, 
  3.607210762499445*^9}, {3.607210796626328*^9, 3.6072108077443867`*^9}, {
  3.6072126117560167`*^9, 3.6072126131644363`*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.1927575450181096`", "]"}]},
       {"4"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9562470176888924`", "]"}]},
       {"3"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"575", ",", "11.5`"}], "]"}]},
       {"3"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\<\"\"\>", "\<\"\"\>"},
    {GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}]},
       {"4"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"98", ",", "678"}], "}"}], "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"17", ",", "0.34`"}], "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"469", ",", "9.38`"}], "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\<\"\"\>"},
    {GridBox[{
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"79", ",", "769"}], "}"}], "]"}]},
       {"4"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"16", ",", "0.32`"}], "]"}]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.8418419903459486`", "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.8158314964572413`", "]"}]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"394", ",", "7.88`"}], "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {GridBox[{
       {
        RowBox[{
        "ExponentialDistribution", "[", "1.7805109511341088`", "]"}]},
       {"4"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.7069986772614458`", "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"56", ",", "616"}], "}"}], "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"561", ",", "11.22`"}], "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\<\"\"\>"},
    {GridBox[{
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"16", ",", "0.32`"}], "]"}]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"98", ",", "678"}], "}"}], "]"}]},
       {"4"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.4143673209756049`", "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9562470176888924`", "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"469", ",", "9.38`"}], "]"}]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.8418419903459486`", "]"}]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9884540507778214`", "]"}]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"177", ",", "3.54`"}], "]"}]},
       {"3"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"73", ",", "418"}], "}"}], "]"}]},
       {"3"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"16", ",", "0.32`"}], "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {GridBox[{
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"92", ",", "952"}], "}"}], "]"}]},
       {"4"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"16", ",", "0.32`"}], "]"}]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"270", ",", "5.4`"}], "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9884540507778214`", "]"}]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.1927575450181096`", "]"}]},
       {"3"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{
        "ExponentialDistribution", "[", "1.8090329973986603`", "]"}]},
       {"4"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"79", ",", "769"}], "}"}], "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"270", ",", "5.4`"}], "]"}]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\<\"\"\>"},
    {GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.8101472905347786`", "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"459", ",", "9.18`"}], "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.8158314964572413`", "]"}]},
       {"4"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"82", ",", "609"}], "}"}], "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\<\"\"\>"},
    {GridBox[{
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"469", ",", "9.38`"}], "]"}]},
       {"3"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{
        "ExponentialDistribution", "[", "1.9807239480392234`", "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"52", ",", "853"}], "}"}], "]"}]},
       {"3"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\<\"\"\>"},
    {GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}]},
       {"5"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"177", ",", "3.54`"}], "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"79", ",", "769"}], "}"}], "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{
        "ExponentialDistribution", "[", "1.7805109511341088`", "]"}]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\<\"\"\>"},
    {GridBox[{
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9884540507778214`", "]"}]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"94", ",", "483"}], "}"}], "]"}]},
       {"3"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.4143673209756049`", "]"}]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"177", ",", "3.54`"}], "]"}]},
       {"3"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"16", ",", "0.32`"}], "]"}]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{{
      BernoulliDistribution[0.1927575450181096], 4}, {
      ExponentialDistribution[0.9562470176888924], 3}, {
      NormalDistribution[575, 11.5], 3}}, {{
      BernoulliDistribution[0.4657386049486798], 4}, {
      UniformDistribution[{98, 678}], 2}, {
      LogNormalDistribution[17, 0.34], 2}, {
      NormalDistribution[469, 9.38], 2}}, {{
      UniformDistribution[{79, 769}], 4}, {
      LogNormalDistribution[16, 0.32], 1}, {
      BernoulliDistribution[0.8418419903459486], 2}, {
      ExponentialDistribution[0.8158314964572413], 1}, {
      NormalDistribution[394, 7.88], 2}}, {{
      ExponentialDistribution[1.7805109511341088`], 4}, {
      BernoulliDistribution[0.7069986772614458], 2}, {
      UniformDistribution[{56, 616}], 2}, {
      NormalDistribution[561, 11.22], 2}}, {{
      LogNormalDistribution[16, 0.32], 1}, {
      UniformDistribution[{98, 678}], 4}, {
      BernoulliDistribution[0.4143673209756049], 2}, {
      ExponentialDistribution[0.9562470176888924], 2}, {
      NormalDistribution[469, 9.38], 1}}, {{
      BernoulliDistribution[0.8418419903459486], 1}, {
      ExponentialDistribution[0.9884540507778214], 1}, {
      NormalDistribution[177, 3.54], 3}, {
      UniformDistribution[{73, 418}], 3}, {
      LogNormalDistribution[16, 0.32], 2}}, {{
      UniformDistribution[{92, 952}], 4}, {
      BernoulliDistribution[0.4657386049486798], 2}, {
      LogNormalDistribution[16, 0.32], 1}, {
      NormalDistribution[270, 5.4], 2}, {
      ExponentialDistribution[0.9884540507778214], 1}}, {{
      BernoulliDistribution[0.1927575450181096], 3}, {
      ExponentialDistribution[1.8090329973986603`], 4}, {
      UniformDistribution[{79, 769}], 2}, {
      NormalDistribution[270, 5.4], 1}}, {{
      BernoulliDistribution[0.8101472905347786], 2}, {
      NormalDistribution[459, 9.18], 2}, {
      ExponentialDistribution[0.8158314964572413], 4}, {
      UniformDistribution[{82, 609}], 2}}, {{
      NormalDistribution[469, 9.38], 3}, {
      ExponentialDistribution[1.9807239480392234`], 2}, {
      BernoulliDistribution[0.4657386049486798], 2}, {
      UniformDistribution[{52, 853}], 3}}, {{
      BernoulliDistribution[0.4657386049486798], 5}, {
      NormalDistribution[177, 3.54], 2}, {
      UniformDistribution[{79, 769}], 2}, {
      ExponentialDistribution[1.7805109511341088`], 1}}, {{
      ExponentialDistribution[0.9884540507778214], 2}, {
      UniformDistribution[{94, 483}], 3}, {
      BernoulliDistribution[0.4143673209756049], 1}, {
      NormalDistribution[177, 3.54], 3}, {
      LogNormalDistribution[16, 0.32], 1}}}]]], "Output",
 CellChangeTimes->{
  3.607210220725885*^9, {3.607210516770113*^9, 3.607210544265595*^9}, 
   3.607210636164727*^9, 3.6072107095926847`*^9, 3.60721076406855*^9, 
   3.607212613987371*^9, 3.618504656956977*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Head", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
  RowBox[{
   RowBox[{"vLow", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.607210572492774*^9, 3.607210610507577*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "BernoulliDistribution", ",", "BernoulliDistribution", ",", 
   "ExponentialDistribution", ",", "NormalDistribution", ",", 
   "ExponentialDistribution", ",", "BernoulliDistribution", ",", 
   "BernoulliDistribution", ",", "NormalDistribution", ",", 
   "NormalDistribution", ",", "ExponentialDistribution"}], "}"}]], "Output",
 CellChangeTimes->{{3.6072105880224667`*^9, 3.607210611536721*^9}, 
   3.6185046570097113`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", " ", "/.", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a_", "[", "x1_", "]"}], ",", " ", 
       RowBox[{"b_", "[", "x2_", "]"}], ",", " ", 
       RowBox[{"c_", "[", "x3_", "]"}], ",", " ", 
       RowBox[{"d_", "[", "x4_", "]"}], ",", " ", 
       RowBox[{"e_", "[", "x5_", "]"}], ",", " ", 
       RowBox[{"h_", "[", "x6_", "]"}], ",", " ", 
       RowBox[{"j_", "[", "x7_", "]"}], ",", " ", 
       RowBox[{"k_", "[", "x8_", "]"}], ",", " ", 
       RowBox[{"r_", "[", "x9_", "]"}], ",", " ", 
       RowBox[{"s_", "[", "x10_", "]"}]}], "}"}], " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "h", ",", "j", ",", 
       "k", ",", "r", ",", "s"}], "}"}]}]}], " ", "&"}], " ", "/@", " ", 
  RowBox[{
   RowBox[{"vLow", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.607209764108367*^9, 3.607209781706559*^9}, {
  3.607209852761363*^9, 3.607209854256672*^9}, {3.607209891657215*^9, 
  3.607210075539538*^9}, {3.607210184086034*^9, 3.607210195689598*^9}, {
  3.6072102539427433`*^9, 3.607210267483498*^9}, {3.607210477446583*^9, 
  3.607210481031046*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"BernoulliDistribution", "[", "0.1927575450181096`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.1927575450181096`", "]"}], ",", 
   RowBox[{"ExponentialDistribution", "[", "0.9562470176888924`", "]"}], ",", 
   
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"575", ",", "11.5`"}], "]"}], ",", 
   RowBox[{"ExponentialDistribution", "[", "1.8090329973986603`", "]"}], ",", 
   
   RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}], ",", 
   RowBox[{"BernoulliDistribution", "[", "0.8418419903459486`", "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"308", ",", "6.16`"}], "]"}], ",", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"459", ",", "9.18`"}], "]"}], ",", 
   RowBox[{"ExponentialDistribution", "[", "1.932904485486283`", "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.607209769838476*^9, 3.607210079243346*^9, 
  3.607210200477366*^9, 3.6072102724636307`*^9, 3.60721048343268*^9, 
  3.61850465703966*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"low", " ", "=", " ", 
  RowBox[{
   RowBox[{"Sort", "[", 
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{"pres", ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], " ", "/;", " ", 
        RowBox[{
         RowBox[{"z", " ", ">", "  ", "0.05"}], " ", "&&", " ", 
         RowBox[{"z", " ", "\[LessEqual]", " ", "0.1"}]}]}]}], "]"}], ",", 
     " ", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", "<", " ", 
       RowBox[{"#2", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], " ", "&"}]}], "]"}], " ", "//", " ",
    "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.607209035304628*^9, 3.607209065058948*^9}, {
  3.6072094920995417`*^9, 3.607209534509284*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"308", ",", "6.16`"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"177", ",", "3.54`"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"79", ",", "769"}], "}"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"56", ",", "616"}], "}"}], "]"}]},
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"17", ",", "0.34`"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.8418419903459486`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"52", ",", "853"}], "}"}], "]"}]},
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"16", ",", "0.32`"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"308", ",", "6.16`"}], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.736`"},
       {"0.954`"},
       {"0.99`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.05458937625582466`"},
    {GridBox[{
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"82", ",", "609"}], "}"}], "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.5696425510053986`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"394", ",", "7.88`"}], "]"}]},
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"17", ",", "0.34`"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.48000139132754227`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.1927575450181096`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"561", ",", "11.22`"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.8418419903459486`", "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"469", ",", "9.38`"}], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.736`"},
       {"0.956`"},
       {"0.986`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.055353410012392135`"},
    {GridBox[{
       {
        RowBox[{"BernoulliDistribution", "[", "0.8101472905347786`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"497", ",", "9.94`"}], "]"}]},
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"21", ",", "0.42`"}], "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.8158314964572413`", "]"}]},
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"16", ",", "0.32`"}], "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9562470176888924`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"497", ",", "9.94`"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"73", ",", "418"}], "}"}], "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "1.7805109511341088`", "]"}]},
       {
        RowBox[{"ExponentialDistribution", "[", "0.7793642620284345`", "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.741`"},
       {"0.958`"},
       {"0.984`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.060770058416953925`"},
    {GridBox[{
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"82", ",", "609"}], "}"}], "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9884540507778214`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"575", ",", "11.5`"}], "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9884540507778214`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"52", ",", "853"}], "}"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"459", ",", "9.18`"}], "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"92", ",", "952"}], "}"}], "]"}]},
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"21", ",", "0.42`"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.7069986772614458`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"92", ",", "952"}], "}"}], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.757`"},
       {"0.95`"},
       {"0.988`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.07576938695805843`"},
    {GridBox[{
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"73", ",", "418"}], "}"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.48000139132754227`", "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.5696425510053986`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"73", ",", "418"}], "}"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.4657386049486798`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"82", ",", "609"}], "}"}], "]"}]},
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"26", ",", "0.52`"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"459", ",", "9.18`"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.48000139132754227`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"561", ",", "11.22`"}], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.758`"},
       {"0.959`"},
       {"0.984`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.07744029958619733`"},
    {GridBox[{
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"270", ",", "5.4`"}], "]"}]},
       {
        RowBox[{"ExponentialDistribution", "[", "1.932904485486283`", "]"}]},
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"29", ",", "0.58`"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.4143673209756049`", "]"}]},
       {
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"64", ",", "612"}], "}"}], "]"}]},
       {
        RowBox[{
        "ExponentialDistribution", "[", "0.9562470176888924`", "]"}]},
       {
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"16", ",", "0.32`"}], "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"240", ",", "4.8`"}], "]"}]},
       {
        RowBox[{"BernoulliDistribution", "[", "0.37619414963537`", "]"}]},
       {
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"394", ",", "7.88`"}], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], GridBox[{
       {"0.764`"},
       {"0.962`"},
       {"0.984`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "0.08357032966310468`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{{
      NormalDistribution[308, 6.16], 
      NormalDistribution[177, 3.54], 
      UniformDistribution[{79, 769}], 
      UniformDistribution[{56, 616}], 
      LogNormalDistribution[17, 0.34], 
      BernoulliDistribution[0.8418419903459486], 
      BernoulliDistribution[0.4657386049486798], 
      UniformDistribution[{52, 853}], 
      LogNormalDistribution[16, 0.32], 
      NormalDistribution[308, 6.16]}, {0.736, 0.954, 0.99}, 
     0.05458937625582466}, {{
      UniformDistribution[{82, 609}], 
      ExponentialDistribution[0.5696425510053986], 
      NormalDistribution[394, 7.88], 
      LogNormalDistribution[17, 0.34], 
      BernoulliDistribution[0.48000139132754227`], 
      BernoulliDistribution[0.1927575450181096], 
      NormalDistribution[561, 11.22], 
      BernoulliDistribution[0.8418419903459486], 
      BernoulliDistribution[0.4657386049486798], 
      NormalDistribution[469, 9.38]}, {0.736, 0.956, 0.986}, 
     0.055353410012392135`}, {{
      BernoulliDistribution[0.8101472905347786], 
      NormalDistribution[497, 9.94], 
      LogNormalDistribution[21, 0.42], 
      ExponentialDistribution[0.8158314964572413], 
      LogNormalDistribution[16, 0.32], 
      ExponentialDistribution[0.9562470176888924], 
      NormalDistribution[497, 9.94], 
      UniformDistribution[{73, 418}], 
      ExponentialDistribution[1.7805109511341088`], 
      ExponentialDistribution[0.7793642620284345]}, {0.741, 0.958, 0.984}, 
     0.060770058416953925`}, {{
      UniformDistribution[{82, 609}], 
      ExponentialDistribution[0.9884540507778214], 
      NormalDistribution[575, 11.5], 
      ExponentialDistribution[0.9884540507778214], 
      UniformDistribution[{52, 853}], 
      NormalDistribution[459, 9.18], 
      UniformDistribution[{92, 952}], 
      LogNormalDistribution[21, 0.42], 
      BernoulliDistribution[0.7069986772614458], 
      UniformDistribution[{92, 952}]}, {0.757, 0.95, 0.988}, 
     0.07576938695805843}, {{
      UniformDistribution[{73, 418}], 
      BernoulliDistribution[0.48000139132754227`], 
      ExponentialDistribution[0.5696425510053986], 
      UniformDistribution[{73, 418}], 
      BernoulliDistribution[0.4657386049486798], 
      UniformDistribution[{82, 609}], 
      LogNormalDistribution[26, 0.52], 
      NormalDistribution[459, 9.18], 
      BernoulliDistribution[0.48000139132754227`], 
      NormalDistribution[561, 11.22]}, {0.758, 0.959, 0.984}, 
     0.07744029958619733}, {{
      NormalDistribution[270, 5.4], 
      ExponentialDistribution[1.932904485486283], 
      LogNormalDistribution[29, 0.58], 
      BernoulliDistribution[0.4143673209756049], 
      UniformDistribution[{64, 612}], 
      ExponentialDistribution[0.9562470176888924], 
      LogNormalDistribution[16, 0.32], 
      NormalDistribution[240, 4.8], 
      BernoulliDistribution[0.37619414963537], 
      NormalDistribution[394, 7.88]}, {0.764, 0.962, 0.984}, 
     0.08357032966310468}}]]], "Output",
 CellChangeTimes->{
  3.6072090711879883`*^9, {3.607209526614798*^9, 3.60720953555195*^9}, 
   3.618504657063672*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1203, 816},
WindowMargins->{{1, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 9, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 189, 2, 64, "Section"],
Cell[CellGroupData[{
Cell[771, 26, 94, 1, 50, "Section"],
Cell[868, 29, 2058, 56, 119, "Text"],
Cell[2929, 87, 327, 6, 30, "Text"],
Cell[3259, 95, 2242, 51, 165, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5538, 151, 474, 8, 99, "Section"],
Cell[6015, 161, 259, 5, 30, "Text"],
Cell[6277, 168, 604, 10, 49, "Text"],
Cell[6884, 180, 1405, 30, 80, "Input"],
Cell[8292, 212, 417, 7, 49, "Text"],
Cell[8712, 221, 149, 3, 28, "Input"],
Cell[CellGroupData[{
Cell[8886, 228, 785, 15, 28, "Input"],
Cell[9674, 245, 1571, 32, 63, "Output"]
}, Open  ]],
Cell[11260, 280, 237, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[11522, 287, 285, 7, 28, "Input"],
Cell[11810, 296, 764, 13, 28, "Output"]
}, Open  ]],
Cell[12589, 312, 297, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[12911, 322, 405, 10, 28, "Input"],
Cell[13319, 334, 498, 7, 28, "Output"]
}, Open  ]],
Cell[13832, 344, 180, 2, 30, "Text"],
Cell[14015, 348, 154, 3, 28, "Input"],
Cell[14172, 353, 463, 12, 28, "Input"],
Cell[14638, 367, 136, 1, 30, "Text"],
Cell[14777, 370, 665, 17, 28, "Input"],
Cell[15445, 389, 129, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[15599, 394, 170, 3, 28, "Input"],
Cell[15772, 399, 3216, 59, 241, "Output"]
}, Open  ]],
Cell[19003, 461, 295, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[19323, 471, 329, 8, 28, "Input"],
Cell[19655, 481, 469, 8, 28, "Output"]
}, Open  ]],
Cell[20139, 492, 551, 9, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20727, 506, 281, 5, 99, "Section"],
Cell[21011, 513, 392, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[21428, 524, 617, 17, 28, "Input"],
Cell[22048, 543, 276, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22361, 553, 129, 2, 28, "Input"],
Cell[22493, 557, 94, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22624, 563, 354, 9, 28, "Input"],
Cell[22981, 574, 199, 5, 28, "Output"]
}, Open  ]],
Cell[23195, 582, 1574, 41, 80, "Input"],
Cell[CellGroupData[{
Cell[24794, 627, 248, 6, 28, "Input"],
Cell[25045, 635, 1167, 35, 46, "Output"]
}, Open  ]],
Cell[26227, 673, 157, 3, 28, "Input"],
Cell[CellGroupData[{
Cell[26409, 680, 107, 1, 28, "Input"],
Cell[26519, 683, 1139, 34, 46, "Output"]
}, Open  ]],
Cell[27673, 720, 1067, 22, 28, "Input"],
Cell[28743, 744, 496, 12, 28, "Input"],
Cell[CellGroupData[{
Cell[29264, 760, 409, 7, 28, "Input"],
Cell[29676, 769, 223228, 3699, 382, 96931, 1627, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[252919, 4471, 121, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[253065, 4476, 353, 8, 28, "Input"],
Cell[253421, 4486, 371, 10, 28, "Output"]
}, Open  ]],
Cell[253807, 4499, 450, 11, 28, "Input"],
Cell[CellGroupData[{
Cell[254282, 4514, 197, 5, 28, "Input"],
Cell[254482, 4521, 305, 6, 28, "Output"]
}, Open  ]],
Cell[254802, 4530, 349, 9, 28, "Input"],
Cell[CellGroupData[{
Cell[255176, 4543, 246, 6, 28, "Input"],
Cell[255425, 4551, 4491, 104, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259953, 4660, 254, 6, 28, "Input"],
Cell[260210, 4668, 4493, 104, 28, "Output"]
}, Open  ]],
Cell[264718, 4775, 266, 5, 30, "Text"],
Cell[264987, 4782, 348, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[265360, 4792, 915, 21, 46, "Input"],
Cell[266278, 4815, 57353, 1427, 203, "Output"]
}, Open  ]],
Cell[323646, 6245, 155, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[323826, 6252, 720, 18, 46, "Input"],
Cell[324549, 6272, 3052, 55, 183, "Output"]
}, Open  ]],
Cell[327616, 6330, 178, 4, 30, "Text"],
Cell[327797, 6336, 320, 6, 28, "Input"],
Cell[328120, 6344, 319, 9, 28, "Input"],
Cell[CellGroupData[{
Cell[328464, 6357, 191, 3, 28, "Input"],
Cell[328658, 6362, 12128, 349, 238, "Output"]
}, Open  ]],
Cell[340801, 6714, 322, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[341148, 6724, 296, 8, 28, "Input"],
Cell[341447, 6734, 235, 5, 28, "Output"]
}, Open  ]],
Cell[341697, 6742, 439, 7, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342173, 6754, 321, 4, 64, "Section"],
Cell[342497, 6760, 187, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[342709, 6766, 832, 20, 28, "Input"],
Cell[343544, 6788, 624, 11, 28, "Output"]
}, Open  ]],
Cell[344183, 6802, 101, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[344309, 6807, 212, 4, 28, "Input"],
Cell[344524, 6813, 205, 3, 28, "Output"]
}, Open  ]],
Cell[344744, 6819, 189, 4, 30, "Text"],
Cell[344936, 6825, 128, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[345089, 6830, 856, 19, 28, "Input"],
Cell[345948, 6851, 1329, 35, 63, "Output"]
}, Open  ]],
Cell[347292, 6889, 362, 10, 28, "Input"],
Cell[347657, 6901, 557, 14, 28, "Input"],
Cell[348217, 6917, 129, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[348371, 6922, 223, 4, 28, "Input"],
Cell[348597, 6928, 14246, 407, 242, "Output"]
}, Open  ]],
Cell[362858, 7338, 266, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[363149, 7347, 306, 8, 28, "Input"],
Cell[363458, 7357, 454, 8, 28, "Output"]
}, Open  ]],
Cell[363927, 7368, 174, 4, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364138, 7377, 266, 3, 64, "Section"],
Cell[CellGroupData[{
Cell[364429, 7384, 222, 5, 28, "Input"],
Cell[364654, 7391, 211, 3, 28, "Output"]
}, Open  ]],
Cell[364880, 7397, 155, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[365060, 7404, 445, 10, 28, "Input"],
Cell[365508, 7416, 1041, 24, 63, "Output"]
}, Open  ]],
Cell[366564, 7443, 253, 5, 30, "Text"],
Cell[366820, 7450, 493, 13, 28, "Input"],
Cell[367316, 7465, 603, 14, 28, "Input"],
Cell[367922, 7481, 129, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[368076, 7486, 273, 5, 28, "Input"],
Cell[368352, 7493, 3452, 64, 241, "Output"]
}, Open  ]],
Cell[371819, 7560, 266, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[372110, 7569, 430, 10, 28, "Input"],
Cell[372543, 7581, 595, 11, 28, "Output"]
}, Open  ]],
Cell[373153, 7595, 174, 4, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373364, 7604, 171, 2, 64, "Section"],
Cell[373538, 7608, 348, 6, 49, "Text"],
Cell[373889, 7616, 1462, 31, 80, "Input"],
Cell[CellGroupData[{
Cell[375376, 7651, 888, 16, 28, "Input"],
Cell[376267, 7669, 1150, 26, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377454, 7700, 338, 8, 28, "Input"],
Cell[377795, 7710, 828, 15, 35, "Output"]
}, Open  ]],
Cell[378638, 7728, 128, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[378791, 7733, 220, 4, 28, "Input"],
Cell[379014, 7739, 428, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379479, 7750, 133, 2, 28, "Input"],
Cell[379615, 7754, 2204, 59, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[381856, 7818, 201, 5, 28, "Input"],
Cell[382060, 7825, 525, 10, 35, "Output"]
}, Open  ]],
Cell[382600, 7838, 180, 2, 30, "Text"],
Cell[382783, 7842, 615, 14, 28, "Input"],
Cell[383401, 7858, 136, 1, 30, "Text"],
Cell[383540, 7861, 674, 16, 28, "Input"],
Cell[384217, 7879, 206, 4, 30, "Text"],
Cell[384426, 7885, 266, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[384717, 7894, 554, 11, 28, "Input"],
Cell[385274, 7907, 594, 10, 28, "Output"]
}, Open  ]],
Cell[385883, 7920, 171, 2, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[386091, 7927, 171, 2, 64, "Section"],
Cell[386265, 7931, 126, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[386416, 7936, 672, 12, 28, "Input"],
Cell[387091, 7950, 936, 15, 63, "Output"]
}, Open  ]],
Cell[388042, 7968, 413, 11, 28, "Input"],
Cell[388458, 7981, 603, 14, 28, "Input"],
Cell[389064, 7997, 129, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[389218, 8002, 274, 5, 28, "Input"],
Cell[389495, 8009, 7434, 208, 238, "Output"]
}, Open  ]],
Cell[396944, 8220, 266, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[397235, 8229, 352, 8, 28, "Input"],
Cell[397590, 8239, 211, 4, 28, "Output"]
}, Open  ]],
Cell[397816, 8246, 174, 4, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398027, 8255, 176, 2, 64, "Section"],
Cell[398206, 8259, 292, 5, 49, "Text"],
Cell[398501, 8266, 252, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[398778, 8275, 474, 11, 28, "Input"],
Cell[399255, 8288, 4692, 105, 233, "Output"]
}, Open  ]],
Cell[403962, 8396, 423, 7, 49, "Text"],
Cell[404388, 8405, 570, 12, 28, "Input"],
Cell[CellGroupData[{
Cell[404983, 8421, 298, 7, 28, "Input"],
Cell[405284, 8430, 506, 9, 35, "Output"]
}, Open  ]],
Cell[405805, 8442, 260, 4, 30, "Text"],
Cell[406068, 8448, 912, 21, 28, "Input"],
Cell[406983, 8471, 136, 1, 30, "Text"],
Cell[407122, 8474, 978, 24, 28, "Input"],
Cell[408103, 8500, 206, 4, 30, "Text"],
Cell[408312, 8506, 266, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[408603, 8515, 945, 21, 28, "Input"],
Cell[409551, 8538, 4840, 113, 165, "Output"]
}, Open  ]],
Cell[414406, 8654, 440, 7, 49, "Text"],
Cell[414849, 8663, 604, 9, 49, "Text"],
Cell[415456, 8674, 231, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[415712, 8684, 272, 7, 28, "Input"],
Cell[415987, 8693, 1762, 30, 80, "Output"]
}, Open  ]],
Cell[417764, 8726, 160, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[417949, 8732, 171, 3, 28, "Input"],
Cell[418123, 8737, 6888, 171, 232, "Output"]
}, Open  ]],
Cell[425026, 8911, 263, 7, 28, "Input"],
Cell[425292, 8920, 557, 13, 28, "Input"],
Cell[425852, 8935, 338, 6, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426227, 8946, 173, 2, 64, "Section"],
Cell[426403, 8950, 228, 4, 30, "Text"],
Cell[426634, 8956, 638, 18, 28, "Input"],
Cell[CellGroupData[{
Cell[427297, 8978, 883, 21, 28, "Input"],
Cell[428183, 9001, 30622, 820, 1633, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458842, 9826, 832, 20, 28, "Input"],
Cell[459677, 9848, 32145, 860, 385, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[491859, 10713, 290, 8, 28, "Input"],
Cell[492152, 10723, 465, 9, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[492654, 10737, 1293, 30, 46, "Input"],
Cell[493950, 10769, 1027, 21, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[495014, 10795, 799, 22, 28, "Input"],
Cell[495816, 10819, 15476, 416, 823, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
