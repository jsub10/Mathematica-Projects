(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    450378,       9485]
NotebookOptionsPosition[    440882,       9179]
NotebookOutlinePosition[    441292,       9197]
CellTagsIndexPosition[    441249,       9194]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "Investigating a Claim in ",
 StyleBox["No Extension of Quantum Theory",
  FontSlant->"Italic"],
 " by Colbeck and Renner (",
 StyleBox["Nature Communications",
  FontSlant->"Italic"],
 ", 2 Aug 2011)"
}], "Section",
 CellChangeTimes->{{3.604581258299225*^9, 3.604581296716342*^9}, {
  3.6048483648488417`*^9, 3.604848384020843*^9}, {3.6048530458386297`*^9, 
  3.604853048187284*^9}, {3.604854316392457*^9, 3.60485431885471*^9}, {
  3.604996812888837*^9, 3.604996815357918*^9}, {3.617036587839715*^9, 
  3.61703660059265*^9}}],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.604848402568276*^9, 3.604848406318968*^9}}],

Cell[TextData[{
 "In their paper titled \[OpenCurlyDoubleQuote]No Extension of Quantum Theory\
\[CloseCurlyDoubleQuote] (Nature Communications, 2 Aug 2011), Colbeck and \
Renner make the following claim: \n\n",
 StyleBox["\[OpenCurlyDoubleQuote]If X is a random variable with an arbitrary \
distribution, there exists a random variable X\[CloseCurlyQuote] such that \
the joint distribution of [X,X\[CloseCurlyQuote]] is uniform.\
\[CloseCurlyDoubleQuote]",
  FontColor->GrayLevel[0],
  Background->RGBColor[0.88, 1, 0.88]],
 "\n\nInspired by Shalosh B. Ekhad (www.math.rutgers.edu/~zeilberg/pj.html), \
our goal is to investigate this claim using simulation. Can we find a simple \
example where given a discrete non-uniform distribution of X, we can specify \
a discrete distribution for X\[CloseCurlyQuote] that will make the joint \
distribution of XX\[CloseCurlyQuote] uniform?"
}], "Text",
 CellChangeTimes->{{3.604583205069612*^9, 3.6045832070825853`*^9}, {
  3.604583357614463*^9, 3.604583456740808*^9}, {3.604848415450728*^9, 
  3.6048485816960297`*^9}, {3.604848722747617*^9, 3.604848752783543*^9}, {
  3.604848850275193*^9, 3.604848974502015*^9}, {3.6170366743967533`*^9, 
  3.6170366820039577`*^9}}],

Cell["\<\
We\[CloseCurlyQuote]ll take the case of an X that has 4 possible outcomes and \
a X\[CloseCurlyQuote] that also has 4 possible outcomes and check the claim \
against about 7,500 candidate distributions for X\[CloseCurlyQuote].

It\[CloseCurlyQuote]s worth stating up front that the approach taken here \
might lead to conclusions that are wrong. This might happen if: (1) We \
misinterpreted what Colbeck and Renner mean by the joint probability \
distribution of XX\[CloseCurlyQuote], or (2) The set of candidates we are \
about to generate for the X\[CloseCurlyQuote] distributions is not \
representative. There could be something amiss in the procedure for \
converting a randomly generated 4-tuple of Reals between 0 and 1 into a \
4-tuple that meets the condition of a probability distribution -- i.e. that \
the sum of the elements of the 4-tuple add exactly to 1.
How do we use simulation to investigate the truth of a claim? Here\
\[CloseCurlyQuote]s the approach.\
\>", "Text",
 CellChangeTimes->{{3.604848959291575*^9, 3.604848960963492*^9}, {
  3.604996739177918*^9, 3.604996807077318*^9}, {3.617036352069738*^9, 
  3.6170364712083893`*^9}, {3.6170365033745737`*^9, 3.617036555213647*^9}, {
  3.617877635202057*^9, 3.6178777181490726`*^9}, {3.617879161975473*^9, 
  3.617879181116935*^9}, {3.664837095662085*^9, 3.664837130028659*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation Approach", "Section",
 CellChangeTimes->{{3.6048533251431093`*^9, 3.604853333234029*^9}, {
  3.664837139327179*^9, 3.664837140627643*^9}}],

Cell[CellGroupData[{

Cell["Step 1: Construct the random variables.", "Subsection",
 CellChangeTimes->{{3.604583489381057*^9, 3.60458350698731*^9}, {
  3.604584098469624*^9, 3.60458410420153*^9}}],

Cell["\<\
We have two discrete random variables, X and X\[CloseCurlyQuote]. X can take \
on values xVals = {a, b, c, d}, and X\[CloseCurlyQuote] can take on values \
xprimeVals = {R, S, T, U}. \
\>", "Text",
 CellChangeTimes->{{3.6045830133113747`*^9, 3.604583061154381*^9}, {
  3.6045835182190657`*^9, 3.604583602581037*^9}, {3.604583869921247*^9, 
  3.604583932818131*^9}, {3.604583969916368*^9, 3.604583973744961*^9}, {
  3.617877745354164*^9, 3.61787777730984*^9}, {3.664837070843762*^9, 
  3.664837072425542*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "R", ",", "S", ",", "T"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.604583079239326*^9, 3.604583112418865*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xVals", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xprimeVals", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"R", ",", "S", ",", "T", ",", " ", "U"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.604581311003117*^9, 3.604581333441639*^9}, {
  3.60458299456059*^9, 3.604583006390087*^9}, {3.6045830961096*^9, 
  3.604583105282604*^9}, {3.604583937508491*^9, 3.604583947436108*^9}, {
  3.604613168251423*^9, 3.604613174596047*^9}, {3.604613213180142*^9, 
  3.604613218500392*^9}, {3.604995473123907*^9, 3.6049954735207567`*^9}, {
  3.6648975327582483`*^9, 3.664897533184731*^9}}],

Cell["\<\
Joint probabilities of [X,X\[CloseCurlyQuote]] can then be defined on the \
following combinations of X and X\[CloseCurlyQuote]. Here are all possible \
outcomes of X,X\[CloseCurlyQuote].\
\>", "Text",
 CellChangeTimes->{{3.6045813434973383`*^9, 3.604581368158751*^9}, {
  3.604583999589335*^9, 3.604584039617125*^9}, {3.604595330563401*^9, 
  3.604595342567458*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jointOutcomeSpace", " ", "=", " ", 
  RowBox[{"Tuples", "[", 
   RowBox[{"{", 
    RowBox[{"xVals", ",", "xprimeVals"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.604582360996993*^9, 3.604582384413787*^9}, {
  3.604582803062131*^9, 3.604582803516019*^9}, {3.604582972042118*^9, 
  3.6045829740691137`*^9}, {3.604583130347726*^9, 3.604583136059464*^9}, {
  3.604584045803052*^9, 3.6045840550751657`*^9}, {3.604832069600431*^9, 
  3.604832088281776*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "R"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "S"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "T"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "U"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "R"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "S"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "T"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "U"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "R"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "S"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "T"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "U"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6045823853412313`*^9, 3.6045828087844048`*^9, 3.604582975831613*^9, {
   3.6045831254145947`*^9, 3.60458313693993*^9}, 3.6045840568448677`*^9, 
   3.604613179786778*^9, 3.604613223455517*^9, 3.604615737137986*^9, 
   3.6046606631733418`*^9, 3.604773508678733*^9, 3.60483121620644*^9, 
   3.60483209054624*^9, 3.604836607138447*^9, 3.604837113711011*^9, 
   3.604838652846652*^9, 3.604840807700232*^9, 3.60484202477848*^9, 
   3.604853104737092*^9, 3.604855760108095*^9, 3.604856686411806*^9, 
   3.604995497173414*^9, 3.604998289733316*^9, 3.617036105006097*^9, 
   3.61787781529419*^9, 3.664897523877503*^9, 3.664897554179484*^9, 
   3.664905783645466*^9, 3.66490766921939*^9}]
}, Open  ]],

Cell["\<\
When there are 3 values for X and 4 values for X\[CloseCurlyQuote], the \
number of joint outcomes is 3 times 4 = 12. In general, the total number of \
distinct joint outcomes will be the number of possible outcomes for X \
multiplied by the number of possible outcomes for X\[CloseCurlyQuote]. We \
know that at the end of the day, the probability of each of the outcomes \
above will be 1/12th -- i.e. [X,X\[CloseCurlyQuote]] is uniformly distributed.\
\>", "Text",
 CellChangeTimes->{{3.604590206594778*^9, 3.60459022656842*^9}, {
  3.604595351771061*^9, 3.6045954177568483`*^9}, {3.604831241722906*^9, 
  3.604831255635097*^9}, {3.604995518716229*^9, 3.60499553870822*^9}, {
  3.6648373015078077`*^9, 3.664837341211809*^9}, {3.664838398654748*^9, 
  3.6648384157970333`*^9}, {3.664897613280974*^9, 3.664897658731406*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Step 2: Assign X an arbitrary non-uniform discrete distribution.\
\>", "Subsection",
 CellChangeTimes->{{3.6045841093140383`*^9, 3.6045841438139143`*^9}, {
  3.604584312162849*^9, 3.6045843157288523`*^9}, {3.604592253134259*^9, 
  3.6045922550934477`*^9}}],

Cell["\<\
Let pa be the probability of the outcome a, pb the probability of the outcome \
b and so on. Let\[CloseCurlyQuote]s pick some arbitraty values for pa, pb, \
pc, and pd.\
\>", "Text",
 CellChangeTimes->{{3.6178778794929333`*^9, 3.617877923240884*^9}, {
  3.664837194548984*^9, 3.664837202961293*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pa", " ", "=", " ", "0.2"}], ";", " ", 
  RowBox[{"pb", " ", "=", " ", "0.3"}], ";", " ", 
  RowBox[{"pc", " ", "=", " ", "0.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.604585057537957*^9, 3.604585132452471*^9}, {
  3.6045941444177103`*^9, 3.6045941655190363`*^9}, {3.664897675391163*^9, 
  3.664897681683414*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 3: Simulate the Outcomes of X", "Subsection",
 CellChangeTimes->{{3.604585213020494*^9, 3.604585223723639*^9}, {
  3.604774070240834*^9, 3.6047741006023903`*^9}}],

Cell["\<\
We know the probabilities for outcomes a, b, and c (we picked these \
arbitrarily). Let\[CloseCurlyQuote]s generate a set of 20,000 outcomes of X. \
This will be the yardstick against which we measure the claim.\
\>", "Text",
 CellChangeTimes->{{3.6047741150416517`*^9, 3.6047741899234123`*^9}, 
   3.6048663291703463`*^9, {3.604995568819243*^9, 3.604995611026492*^9}, {
   3.664897697396469*^9, 3.664897700626466*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nTrials", " ", "=", " ", "20000"}], ";"}]], "Input",
 CellChangeTimes->{{3.6047742477599697`*^9, 3.6047742655267878`*^9}, {
  3.604788166409204*^9, 3.60478817365042*^9}, {3.604836569226512*^9, 
  3.6048365698013153`*^9}, {3.6048407946045837`*^9, 3.604840795548107*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"xOutcomes", " ", "=", " ", 
    RowBox[{"RandomChoice", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pa", ",", " ", "pb", ",", " ", "pc"}], "}"}], " ", "\[Rule]",
        " ", "xVals"}], ",", " ", "nTrials"}], "]"}]}], ";"}], " "}]], "Input",\

 CellChangeTimes->{{3.604774195675102*^9, 3.604774198576833*^9}, 
   3.60477423283753*^9, {3.60477427168969*^9, 3.604774280242882*^9}, 
   3.60478601577009*^9, {3.6048320403927097`*^9, 3.604832044992457*^9}, {
   3.664897743679555*^9, 3.6648977483994226`*^9}, {3.6649076953846083`*^9, 
   3.664907696951769*^9}}],

Cell["\<\
xOutcomes now holds the results of the 20,000 trials -- in other words, it is \
a list that has 20,000 elements where each element can be an a, b, c, or d. \
Here are the first 20 elements of that list:\
\>", "Text",
 CellChangeTimes->{{3.617877975017202*^9, 3.61787811614291*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"xOutcomes", ",", " ", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.6178780950748987`*^9, 3.617878120462612*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "b", ",", "b", ",", "c", ",", "b", ",", "a", ",", "c", ",", "a", ",", "c", 
   ",", "c", ",", "c", ",", "b", ",", "a", ",", "b", ",", "a", ",", "a", ",", 
   "c", ",", "a", ",", "c", ",", "a", ",", "b"}], "}"}]], "Output",
 CellChangeTimes->{{3.617878103527204*^9, 3.617878121145852*^9}, 
   3.66489782400841*^9, 3.664905797858162*^9, {3.664907702643311*^9, 
   3.664907713596612*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 4: Generate Candidate Probabilities for X\[CloseCurlyQuote]", \
"Subsection",
 CellChangeTimes->{{3.604585213020494*^9, 3.604585223723639*^9}, {
  3.604774070240834*^9, 3.6047741006023903`*^9}, {3.604774393648871*^9, 
  3.6047744413643312`*^9}, {3.664912919971377*^9, 3.6649129221818542`*^9}}],

Cell["\<\
According to Colbeck and Renner\[CloseCurlyQuote]s claim, there is some \
distribution of the outcomes of X\[CloseCurlyQuote] such that the resulting \
joint distribution is uniform. So, in keeping with our simulation approach, \
let\[CloseCurlyQuote]s generate a bunch of 4-tuples of reals between 0 and 1 \
such that for every 4-tuple, its values add up to 1. We can use each of these \
4-tuples to generate a set of 20,000 outcomes for X\[CloseCurlyQuote]. 

But let\[CloseCurlyQuote]s not get ahead of ourselves. In this section we \
focus on generating the candidate probabilities for the outcomes of X\
\[CloseCurlyQuote].\
\>", "Text",
 CellChangeTimes->{{3.604774454396454*^9, 3.604774484295993*^9}, {
  3.604774584609907*^9, 3.604774807099522*^9}, {3.604831331167204*^9, 
  3.604831335525312*^9}, {3.6049956348320503`*^9, 3.604995712416732*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "number", " ", "of", " ", "candidate", " ", 
    RowBox[{"X", "'"}], " ", "distributions", " ", "we", " ", "are", " ", 
    "testing"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nCandidates", " ", "=", " ", "20000"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Generate", " ", "a", " ", "4"}], "-", 
      RowBox[{"tuple", " ", "of", " ", "Reals"}]}], ",", " ", 
     RowBox[{"each", " ", "between", " ", "0", " ", "and", " ", "1"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"candidates", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", "4"}], "]"}], ",", " ", 
       RowBox[{"{", "nCandidates", "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.604774832205749*^9, 3.604774931671136*^9}, {
   3.604776225767426*^9, 3.6047762349443398`*^9}, {3.6047834833722553`*^9, 
   3.6047834834982643`*^9}, {3.60478433222892*^9, 3.604784341442993*^9}, {
   3.604785497390656*^9, 3.60478550636038*^9}, 3.604785693593848*^9, 
   3.6047858934240522`*^9, {3.604831359785925*^9, 3.604831376763855*^9}, {
   3.604832056586582*^9, 3.604832057024467*^9}, {3.60483211882475*^9, 
   3.6048321192088127`*^9}, 3.604832170159047*^9, {3.60483226775565*^9, 
   3.6048322924302797`*^9}, {3.604834744739921*^9, 3.604834760168777*^9}, {
   3.6048365755943832`*^9, 3.604836577713896*^9}, 3.6048371043738623`*^9, {
   3.604838640814725*^9, 3.6048386429026012`*^9}, {3.604842008370192*^9, 
   3.604842009023963*^9}, {3.604844130558784*^9, 3.6048441904136353`*^9}, {
   3.604853096084584*^9, 3.604853097474699*^9}, {3.6048566746109*^9, 
   3.6048566764629097`*^9}, {3.604995735006743*^9, 3.604995749827692*^9}, {
   3.6049966287338333`*^9, 3.604996629835988*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell["\<\
Of course not all such randomly generated 4-tuples will add up to exactly 1, \
which is what\[CloseCurlyQuote]s required if we need the 4-tuple to represent \
the probability of the 4 possible outcomes of X\[CloseCurlyQuote]. Let\
\[CloseCurlyQuote]s ensure that this is the case. We do so by taking the \
initial 4-tuple and finding the sum of the elements. If the sum is greater \
than 1, we subtract the overage from the largest element of the 4-tuple. If \
the sum is less than 1, we add the difference to the smallest element of the \
4-tuple. \
\>", "Text",
 CellChangeTimes->{{3.6047749395392303`*^9, 3.604775037877028*^9}, {
   3.6049963101178102`*^9, 3.6049963201463137`*^9}, {3.6049991056722383`*^9, 
   3.604999109589094*^9}, {3.604999231309925*^9, 3.604999311353505*^9}, 
   3.6170379403209667`*^9, {3.664839631629602*^9, 3.664839650569335*^9}, {
   3.664898041906043*^9, 3.6648980420463753`*^9}, {3.664898232948865*^9, 
   3.664898235752474*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"convertToProb2", "[", "fourTuple_", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "w", ",", "x", ",", "y", ",", "z", ",", "sum", ",", " ", "maxPos", ",", 
       " ", "minPos"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Find", " ", "the", " ", "sum"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"w", ",", "x", ",", "y", ",", "z"}], "}"}], " ", "=", " ", 
       "fourTuple"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sum", " ", "=", " ", 
       RowBox[{"Total", "[", "fourTuple", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Find", " ", "the", " ", "positions", " ", "of", " ", "the", " ", 
        "max", " ", "and", " ", "min", " ", "value"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"maxPos", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"fourTuple", ",", " ", 
          RowBox[{"Max", "[", "fourTuple", "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"minPos", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"fourTuple", ",", " ", 
          RowBox[{"Min", "[", "fourTuple", "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "If", " ", "the", " ", "total", " ", "is", " ", "greater", " ", 
         "than", " ", "1"}], ",", " ", 
        RowBox[{
         RowBox[{
         "then", " ", "subtract", " ", "it", " ", "from", " ", "the", " ", 
          "largest", " ", "element", " ", "of", " ", "the", " ", "4"}], "-", 
         "tuple"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"sum", " ", ">", " ", "1"}], ",", " ", 
        RowBox[{"Switch", "[", 
         RowBox[{
          RowBox[{"maxPos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "1", ",", 
          RowBox[{"w", "=", 
           RowBox[{"w", "-", 
            RowBox[{"(", 
             RowBox[{"sum", "-", "1"}], ")"}]}]}], ",", "2", ",", 
          RowBox[{"x", "=", 
           RowBox[{"x", "-", 
            RowBox[{"(", 
             RowBox[{"sum", "-", "1"}], ")"}]}]}], ",", "3", ",", 
          RowBox[{"y", " ", "=", " ", 
           RowBox[{"y", "-", 
            RowBox[{"(", 
             RowBox[{"sum", " ", "-", "1"}], ")"}]}]}], ",", " ", "4", ",", 
          " ", 
          RowBox[{"z", " ", "=", " ", 
           RowBox[{"z", "-", 
            RowBox[{"(", 
             RowBox[{"sum", " ", "-", "1"}], ")"}]}]}]}], "]"}]}], "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "If", " ", "the", " ", "total", " ", "is", " ", "less", " ", "than", 
         " ", "1"}], ",", " ", 
        RowBox[{
         RowBox[{
         "then", " ", "add", " ", "it", " ", "to", " ", "the", " ", 
          "smallest", " ", "element", " ", "of", " ", "the", " ", "3"}], "-", 
         "tuple"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"sum", " ", "<", " ", "1"}], ",", " ", 
        RowBox[{"Switch", "[", 
         RowBox[{
          RowBox[{"minPos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "1", ",", 
          RowBox[{"w", "=", 
           RowBox[{"w", "+", 
            RowBox[{"(", 
             RowBox[{"1", "-", "sum"}], ")"}]}]}], ",", "2", ",", 
          RowBox[{"x", "=", 
           RowBox[{"x", "+", 
            RowBox[{"(", 
             RowBox[{"1", "-", "sum"}], ")"}]}]}], ",", "3", ",", 
          RowBox[{"y", " ", "=", " ", 
           RowBox[{"y", "+", 
            RowBox[{"(", 
             RowBox[{"1", "-", "sum"}], ")"}]}]}], ",", " ", "4", ",", " ", 
          RowBox[{"z", " ", "=", " ", 
           RowBox[{"z", " ", "+", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "sum"}], ")"}]}]}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "If", " ", "the", " ", "sum", " ", "is", " ", "exactly", " ", "1"}], 
        ",", " ", 
        RowBox[{
        "then", " ", "just", " ", "spit", " ", "out", " ", "the", " ", 
         "fourTuple"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"w", ",", "x", ",", "y", ",", "z"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.60477507523168*^9, 3.604775232198288*^9}, {
   3.6047752983222218`*^9, 3.604775299431772*^9}, {3.604775331020109*^9, 
   3.604775651330296*^9}, {3.604775684510745*^9, 3.604775691737681*^9}, {
   3.604775732711894*^9, 3.604775771426256*^9}, {3.6047758409262257`*^9, 
   3.6047758890973797`*^9}, {3.604775963436925*^9, 3.6047760037754602`*^9}, {
   3.604776315639168*^9, 3.604776392593605*^9}, {3.604776450960204*^9, 
   3.6047764760711117`*^9}, {3.604776514791707*^9, 3.6047765246120768`*^9}, {
   3.604776597256024*^9, 3.604776698391778*^9}, {3.604783197991147*^9, 
   3.604783263270566*^9}, {3.604783314045704*^9, 3.604783331501993*^9}, {
   3.60478338595737*^9, 3.604783390667574*^9}, {3.604783440075245*^9, 
   3.60478344348384*^9}, {3.60478373784529*^9, 3.604783757293686*^9}, {
   3.604783796298107*^9, 3.6047838016106453`*^9}, {3.604783880778275*^9, 
   3.604783896928564*^9}, {3.604784004854857*^9, 3.60478402513328*^9}, {
   3.604784388234009*^9, 3.604784464516762*^9}, {3.604784500499881*^9, 
   3.60478451754552*^9}, {3.604784594881218*^9, 3.60478460320322*^9}, {
   3.6047847690993843`*^9, 3.604784806291136*^9}, {3.6047848439668207`*^9, 
   3.604784853999317*^9}, 3.604784904069859*^9, {3.604784995073947*^9, 
   3.604785029445602*^9}, {3.6047850782847958`*^9, 3.6047851394652977`*^9}, {
   3.604785173124312*^9, 3.604785292343186*^9}, {3.604785328971521*^9, 
   3.6047854474549713`*^9}, 3.604836476424622*^9, {3.604996334708053*^9, 
   3.6049965309887457`*^9}}],

Cell["\<\
Even with this conversion we can sometimes get negative values for one of the \
elements of the 3-tuple. Delete these to form the set of all the candidate \
probability distributions for X\[CloseCurlyQuote].\
\>", "Text",
 CellChangeTimes->{{3.6047859102862997`*^9, 3.6047859614173117`*^9}, {
  3.604786027573889*^9, 3.604786032523765*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xPrimeProbs", " ", "=", " ", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"convertToProb2", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
      "candidates"}], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"w_", ",", "x_", ",", "y_", ",", "z_"}], "}"}], "/;", " ", 
      RowBox[{
       RowBox[{"w", " ", "\[LessEqual]", " ", "0"}], " ", "||", " ", 
       RowBox[{"x", " ", "\[LessEqual]", "0"}], " ", "||", " ", 
       RowBox[{"y", "\[LessEqual]", " ", "0"}], " ", "||", " ", 
       RowBox[{"z", "\[LessEqual]", " ", "0"}]}]}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.6047751997571793`*^9, 3.604775206075761*^9}, {
   3.6047760270096292`*^9, 3.6047760510777817`*^9}, {3.604776127427637*^9, 
   3.604776137526045*^9}, {3.6047762492428017`*^9, 3.604776258571065*^9}, {
   3.6047834109930162`*^9, 3.604783433492589*^9}, {3.6047835030263433`*^9, 
   3.604783505089699*^9}, 3.604783834585409*^9, {3.604784031778564*^9, 
   3.6047840363679733`*^9}, {3.6047843257159843`*^9, 3.604784326747827*^9}, {
   3.604784357725462*^9, 3.6047843605631123`*^9}, {3.60478547038803*^9, 
   3.6047854803556023`*^9}, {3.604785519733827*^9, 3.6047855256154547`*^9}, {
   3.604785736968803*^9, 3.60478588181253*^9}, {3.604786036059382*^9, 
   3.60478606880759*^9}, {3.6048321352447844`*^9, 3.604832143110888*^9}, {
   3.6048321934417048`*^9, 3.6048321985177593`*^9}, 3.604832245486536*^9, {
   3.604832304850499*^9, 3.6048323218804197`*^9}, {3.6048323964123287`*^9, 
   3.6048323991677732`*^9}, {3.604996582968501*^9, 3.604996607382341*^9}}],

Cell["Let\[CloseCurlyQuote]s see how many candidates we\[CloseCurlyQuote]re \
testing:", "Text",
 CellChangeTimes->{{3.604837432800881*^9, 3.604837438900743*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"numberCandidatesTested", " ", "=", " ", 
  RowBox[{"Length", "[", "xPrimeProbs", "]"}]}]], "Input",
 CellChangeTimes->{{3.604837445382883*^9, 3.6048374682432137`*^9}}],

Cell[BoxData["7258"], "Output",
 CellChangeTimes->{3.604837469636757*^9, 3.6048386552393312`*^9, 
  3.604840810095072*^9, 3.6048420253636293`*^9, 3.604853105856077*^9, 
  3.60485576159517*^9, 3.6048566870152187`*^9, 3.604996615461164*^9, 
  3.604996655237554*^9, 3.604998290725541*^9, 3.6170361061965322`*^9, 
  3.617878400096033*^9}]
}, {2}]],

Cell["Check to see if it\[CloseCurlyQuote]s working. ", "Text",
 CellChangeTimes->{{3.6047861220263977`*^9, 3.604786132074511*^9}, {
  3.604831510706819*^9, 3.6048315176749983`*^9}, {3.604832432374957*^9, 
  3.6048324468927*^9}, {3.6049967059375362`*^9, 3.604996712942327*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
     "xPrimeProbs"}], ",", " ", 
    RowBox[{"-", "10"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6047860804999933`*^9, 3.604786105157278*^9}, 
   3.6047863148508673`*^9, {3.6048315000707817`*^9, 3.6048315223843813`*^9}, {
   3.6048323277415123`*^9, 3.604832338727269*^9}, {3.604832405728532*^9, 
   3.604832414046838*^9}, {3.60499666768338*^9, 3.604996697291709*^9}}],

Cell["\<\
Check to see how the probability values of the outcomes of \
X\[CloseCurlyQuote] are distributed over the Interval [0,1].\
\>", "Text",
 CellChangeTimes->{{3.604786151199677*^9, 3.604786153701833*^9}, {
   3.604786207614296*^9, 3.604786222185978*^9}, {3.604831533183775*^9, 
   3.604831561130178*^9}, 3.6048663511935673`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"Flatten", "[", "xPrimeProbs", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.604786242705675*^9, 3.604786260113742*^9}, {
  3.60483171469982*^9, 3.60483172465387*^9}, {3.60483234428093*^9, 
  3.604832347906638*^9}, {3.6048324188206863`*^9, 3.604832422549033*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.567], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.567], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.05, 3252}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{31.15832666132907, 
          48.522344191142395`}, {-88.8157174899024, 90.90377156037641}}],
        StatusArea[#, 3252]& ,
        TagBoxNote->"3252"],
       StyleBox["3252", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3252, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.05, 0}, {0.1, 3481}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{48.022344191142395`, 
          65.38636172095573}, {-101.43603206324613`, 90.90377156037641}}],
        StatusArea[#, 3481]& ,
        TagBoxNote->"3481"],
       StyleBox["3481", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3481, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.1, 0}, {0.15, 3219}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{64.88636172095573, 
          82.25037925076904}, {-86.99706953828516, 90.90377156037641}}],
        StatusArea[#, 3219]& ,
        TagBoxNote->"3219"],
       StyleBox["3219", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3219, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.15, 0}, {0.2, 3206}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{81.75037925076904, 
          99.11439678058238}, {-86.28063246643597, 90.90377156037641}}],
        StatusArea[#, 3206]& ,
        TagBoxNote->"3206"],
       StyleBox["3206", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3206, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.2, 0}, {0.25, 2911}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{98.61439678058238, 
          115.9784143103957}, {-70.02302198985777, 90.90377156037641}}],
        StatusArea[#, 2911]& ,
        TagBoxNote->"2911"],
       StyleBox["2911", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2911, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.25, 0}, {0.3, 2705}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{115.4784143103957, 
          132.84243184020903`}, {-58.670249928247244`, 90.90377156037641}}],
        StatusArea[#, 2705]& ,
        TagBoxNote->"2705"],
       StyleBox["2705", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2705, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.3, 0}, {0.35, 2377}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{132.34243184020903`, 
          149.70644937002237`}, {-40.59399150005186, 90.90377156037641}}],
        StatusArea[#, 2377]& ,
        TagBoxNote->"2377"],
       StyleBox["2377", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2377, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.35, 0}, {0.4, 2067}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{149.20644937002237`, 
          166.5704668998357}, {-23.509722863647667`, 90.90377156037641}}],
        StatusArea[#, 2067]& ,
        TagBoxNote->"2067"],
       StyleBox["2067", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2067, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.4, 0}, {0.45, 1747}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{166.0704668998357, 
          183.43448442964905`}, {-5.874348787359466, 90.90377156037641}}],
        StatusArea[#, 1747]& ,
        TagBoxNote->"1747"],
       StyleBox["1747", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1747, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.45, 0}, {0.5, 1291}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{182.93448442964905`, 200.29850195946233`}, {
          19.25605927135122, 90.90377156037641}}],
        StatusArea[#, 1291]& ,
        TagBoxNote->"1291"],
       StyleBox["1291", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1291, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {0.55, 993}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{199.79850195946233`, 217.16251948927567`}, {
          35.6790013798946, 90.90377156037641}}],
        StatusArea[#, 993]& ,
        TagBoxNote->"993"],
       StyleBox["993", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[993, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.55, 0}, {0.6, 654}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{216.66251948927567`, 234.026537019089}, {
          54.36147579196241, 90.90377156037641}}],
        StatusArea[#, 654]& ,
        TagBoxNote->"654"],
       StyleBox["654", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[654, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.6, 0}, {0.65, 471}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{233.526537019089, 250.89055454890234`}, {
          64.44670534183973, 90.90377156037641}}],
        StatusArea[#, 471]& ,
        TagBoxNote->"471"],
       StyleBox["471", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[471, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.65, 0}, {0.7, 315}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{250.39055454890234`, 267.7545720787156}, {
          73.04395020403021, 90.90377156037641}}],
        StatusArea[#, 315]& ,
        TagBoxNote->"315"],
       StyleBox["315", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[315, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.7, 0}, {0.75, 186}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{267.2545720787156, 284.61858960852896`}, {
          80.1532103785339, 90.90377156037641}}],
        StatusArea[#, 186]& ,
        TagBoxNote->"186"],
       StyleBox["186", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[186, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.75, 0}, {0.8, 100}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{284.11858960852896`, 301.4826071383423}, {
          84.89271716153635, 90.90377156037641}}],
        StatusArea[#, 100]& ,
        TagBoxNote->"100"],
       StyleBox["100", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[100, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.8, 0}, {0.85, 35}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{300.9826071383423, 318.3466246681556}, {
          88.4749025207824, 90.90377156037641}}],
        StatusArea[#, 35]& ,
        TagBoxNote->"35"],
       StyleBox["35", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[35, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.85, 0}, {0.9, 14}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{317.8466246681556, 335.210642197969}, {
          89.63222394453881, 90.90377156037641}}],
        StatusArea[#, 14]& ,
        TagBoxNote->"14"],
       StyleBox["14", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[14, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.9, 0}, {0.95, 8}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{334.710642197969, 352.07465972778226`}, {
          89.96288720846921, 90.90377156037641}}],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.019, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 0.95}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.604786262333747*^9, 3.6048315689526873`*^9, 
  3.604832349039403*^9, 3.604832423342586*^9, 3.6048366074030333`*^9, 
  3.604837114433971*^9, 3.604838655684688*^9, 3.6048408117463503`*^9, 
  3.6048420285688353`*^9, 3.604853106166274*^9, 3.604855762803396*^9, 
  3.6048566902747803`*^9, 3.6049968343632507`*^9, 3.604998291992455*^9, 
  3.617036107683855*^9, 3.617878437909091*^9}]
}, Open  ]],

Cell["\<\
This distribution makes sense; if you want four values to add to 1, and each \
value is obtained from a uniform distribution of reals between and including \
0 and 1, then the frequencies of values greater than or equal to 0.4 should \
fall away as we see in the histogram above.\
\>", "Text",
 CellChangeTimes->{{3.617878462015313*^9, 3.617878618530879*^9}}],

Cell["[INSTEAD, use a better function to generate the n-tuples]", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"genSingleTuple", "[", 
    RowBox[{"tupleSize_", ",", " ", "tupleSum_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"firstN", ",", " ", "firstNTotal", ",", " ", "outputTuple"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "tuple", " ", "size", " ", "is", " ", "self", " ", "explanatory"}], " ",
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "tupleSum", " ", "is", " ", "the", " ", "total", " ", "to", " ", 
       "which", " ", "the", " ", "elements", " ", "of", " ", "the", " ", 
       "tuple", " ", "should", " ", "sum", " ", "to"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"For", " ", "most", " ", "purposes"}], ",", " ", 
       RowBox[{
       "this", " ", "sum", " ", "will", " ", "be", " ", "100", " ", "as", " ",
         "in", " ", "100", "%"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Generate", " ", "the", " ", "n"}], "-", 
        RowBox[{"1", " ", "tuple"}]}], ";", " ", 
       RowBox[{
       "each", " ", "element", " ", "of", " ", "the", " ", "tuple", " ", 
        "can", " ", "range", " ", "between"}]}], "  ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"CAUTION", ":", " ", 
        RowBox[{"The", " ", "function", " ", "will", " ", "return", " ", 
         RowBox[{"{", "}"}], " ", "if", " ", "the", " ", "random", " ", 
         "numbers", " ", 
         RowBox[{"don", "'"}], "t", " ", "pan", " ", 
         RowBox[{"out", ".", " ", "If"}], " ", "that", " ", "happens"}]}], 
       ",", " ", 
       RowBox[{"try", " ", 
        RowBox[{"again", "!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"firstN", " ", "=", " ", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"tupleSum", ",", 
         RowBox[{"tupleSize", " ", "-", " ", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"firstNTotal", " ", "=", " ", 
       RowBox[{"Total", "[", "firstN", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"firstNTotal", " ", "\[LessEqual]", " ", "tupleSum"}], ",", 
        " ", 
        RowBox[{"outputTuple", " ", "=", " ", 
         RowBox[{"Append", "[", 
          RowBox[{"firstN", ",", " ", 
           RowBox[{"tupleSum", "-", "firstNTotal"}]}], "]"}]}], ",", " ", 
        RowBox[{"outputTuple", " ", "=", " ", 
         RowBox[{"{", "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6597889441033163`*^9, 3.659789065331129*^9}, {
   3.6597891026775947`*^9, 3.6597892341858253`*^9}, {3.6597908317846317`*^9, 
   3.6597912074956913`*^9}, {3.659791294731045*^9, 3.659791349377941*^9}, 
   3.6597914175812607`*^9, {3.6597922367854996`*^9, 3.659792246410716*^9}, {
   3.6597923370936756`*^9, 3.6597923383884783`*^9}, {3.659792405577796*^9, 
   3.65979244234706*^9}, {3.659792660217043*^9, 3.659792682852683*^9}, {
   3.6597927151135397`*^9, 3.6597927277027617`*^9}, {3.6597927858440638`*^9, 
   3.659792813190912*^9}, {3.664840062764112*^9, 3.664840164423809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"genSingleTuple", "[", 
  RowBox[{"3", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.6648399697151327`*^9, 3.664840015211501*^9}, 
   3.664840146190754*^9, 3.664840192575822*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.664839997373496*^9, 3.664840016624249*^9}, 
   3.664840074349576*^9, {3.6648401472540283`*^9, 3.6648402249402*^9}, {
   3.6648980763948593`*^9, 3.664898097943429*^9}, {3.664905813507243*^9, 
   3.664905817609412*^9}, 3.66490775103494*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"genMultipleTuples", "[", 
    RowBox[{"tupleSize_", ",", " ", "tupleSum_", ",", " ", "numTuples_"}], 
    "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"NOTE", ":", " ", 
        RowBox[{
        "Because", " ", "some", " ", "of", " ", "the", " ", "tuples", " ", 
         "generated", " ", "by", " ", "genSingleTuple", " ", "will", " ", 
         "be", " ", 
         RowBox[{"{", "}"}]}]}], ",", " ", 
       RowBox[{
       "numTuples", " ", "should", " ", "be", " ", "a", " ", "much", " ", 
        "larger", " ", "number", " ", "than", " ", "the", " ", "actual", " ", 
        "number", " ", "of", " ", "tuples", " ", "that", " ", "are", " ", 
        RowBox[{"required", ".", " ", "Think"}], " ", "of", " ", "numTuples", 
        " ", "as", " ", "the", " ", "maximum", " ", "possible", " ", "tuples",
         " ", "that", " ", "can", " ", "be", " ", "generated", " ", "but", 
        " ", "usually", " ", "the", " ", "actual", " ", "number", " ", "will",
         " ", "be", " ", "much", " ", 
        RowBox[{"less", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"genSingleTuple", "[", 
         RowBox[{"tupleSize", ",", " ", "tupleSum"}], "]"}], ",", " ", 
        "numTuples"}], "]"}], " ", "/.", " ", 
      RowBox[{
       RowBox[{"{", "}"}], " ", "\[Rule]", " ", 
       RowBox[{"Sequence", "[", "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6597924644834995`*^9, 3.6597925950245285`*^9}, {
  3.6597928021460924`*^9, 3.659792966289581*^9}, {3.664839981227162*^9, 
  3.664839983256144*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"scaleMaxMin", "[", 
    RowBox[{
    "tupleSize_", ",", " ", "tupleSum_", ",", " ", "numTuples_", ",", " ", 
     "scalingFactors_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sampleTuples", ",", " ", "scaledTuples", ",", " ", 
       "scaledTuplesTotals"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"tupleSize", ",", " ", "tupleSum", ",", " ", 
       RowBox[{
       "numTuples", " ", "are", " ", "all", " ", "inputs", " ", "of", " ", 
        "genMultipleTuples"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "scalingFactors", " ", "are", " ", "the", " ", "multipliers", " ", 
        "for", " ", "each", " ", "point", " ", "on", " ", "the", " ", 
        RowBox[{"scale", ".", " ", "They"}], " ", "appear", " ", "as", " ", 
        "a", " ", "series", " ", "of", " ", "numbers", " ", "in", " ", "the", 
        " ", "form", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", " ", 
          RowBox[{"-", "1"}], ",", " ", "3", ",", " ", "9"}], "}"}]}], ",", 
       " ", 
       RowBox[{"for", " ", 
        RowBox[{"example", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"If", " ", "tupleSize"}], " ", "\[NotEqual]", " ", 
        RowBox[{"Length", "[", "scalingFactors", "]"}]}], ",", " ", 
       RowBox[{
       "then", " ", "generate", " ", "an", " ", "error", " ", "message"}]}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"tupleSize", " ", "\[NotEqual]", " ", 
         RowBox[{"Length", "[", "scalingFactors", "]"}]}], ",", " ", 
        RowBox[{
        "Return", "[", 
         "\"\<The number of scaling factors should be the same as the tuple \
size. Please try again.\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "the", " ", "multiple", " ", "tuples"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"sampleTuples", " ", "=", " ", 
       RowBox[{"genMultipleTuples", "[", 
        RowBox[{"tupleSize", ",", " ", "tupleSum", ",", " ", "numTuples"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Multiply", " ", "each", " ", "tuple", " ", "by", " ", "the", " ", 
        "scaling", " ", "factors"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"scaledTuples", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"scalingFactors", " ", "*", " ", "#"}], " ", "&"}], " ", "/@",
         " ", "sampleTuples"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Total", " ", "up", " ", "each", " ", "scaled", " ", "tuple"}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"scaledTuplesTotals", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", "#", "]"}], " ", "&"}], " ", "/@", 
        "scaledTuples"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Output", " ", "the", " ", "Max", " ", "and", " ", "Min", " ", "of", 
        " ", "the", " ", "scaledTuplesTotals"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Max", "[", "scaledTuplesTotals", "]"}], ",", " ", 
        RowBox[{"Min", "[", "scaledTuplesTotals", "]"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.659793067783359*^9, 3.6597931347074766`*^9}, {
  3.6597931808991575`*^9, 3.65979344405602*^9}, {3.659793497142913*^9, 
  3.6597935457681985`*^9}, {3.659793612021515*^9, 3.65979374006654*^9}, {
  3.659793776773404*^9, 3.659793934676882*^9}, {3.659793983146167*^9, 
  3.659793991289381*^9}, {3.6597940345014567`*^9, 3.6597940366074605`*^9}, {
  3.6597940710523214`*^9, 3.6597940757479296`*^9}, {3.659794140956044*^9, 
  3.6597942248997912`*^9}, {3.659794264757861*^9, 3.659794280638689*^9}, {
  3.660553024988299*^9, 3.660553025986701*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scaleMaxMin", "[", 
  RowBox[{"4", ",", " ", "100", ",", " ", "100000", ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "1"}], ",", "3", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659793451450433*^9, 3.659793492525305*^9}, {
  3.6597935918194795`*^9, 3.6597935969674883`*^9}, {3.659794296909518*^9, 
  3.659794351572014*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"884", ",", 
   RowBox[{"-", "492"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6649058316105957`*^9, 3.66490775263085*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"xprimeTuples", " ", "=", " ", 
   RowBox[{"genMultipleTuples", "[", 
    RowBox[{"4", ",", "100", ",", "300000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.664898341943956*^9, 3.664898395733498*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "xprimeTuples", "]"}]], "Input",
 CellChangeTimes->{{3.664899621493318*^9, 3.66489963308097*^9}}],

Cell[BoxData["51347"], "Output",
 CellChangeTimes->{3.664899633805459*^9, 3.66490585255154*^9, 
  3.664907757353471*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"xprimeTuples", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.664899649803603*^9, 3.6648996605931997`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "61", ",", "6", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "32", ",", "2", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "17", ",", "27", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "28", ",", "27", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "33", ",", "42", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "59", ",", "6", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "10", ",", "72", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "21", ",", "29", ",", "37"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", "7", ",", "32", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", "26", ",", "13", ",", "32"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.6648996620079317`*^9, 3.664905857162944*^9, 
  3.664907757403285*^9}]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s check on how these xprimeTuples are distributed. \
Ideally, each element of the tuple should be uniformly distributed from 1 to \
100. \
\>", "Text",
 CellChangeTimes->{{3.6648996995732594`*^9, 3.6648997071897163`*^9}, {
  3.6648997406045427`*^9, 3.664899757508525*^9}, {3.664899815610071*^9, 
  3.664899837785172*^9}}],

Cell["\<\
What\[CloseCurlyQuote]s the distribution of the each of the elements of the \
tuples?\
\>", "Text",
 CellChangeTimes->{{3.664899803359187*^9, 3.664899807466419*^9}, {
  3.664899874229896*^9, 3.664899877724424*^9}, {3.664900072344183*^9, 
  3.664900079259446*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t1", ",", " ", "t2", ",", " ", "t3", ",", " ", "t4"}], "}"}], 
   " ", "=", " ", 
   RowBox[{"Transpose", "[", "xprimeTuples", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6648998838107147`*^9, 3.664899932232229*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dt", " ", "=", " ", 
  RowBox[{"Histogram", "[", 
   RowBox[{"{", 
    RowBox[{"t1", ",", "t2", ",", "t3", ",", "t4"}], "}"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.664899940448595*^9, 3.664899950767416*^9}, {
  3.6649000166685467`*^9, 3.664900038454199*^9}, {3.664900209885365*^9, 
  3.664900233039476*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5459999999999999], Thickness[Small]}], {{}, 
     {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{Opacity[
      0.5459999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0.}, {5., 7232}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{31.13235294117647, 
           47.58823529411765}, {-97.74777012603406, 90.08441796500097}}],
         StatusArea[#, 7232]& ,
         TagBoxNote->"7232"],
        StyleBox["7232", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[7232, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5., 0.}, {10., 6588}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{47.08823529411765, 
           63.544117647058826`}, {-81.06608744757352, 90.08441796500097}}],
         StatusArea[#, 6588]& ,
         TagBoxNote->"6588"],
        StyleBox["6588", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6588, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10., 0.}, {15., 5699}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{63.044117647058826`, 79.5}, {-58.0381124457856, 
           90.08441796500097}}],
         StatusArea[#, 5699]& ,
         TagBoxNote->"5699"],
        StyleBox["5699", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5699, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{15., 0.}, {20., 5116}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{79., 95.45588235294119}, {-42.93652703966373, 
           90.08441796500097}}],
         StatusArea[#, 5116]& ,
         TagBoxNote->"5116"],
        StyleBox["5116", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5116, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{20., 0.}, {25., 4599}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{94.95588235294119, 
           111.41176470588235`}, {-29.54455507574434, 90.08441796500097}}],
         StatusArea[#, 4599]& ,
         TagBoxNote->"4599"],
        StyleBox["4599", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4599, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{25., 0.}, {30., 3966}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{110.91176470588235`, 
           127.36764705882354`}, {-13.147807970984218`, 90.08441796500097}}],
         StatusArea[#, 3966]& ,
         TagBoxNote->"3966"],
        StyleBox["3966", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3966, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{30., 0.}, {35., 3589}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{126.86764705882354`, 
           143.32352941176472`}, {-3.3822887632518928`, 90.08441796500097}}],
         StatusArea[#, 3589]& ,
         TagBoxNote->"3589"],
        StyleBox["3589", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3589, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{35., 0.}, {40., 2960}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{142.82352941176472`, 159.27941176470588`}, {
           12.910845405617167`, 90.08441796500097}}],
         StatusArea[#, 2960]& ,
         TagBoxNote->"2960"],
        StyleBox["2960", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2960, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{40., 0.}, {45., 2608}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{158.77941176470588`, 175.23529411764707`}, {
           22.02878376403038, 90.08441796500097}}],
         StatusArea[#, 2608]& ,
         TagBoxNote->"2608"],
        StyleBox["2608", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2608, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{45., 0.}, {50., 2192}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{174.73529411764707`, 191.19117647058823`}, {
           32.804529096700534`, 90.08441796500097}}],
         StatusArea[#, 2192]& ,
         TagBoxNote->"2192"],
        StyleBox["2192", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2192, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{50., 0.}, {55., 1780}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{190.69117647058823`, 207.14705882352942`}, {
           43.476661493479625`, 90.08441796500097}}],
         StatusArea[#, 1780]& ,
         TagBoxNote->"1780"],
        StyleBox["1780", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1780, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{55., 0.}, {60., 1440}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{206.64705882352942`, 223.1029411764706}, {
           52.28376104421966, 90.08441796500097}}],
         StatusArea[#, 1440]& ,
         TagBoxNote->"1440"],
        StyleBox["1440", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1440, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{60., 0.}, {65., 1172}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{222.6029411764706, 239.05882352941177`}, {
           59.22582774892062, 90.08441796500097}}],
         StatusArea[#, 1172]& ,
         TagBoxNote->"1172"],
        StyleBox["1172", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1172, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{65., 0.}, {70., 844}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{238.55882352941177`, 255.01470588235296`}, {
           67.72208849198748, 90.08441796500097}}],
         StatusArea[#, 844]& ,
         TagBoxNote->"844"],
        StyleBox["844", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[844, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{70., 0.}, {75., 631}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{254.51470588235296`, 270.97058823529414`}, {
           73.23947732818638, 90.08441796500097}}],
         StatusArea[#, 631]& ,
         TagBoxNote->"631"],
        StyleBox["631", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[631, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{75., 0.}, {80., 445}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{270.47058823529414`, 286.9264705882353}, {
           78.05747884712063, 90.08441796500097}}],
         StatusArea[#, 445]& ,
         TagBoxNote->"445"],
        StyleBox["445", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[445, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{80., 0.}, {85., 275}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{286.4264705882353, 302.88235294117646`}, {
           82.46102862249064, 90.08441796500097}}],
         StatusArea[#, 275]& ,
         TagBoxNote->"275"],
        StyleBox["275", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[275, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{85., 0.}, {90., 141}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{302.38235294117646`, 318.8382352941177}, {
           85.93206197484113, 90.08441796500097}}],
         StatusArea[#, 141]& ,
         TagBoxNote->"141"],
        StyleBox["141", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[141, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{90., 0.}, {95., 55}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{318.3382352941177, 334.79411764705884`}, {
           88.15974009649891, 90.08441796500097}}],
         StatusArea[#, 55]& ,
         TagBoxNote->"55"],
        StyleBox["55", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[55, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{95., 0.}, {100., 15}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{334.29411764705884`, 350.75}, {89.1958694554095, 
           90.08441796500097}}],
         StatusArea[#, 15]& ,
         TagBoxNote->"15"],
        StyleBox["15", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[15, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{Opacity[
      0.5459999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0.}, {5., 7376}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{31.13235294117647, 
           47.58823529411765}, {-101.47783581811217`, 90.08441796500097}}],
         StatusArea[#, 7376]& ,
         TagBoxNote->"7376"],
        StyleBox["7376", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[7376, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5., 0.}, {10., 6444}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{47.08823529411765, 
           63.544117647058826`}, {-77.33602175549538, 90.08441796500097}}],
         StatusArea[#, 6444]& ,
         TagBoxNote->"6444"],
        StyleBox["6444", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6444, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10., 0.}, {15., 5809}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{63.044117647058826`, 79.5}, {-60.887468182789746`,
            90.08441796500097}}],
         StatusArea[#, 5809]& ,
         TagBoxNote->"5809"],
        StyleBox["5809", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5809, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{15., 0.}, {20., 5089}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{79., 95.45588235294119}, {-42.23713972239909, 
           90.08441796500097}}],
         StatusArea[#, 5089]& ,
         TagBoxNote->"5089"],
        StyleBox["5089", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5089, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{20., 0.}, {25., 4655}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{94.95588235294119, 
           111.41176470588235`}, {-30.99513617821917, 90.08441796500097}}],
         StatusArea[#, 4655]& ,
         TagBoxNote->"4655"],
        StyleBox["4655", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4655, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{25., 0.}, {30., 4019}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{110.91176470588235`, 
           127.36764705882354`}, {-14.520679371540751`, 90.08441796500097}}],
         StatusArea[#, 4019]& ,
         TagBoxNote->"4019"],
        StyleBox["4019", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4019, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{30., 0.}, {35., 3405}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{126.86764705882354`, 143.32352941176472`}, {
           1.3839062877368349`, 90.08441796500097}}],
         StatusArea[#, 3405]& ,
         TagBoxNote->"3405"],
        StyleBox["3405", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3405, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{35., 0.}, {40., 3081}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{142.82352941176472`, 159.27941176470588`}, {
           9.776554094912626, 90.08441796500097}}],
         StatusArea[#, 3081]& ,
         TagBoxNote->"3081"],
        StyleBox["3081", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3081, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{40., 0.}, {45., 2560}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{158.77941176470588`, 175.23529411764707`}, {
           23.272138994723093`, 90.08441796500097}}],
         StatusArea[#, 2560]& ,
         TagBoxNote->"2560"],
        StyleBox["2560", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2560, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{45., 0.}, {50., 2202}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{174.73529411764707`, 191.19117647058823`}, {
           32.54549675697288, 90.08441796500097}}],
         StatusArea[#, 2202]& ,
         TagBoxNote->"2202"],
        StyleBox["2202", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2202, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{50., 0.}, {55., 1790}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{190.69117647058823`, 207.14705882352942`}, {
           43.21762915375198, 90.08441796500097}}],
         StatusArea[#, 1790]& ,
         TagBoxNote->"1790"],
        StyleBox["1790", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1790, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{55., 0.}, {60., 1361}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{206.64705882352942`, 223.1029411764706}, {
           54.330116528068075`, 90.08441796500097}}],
         StatusArea[#, 1361]& ,
         TagBoxNote->"1361"],
        StyleBox["1361", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1361, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{60., 0.}, {65., 1149}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{222.6029411764706, 239.05882352941177`}, {
           59.82160213029421, 90.08441796500097}}],
         StatusArea[#, 1149]& ,
         TagBoxNote->"1149"],
        StyleBox["1149", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1149, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{65., 0.}, {70., 868}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{238.55882352941177`, 255.01470588235296`}, {
           67.10041087664112, 90.08441796500097}}],
         StatusArea[#, 868]& ,
         TagBoxNote->"868"],
        StyleBox["868", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[868, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{70., 0.}, {75., 638}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{254.51470588235296`, 270.97058823529414`}, {
           73.05815469037702, 90.08441796500097}}],
         StatusArea[#, 638]& ,
         TagBoxNote->"638"],
        StyleBox["638", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[638, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{75., 0.}, {80., 419}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{270.47058823529414`, 286.9264705882353}, {
           78.73096293041252, 90.08441796500097}}],
         StatusArea[#, 419]& ,
         TagBoxNote->"419"],
        StyleBox["419", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[419, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{80., 0.}, {85., 289}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{286.4264705882353, 302.88235294117646`}, {
           82.09838334687194, 90.08441796500097}}],
         StatusArea[#, 289]& ,
         TagBoxNote->"289"],
        StyleBox["289", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[289, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{85., 0.}, {90., 130}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{302.38235294117646`, 318.8382352941177}, {
           86.21699754854154, 90.08441796500097}}],
         StatusArea[#, 130]& ,
         TagBoxNote->"130"],
        StyleBox["130", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[130, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{90., 0.}, {95., 53}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{318.3382352941177, 334.79411764705884`}, {
           88.21154656444443, 90.08441796500097}}],
         StatusArea[#, 53]& ,
         TagBoxNote->"53"],
        StyleBox["53", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[53, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{95., 0.}, {100., 10}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{334.29411764705884`, 350.75}, {89.32538562527331, 
           90.08441796500097}}],
         StatusArea[#, 10]& ,
         TagBoxNote->"10"],
        StyleBox["10", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[10, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{Opacity[
      0.5459999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0.}, {5., 7159}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{31.13235294117647, 
           47.58823529411765}, {-95.85683404602221, 90.08441796500097}}],
         StatusArea[#, 7159]& ,
         TagBoxNote->"7159"],
        StyleBox["7159", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[7159, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5., 0.}, {10., 6403}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{47.08823529411765, 
           63.544117647058826`}, {-76.27398916261203, 90.08441796500097}}],
         StatusArea[#, 6403]& ,
         TagBoxNote->"6403"],
        StyleBox["6403", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6403, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10., 0.}, {15., 5784}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{63.044117647058826`, 79.5}, {-60.23988733347062, 
           90.08441796500097}}],
         StatusArea[#, 5784]& ,
         TagBoxNote->"5784"],
        StyleBox["5784", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5784, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{15., 0.}, {20., 5216}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{79., 95.45588235294119}, {-45.52685043694021, 
           90.08441796500097}}],
         StatusArea[#, 5216]& ,
         TagBoxNote->"5216"],
        StyleBox["5216", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5216, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{20., 0.}, {25., 4606}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{94.95588235294119, 
           111.41176470588235`}, {-29.725877713553686`, 90.08441796500097}}],
         StatusArea[#, 4606]& ,
         TagBoxNote->"4606"],
        StyleBox["4606", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4606, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{25., 0.}, {30., 4032}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{110.91176470588235`, 
           127.36764705882354`}, {-14.8574214131867, 90.08441796500097}}],
         StatusArea[#, 4032]& ,
         TagBoxNote->"4032"],
        StyleBox["4032", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4032, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{30., 0.}, {35., 3512}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{126.86764705882354`, 
           143.32352941176472`}, {-1.387739747349002, 90.08441796500097}}],
         StatusArea[#, 3512]& ,
         TagBoxNote->"3512"],
        StyleBox["3512", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3512, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{35., 0.}, {40., 3023}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{142.82352941176472`, 159.27941176470588`}, {
           11.27894166533298, 90.08441796500097}}],
         StatusArea[#, 3023]& ,
         TagBoxNote->"3023"],
        StyleBox["3023", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3023, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{40., 0.}, {45., 2653}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{158.77941176470588`, 175.23529411764707`}, {
           20.86313823525596, 90.08441796500097}}],
         StatusArea[#, 2653]& ,
         TagBoxNote->"2653"],
        StyleBox["2653", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2653, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{45., 0.}, {50., 2164}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{174.73529411764707`, 191.19117647058823`}, {
           33.52981964793795, 90.08441796500097}}],
         StatusArea[#, 2164]& ,
         TagBoxNote->"2164"],
        StyleBox["2164", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2164, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{50., 0.}, {55., 1834}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{190.69117647058823`, 207.14705882352942`}, {
           42.07788685895033, 90.08441796500097}}],
         StatusArea[#, 1834]& ,
         TagBoxNote->"1834"],
        StyleBox["1834", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1834, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{55., 0.}, {60., 1380}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{206.64705882352942`, 223.1029411764706}, {
           53.837955082585545`, 90.08441796500097}}],
         StatusArea[#, 1380]& ,
         TagBoxNote->"1380"],
        StyleBox["1380", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1380, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{60., 0.}, {65., 1207}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{222.6029411764706, 239.05882352941177`}, {
           58.319214559873856`, 90.08441796500097}}],
         StatusArea[#, 1207]& ,
         TagBoxNote->"1207"],
        StyleBox["1207", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1207, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{65., 0.}, {70., 824}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{238.55882352941177`, 255.01470588235296`}, {
           68.24015317144277, 90.08441796500097}}],
         StatusArea[#, 824]& ,
         TagBoxNote->"824"],
        StyleBox["824", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[824, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{70., 0.}, {75., 598}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{254.51470588235296`, 270.97058823529414`}, {
           74.09428404928762, 90.08441796500097}}],
         StatusArea[#, 598]& ,
         TagBoxNote->"598"],
        StyleBox["598", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[598, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{75., 0.}, {80., 419}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{270.47058823529414`, 286.9264705882353}, {
           78.73096293041252, 90.08441796500097}}],
         StatusArea[#, 419]& ,
         TagBoxNote->"419"],
        StyleBox["419", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[419, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{80., 0.}, {85., 286}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{286.4264705882353, 302.88235294117646`}, {
           82.17609304879024, 90.08441796500097}}],
         StatusArea[#, 286]& ,
         TagBoxNote->"286"],
        StyleBox["286", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[286, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{85., 0.}, {90., 162}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{302.38235294117646`, 318.8382352941177}, {
           85.38809406141307, 90.08441796500097}}],
         StatusArea[#, 162]& ,
         TagBoxNote->"162"],
        StyleBox["162", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[162, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{90., 0.}, {95., 75}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{318.3382352941177, 334.79411764705884`}, {
           87.6416754170436, 90.08441796500097}}],
         StatusArea[#, 75]& ,
         TagBoxNote->"75"],
        StyleBox["75", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[75, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{95., 0.}, {100., 10}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{334.29411764705884`, 350.75}, {89.32538562527331, 
           90.08441796500097}}],
         StatusArea[#, 10]& ,
         TagBoxNote->"10"],
        StyleBox["10", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[10, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
     {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{Opacity[
      0.5459999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0.}, {5., 7023}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{31.13235294117647, 
           47.58823529411765}, {-92.3339942257262, 90.08441796500097}}],
         StatusArea[#, 7023]& ,
         TagBoxNote->"7023"],
        StyleBox["7023", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[7023, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5., 0.}, {10., 6578}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{47.08823529411765, 
           63.544117647058826`}, {-80.80705510784585, 90.08441796500097}}],
         StatusArea[#, 6578]& ,
         TagBoxNote->"6578"],
        StyleBox["6578", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6578, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10., 0.}, {15., 5862}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{63.044117647058826`, 79.5}, {-62.26033958334628, 
           90.08441796500097}}],
         StatusArea[#, 5862]& ,
         TagBoxNote->"5862"],
        StyleBox["5862", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5862, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{15., 0.}, {20., 5154}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{79., 95.45588235294119}, {-43.920849930628805`, 
           90.08441796500097}}],
         StatusArea[#, 5154]& ,
         TagBoxNote->"5154"],
        StyleBox["5154", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5154, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{20., 0.}, {25., 4561}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{94.95588235294119, 
           111.41176470588235`}, {-28.560232184779267`, 90.08441796500097}}],
         StatusArea[#, 4561]& ,
         TagBoxNote->"4561"],
        StyleBox["4561", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4561, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{25., 0.}, {30., 4039}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{110.91176470588235`, 
           127.36764705882354`}, {-15.038744050996044`, 90.08441796500097}}],
         StatusArea[#, 4039]& ,
         TagBoxNote->"4039"],
        StyleBox["4039", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4039, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{30., 0.}, {35., 3470}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{126.86764705882354`, 
           143.32352941176472`}, {-0.2998039204928773, 90.08441796500097}}],
         StatusArea[#, 3470]& ,
         TagBoxNote->"3470"],
        StyleBox["3470", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3470, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{35., 0.}, {40., 3080}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{142.82352941176472`, 159.27941176470588`}, {
           9.802457328885396, 90.08441796500097}}],
         StatusArea[#, 3080]& ,
         TagBoxNote->"3080"],
        StyleBox["3080", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3080, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{40., 0.}, {45., 2600}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{158.77941176470588`, 175.23529411764707`}, {
           22.236009635812493`, 90.08441796500097}}],
         StatusArea[#, 2600]& ,
         TagBoxNote->"2600"],
        StyleBox["2600", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2600, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{45., 0.}, {50., 2168}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{174.73529411764707`, 191.19117647058823`}, {
           33.426206712046884`, 90.08441796500097}}],
         StatusArea[#, 2168]& ,
         TagBoxNote->"2168"],
        StyleBox["2168", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2168, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{50., 0.}, {55., 1763}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{190.69117647058823`, 207.14705882352942`}, {
           43.91701647101663, 90.08441796500097}}],
         StatusArea[#, 1763]& ,
         TagBoxNote->"1763"],
        StyleBox["1763", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1763, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{55., 0.}, {60., 1469}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{206.64705882352942`, 223.1029411764706}, {
           51.53256725900948, 90.08441796500097}}],
         StatusArea[#, 1469]& ,
         TagBoxNote->"1469"],
        StyleBox["1469", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1469, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{60., 0.}, {65., 1146}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{222.6029411764706, 239.05882352941177`}, {
           59.899311832212504`, 90.08441796500097}}],
         StatusArea[#, 1146]& ,
         TagBoxNote->"1146"],
        StyleBox["1146", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1146, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{65., 0.}, {70., 822}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{238.55882352941177`, 255.01470588235296`}, {
           68.2919596393883, 90.08441796500097}}],
         StatusArea[#, 822]& ,
         TagBoxNote->"822"],
        StyleBox["822", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[822, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{70., 0.}, {75., 665}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{254.51470588235296`, 270.97058823529414`}, {
           72.35876737311237, 90.08441796500097}}],
         StatusArea[#, 665]& ,
         TagBoxNote->"665"],
        StyleBox["665", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[665, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{75., 0.}, {80., 435}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{270.47058823529414`, 286.9264705882353}, {
           78.31651118684827, 90.08441796500097}}],
         StatusArea[#, 435]& ,
         TagBoxNote->"435"],
        StyleBox["435", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[435, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{80., 0.}, {85., 283}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{286.4264705882353, 302.88235294117646`}, {
           82.25380275070853, 90.08441796500097}}],
         StatusArea[#, 283]& ,
         TagBoxNote->"283"],
        StyleBox["283", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[283, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{85., 0.}, {90., 157}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{302.38235294117646`, 318.8382352941177}, {
           85.51761023127689, 90.08441796500097}}],
         StatusArea[#, 157]& ,
         TagBoxNote->"157"],
        StyleBox["157", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[157, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{90., 0.}, {95., 60}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{318.3382352941177, 334.79411764705884`}, {
           88.03022392663507, 90.08441796500097}}],
         StatusArea[#, 60]& ,
         TagBoxNote->"60"],
        StyleBox["60", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[60, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{95., 0.}, {100., 12}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{334.29411764705884`, 350.75}, {89.27357915732779, 
           90.08441796500097}}],
         StatusArea[#, 12]& ,
         TagBoxNote->"12"],
        StyleBox["12", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12, {}], 
        "Tooltip"]& ]}, {}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}, {{{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}, {{{}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}, {{{}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, \
{}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2., 0.},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 100.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.664899952662345*^9, {3.664900029536646*^9, 3.664900043557041*^9}, {
   3.664900217600526*^9, 3.6649002380143137`*^9}, 3.664905867543421*^9, 
   3.664907779357471*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dt1", " ", "=", " ", 
  RowBox[{"Histogram", "[", 
   RowBox[{"t1", ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.664900242674738*^9, 3.664900256266467*^9}, {
  3.664960134026966*^9, 3.664960162731106*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5459999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5459999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {5., 7232}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{31.13235294117647, 
          47.58823529411765}, {-101.47783581811224`, 90.08441796500092}}],
        StatusArea[#, 7232]& ,
        TagBoxNote->"7232"],
       StyleBox["7232", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7232, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5., 0}, {10., 6588}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{47.08823529411765, 
          63.544117647058826`}, {-84.46399574118679, 90.08441796500092}}],
        StatusArea[#, 6588]& ,
        TagBoxNote->"6588"],
       StyleBox["6588", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6588, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10., 0}, {15., 5699}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{63.044117647058826`, 79.5}, {-60.97749911325708, 
          90.08441796500092}}],
        StatusArea[#, 5699]& ,
        TagBoxNote->"5699"],
       StyleBox["5699", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5699, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{15., 0}, {20., 5116}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{79., 95.45588235294119}, {-45.57521842250004, 
          90.08441796500092}}],
        StatusArea[#, 5116]& ,
        TagBoxNote->"5116"],
       StyleBox["5116", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5116, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{20., 0}, {25., 4599}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{94.95588235294119, 
          111.41176470588235`}, {-31.916592149564536`, 90.08441796500092}}],
        StatusArea[#, 4599]& ,
        TagBoxNote->"4599"],
       StyleBox["4599", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4599, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{25., 0}, {30., 3966}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{110.91176470588235`, 
          127.36764705882354`}, {-15.193361142276004`, 90.08441796500092}}],
        StatusArea[#, 3966]& ,
        TagBoxNote->"3966"],
       StyleBox["3966", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3966, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{30., 0}, {35., 3589}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{126.86764705882354`, 
          143.32352941176472`}, {-5.233395755628649, 90.08441796500092}}],
        StatusArea[#, 3589]& ,
        TagBoxNote->"3589"],
       StyleBox["3589", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3589, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{35., 0}, {40., 2960}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{142.82352941176472`, 159.27941176470588`}, {
          11.38415922633736, 90.08441796500092}}],
        StatusArea[#, 2960]& ,
        TagBoxNote->"2960"],
       StyleBox["2960", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2960, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{40., 0}, {45., 2608}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{158.77941176470588`, 175.23529411764707`}, {
          20.68364945471896, 90.08441796500092}}],
        StatusArea[#, 2608]& ,
        TagBoxNote->"2608"],
       StyleBox["2608", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2608, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{45., 0}, {50., 2192}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{174.73529411764707`, 191.19117647058823`}, {
          31.673956088260873`, 90.08441796500092}}],
        StatusArea[#, 2192]& ,
        TagBoxNote->"2192"],
       StyleBox["2192", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2192, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{50., 0}, {55., 1780}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{190.69117647058823`, 207.14705882352942`}, {
          42.55858669648026, 90.08441796500092}}],
        StatusArea[#, 1780]& ,
        TagBoxNote->"1780"],
       StyleBox["1780", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1780, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{55., 0}, {60., 1440}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{206.64705882352942`, 223.1029411764706}, {
          51.54104884889432, 90.08441796500092}}],
        StatusArea[#, 1440]& ,
        TagBoxNote->"1440"],
       StyleBox["1440", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1440, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{60., 0}, {65., 1172}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{222.6029411764706, 239.05882352941177`}, {
          58.621342545503055`, 90.08441796500092}}],
        StatusArea[#, 1172]& ,
        TagBoxNote->"1172"],
       StyleBox["1172", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1172, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{65., 0}, {70., 844}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{238.55882352941177`, 255.01470588235296`}, {
          67.28677662194956, 90.08441796500092}}],
        StatusArea[#, 844]& ,
        TagBoxNote->"844"],
       StyleBox["844", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[844, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{70., 0}, {75., 631}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{254.51470588235296`, 270.97058823529414`}, {
          72.91402497037366, 90.08441796500092}}],
        StatusArea[#, 631]& ,
        TagBoxNote->"631"],
       StyleBox["631", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[631, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{75., 0}, {80., 445}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{270.47058823529414`, 286.9264705882353}, {
          77.82796014787075, 90.08441796500092}}],
        StatusArea[#, 445]& ,
        TagBoxNote->"445"],
       StyleBox["445", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[445, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{80., 0}, {85., 275}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{286.4264705882353, 302.88235294117646`}, {
          82.31919122407778, 90.08441796500092}}],
        StatusArea[#, 275]& ,
        TagBoxNote->"275"],
       StyleBox["275", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[275, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{85., 0}, {90., 141}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{302.38235294117646`, 318.8382352941177}, {
          85.85933807238216, 90.08441796500092}}],
        StatusArea[#, 141]& ,
        TagBoxNote->"141"],
       StyleBox["141", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[141, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{90., 0}, {95., 55}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{318.3382352941177, 334.79411764705884`}, {
          88.1313726168163, 90.08441796500092}}],
        StatusArea[#, 55]& ,
        TagBoxNote->"55"],
       StyleBox["55", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[55, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{95., 0}, {100., 15}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{334.29411764705884`, 350.75}, {89.18813287004149, 
          90.08441796500092}}],
        StatusArea[#, 15]& ,
        TagBoxNote->"15"],
       StyleBox["15", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[15, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2., 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 100.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.664900257830494*^9, 3.664907785002441*^9, {3.664960144043786*^9, 
   3.664960164186406*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dt4", " ", "=", " ", 
  RowBox[{"Histogram", "[", 
   RowBox[{"t4", ",", " ", 
    RowBox[{"LabelingFunction", " ", "->", " ", "Above"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.664900804913703*^9, 3.664900816241959*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5459999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5459999999999999], Thickness[Small]}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{0., 0}, {5., 7023}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{31.132352941176475`, 
       47.58823529411765}, {-98.25000000000001, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{5., 0}, {10., 6578}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{47.08823529411765, 
       63.54411764705883}, {-86.14367749772389, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{10., 0}, {15., 5862}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{63.04411764705883, 
       79.50000000000001}, {-66.6647406176571, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{15., 0}, {20., 5154}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{79.00000000000001, 
       95.45588235294119}, {-47.403445490440205`, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{20., 0}, {25., 4561}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{94.95588235294119, 
       111.41176470588238`}, {-31.27075056044076, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{25., 0}, {30., 4039}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{110.91176470588238`, 
       127.36764705882355`}, {-17.06962618698425, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{30., 0}, {35., 3470}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{126.86764705882355`, 
       143.32352941176472`}, {-1.589856515534521, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{35., 0}, {40., 3080}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{142.82352941176472`, 159.2794117647059}, {
       9.0201789358985, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{40., 0}, {45., 2600}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{158.7794117647059, 175.23529411764707`}, {
       22.078684106892993`, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{45., 0}, {50., 2168}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{174.73529411764707`, 191.19117647058826`}, {
       33.83133876078804, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{50., 0}, {55., 1763}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{190.69117647058826`, 207.14705882352945`}, {
       44.84945249881465, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{55., 0}, {60., 1469}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{206.64705882352945`, 223.1029411764706}, {
       52.847786916048776`, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{60., 0}, {65., 1146}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{222.6029411764706, 239.0588235294118}, {
       61.63507268736382, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{65., 0}, {70., 822}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{238.5588235294118, 255.01470588235298`}, {
       70.44956367778511, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{70., 0}, {75., 665}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{254.51470588235298`, 270.9705882352942}, {
       74.72078307746456, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{75., 0}, {80., 435}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{270.4705882352942, 286.92647058823536`}, {
       80.97798347189942, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{80., 0}, {85., 283}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{286.42647058823536`, 302.8823529411765}, {
       85.11317677604768, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{85., 0}, {90., 157}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{302.3823529411765, 318.8382352941177}, {
       88.54103438343373, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{90., 0}, {95., 60}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{318.3382352941177, 334.7941176470589}, {
       91.17994063673886, 93.31225378311318}}], 
     DynamicBox[{
       FEPrivate`If[
        CurrentValue["MouseOver"], 
        EdgeForm[{
          GrayLevel[0.5], 
          AbsoluteThickness[1.5], 
          Opacity[0.66]}], {}, {}], 
       RectangleBox[{95., 0}, {100., 12}, "RoundingRadius" -> 0]},
      ImageSizeCache->{{334.2941176470589, 350.75000000000006`}, {
       92.48579115383832, 93.31225378311318}}]}, {}, {}}, {{{}, 
     InsetBox["7023", Offset[{0, 4}, {2.5, 7023}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["6578", Offset[{0, 4}, {7.5, 6578}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["5862", Offset[{0, 4}, {12.5, 5862}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["5154", Offset[{0, 4}, {17.5, 5154}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["4561", Offset[{0, 4}, {22.5, 4561}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["4039", Offset[{0, 4}, {27.5, 4039}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["3470", Offset[{0, 4}, {32.5, 3470}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["3080", Offset[{0, 4}, {37.5, 3080}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["2600", Offset[{0, 4}, {42.5, 2600}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["2168", Offset[{0, 4}, {47.5, 2168}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["1763", Offset[{0, 4}, {52.5, 1763}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["1469", Offset[{0, 4}, {57.5, 1469}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["1146", Offset[{0, 4}, {62.5, 1146}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["822", Offset[{0, 4}, {67.5, 822}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["665", Offset[{0, 4}, {72.5, 665}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["435", Offset[{0, 4}, {77.5, 435}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["283", Offset[{0, 4}, {82.5, 283}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["157", Offset[{0, 4}, {87.5, 157}], 
      ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["60", Offset[{0, 4}, {92.5, 60}], ImageScaled[{0.5, 0}]]}, {{}, 
     InsetBox["12", Offset[{0, 4}, {97.5, 12}], ImageScaled[{0.5, 0}]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2., 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 100.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6649008177199078`*^9, 3.664905872137429*^9, 
  3.6649077893767557`*^9}]
}, Open  ]],

Cell["\<\
Each element is distributed similarly, but he distribution is far from \
uniform: there are many more smaller values than there are larger values at \
any location of the tuple.\
\>", "Text",
 CellChangeTimes->{{3.664900089359084*^9, 3.664900112372122*^9}, {
  3.6649001508361807`*^9, 3.66490019424932*^9}}],

Cell["Now, let\[CloseCurlyQuote]s convert these to probabilities.", "Text",
 CellChangeTimes->{{3.6649007607087812`*^9, 3.6649007699308043`*^9}, {
  3.664900872996394*^9, 3.6649008757138987`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xprimeProbs", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "/", "100."}], " ", "&"}], " ", "/@", " ", 
    "xprimeTuples"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6649008787637*^9, 3.664900921463338*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"xprimeProbs", ",", " ", 
   RowBox[{"-", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664900930110573*^9, 3.664900951337109*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.36`", ",", "0.22`", ",", "0.03`", ",", "0.39`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23`", ",", "0.18`", ",", "0.43`", ",", "0.16`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04`", ",", "0.92`", ",", "0.03`", ",", "0.01`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09`", ",", "0.15`", ",", "0.19`", ",", "0.5700000000000001`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.54`", ",", "0.13`", ",", "0.32`", ",", "0.01`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8300000000000001`", ",", "0.01`", ",", "0.06`", ",", "0.1`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.22`", ",", "0.12`", ",", "0.43`", ",", "0.23`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12`", ",", "0.76`", ",", "0.01`", ",", "0.11`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24`", ",", "0.59`", ",", "0.08`", ",", "0.09`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.16`", ",", "0.34`", ",", "0.17`", ",", "0.33`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.664900952382094*^9, 3.664905883935945*^9, 
  3.6649078004654217`*^9}]
}, Open  ]],

Cell["OK, we\[CloseCurlyQuote]re ready to test each of these distributions. \
", "Text",
 CellChangeTimes->{{3.664900975047707*^9, 3.66490098825908*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing", "Section",
 CellChangeTimes->{{3.664901006443276*^9, 3.664901007235314*^9}}],

Cell["\<\
For the testing phase, we\[CloseCurlyQuote]ll pretend as if the {a, b, c}\
\[CloseCurlyQuote]s are in one urn and the {R, S, T, U}\[CloseCurlyQuote]s \
are in another urn. The tokens in each urn are distributed according to the \
given distributions - the one for the first urn will remain the same \
throughout; the one for the second urn will change as we try each of the \
distributions we\[CloseCurlyQuote]ve manufactured in xprimeProbs. \
\>", "Text",
 CellChangeTimes->{{3.664901016262721*^9, 3.664901165474807*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"urn1Population", " ", "=", " ", "xOutcomes"}], ";"}]], "Input",
 CellChangeTimes->{{3.664901262092428*^9, 3.664901295411953*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"CAUTION", ":", " ", 
     RowBox[{"This", " ", "creates", " ", "about", " ", "10"}]}], ",", 
    RowBox[{"000", " ", "sets", " ", "of", " ", "20"}], ",", 
    RowBox[{
     RowBox[{"000", " ", "xprimeVals"}], " ", "-", " ", 
     RowBox[{"WOW", "!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "The", " ", "complete", " ", "xprimeProbs", " ", "contains", " ", "about",
      " ", "52"}], ",", 
    RowBox[{"000", " ", "elements"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"urn2Populations", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"#", " ", "\[Rule]", " ", "xprimeVals"}], ",", " ", 
        "nTrials"}], "]"}], " ", "&"}], " ", "/@", " ", 
     RowBox[{"Take", "[", 
      RowBox[{"xprimeProbs", ",", " ", "10000"}], "]"}]}]}], ";"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.6649013017378893`*^9, 3.6649013084093513`*^9}, {
  3.6649013725083437`*^9, 3.664901383314769*^9}, {3.664901432161359*^9, 
  3.664901449096427*^9}, {3.664901485039641*^9, 3.664901529536446*^9}, {
  3.664902615290813*^9, 3.664902620357019*^9}, {3.664905912974929*^9, 
  3.664905952441909*^9}, {3.664906011613122*^9, 3.664906041008378*^9}}],

Cell[TextData[{
 "Now randomly choose 1 token from urn 1 and 1 token from urn 2; do this \
10,000 times and see what the joint distribution is. And do this for ",
 StyleBox["every ",
  FontSlant->"Italic"],
 "candidate distribution we\[CloseCurlyQuote]ve generated for X\
\[CloseCurlyQuote]."
}], "Text",
 CellChangeTimes->{{3.664902657526651*^9, 3.664902692317761*^9}, {
  3.6649632875894947`*^9, 3.664963323450664*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"CAUTION", ":", " ", 
     RowBox[{"This", " ", "creates", " ", "10"}]}], ",", 
    RowBox[{
    "000", " ", "sets", " ", "of", " ", "12", " ", "values", " ", "and", " ", 
     "does", " ", "10"}], ",", 
    RowBox[{"000", " ", "tests", " ", "on", " ", "top", " ", "of", " ", 
     RowBox[{"that", " ", "--"}], " ", "VERY", " ", "TIME", " ", 
     RowBox[{"CONSUMING", ".", " ", "RUN"}], " ", "INFREQUENTLY"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"testDistributions", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Count", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"RandomChoice", "[", "xOutcomes", "]"}], ",", " ", 
                RowBox[{"RandomChoice", "[", 
                 RowBox[{"urn2Populations", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], ",", " ", 
              "10000"}], "]"}], ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@",
          " ", "jointOutcomeSpace"}], ")"}], " ", "/", " ", "10000."}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "10000"}], "}"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.664902706109396*^9, 3.664902809559908*^9}, {
   3.664902868938963*^9, 3.664902907677648*^9}, {3.664902943348021*^9, 
   3.664902978534668*^9}, {3.664903051326206*^9, 3.6649031125611877`*^9}, {
   3.664903193152874*^9, 3.664903233870202*^9}, {3.6649032828680696`*^9, 
   3.6649033020647697`*^9}, {3.664903338037545*^9, 3.664903400898087*^9}, {
   3.6649059885274*^9, 3.664905989829445*^9}, {3.664907850511187*^9, 
   3.664907872257403*^9}, 3.664908080772202*^9, 3.664908173312146*^9, 
   3.664908285725535*^9, {3.664909761618154*^9, 3.664909764134407*^9}, 
   3.664960955448472*^9, 3.6649632617112017`*^9, {3.664966245130414*^9, 
   3.664966279188903*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"requiredDistribution", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"1", "/", "12."}], ",", " ", "12"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.664903269726948*^9, 3.6649032776824408`*^9}, {
  3.6649033081758413`*^9, 3.664903320006658*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.08333333333333333`", ",", "0.08333333333333333`", ",", 
   "0.08333333333333333`", ",", "0.08333333333333333`", ",", 
   "0.08333333333333333`", ",", "0.08333333333333333`", ",", 
   "0.08333333333333333`", ",", "0.08333333333333333`", ",", 
   "0.08333333333333333`", ",", "0.08333333333333333`", ",", 
   "0.08333333333333333`", ",", "0.08333333333333333`"}], "}"}]], "Output",
 CellChangeTimes->{3.664903320940177*^9, 3.6649078990951557`*^9}]
}, Open  ]],

Cell["\<\
What\[CloseCurlyQuote]s the Euclidean distance between each of the \
testDistributions and the required Distribution? \
\>", "Text",
 CellChangeTimes->{{3.664907918800666*^9, 3.664907932316293*^9}, {
  3.664908000959544*^9, 3.664908017602611*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"euclid", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"#", ",", " ", "requiredDistribution"}], "]"}], " ", "&"}], " ",
     "/@", " ", "testDistributions"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6649080291768427`*^9, 3.664908058501895*^9}, 
   3.664909461511216*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Sort", "[", "euclid", "]"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664908215069777*^9, 3.664908252081827*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw813dczX3cBvBC9gghs+yd7BAue4UoKkKlJaWpvedpn+rMTkg2RRKiUDKy
Q6huIzs7O/s5z+v5Xc/9z/1639/zPZ/z+V2/675vfe3clzs00dDQ0B6sofG/
f/+/vxqm95ec/qHRpGS68A/wqOJU4elWdEvktA7INltAa8P2a+qzGz60Du4O
qznu70vrwnTp4SHyS3Qv7FriWna+htZHxVcsdvlF94NX7ZKDkzueEjwAJwKT
Zi7pSw/C+tgqp6fj6SGYuqtmz9559DCktWh6e+QCegRebZfoO62gDXBPz37X
xEDaEMqLSw5FB9OjUeff0Xl7Ij0Gx9+ZJvqn02Ox74r5ndkZ9Dhcu/3X86mC
Ho985z/jVfvoCShwOdTcJo+eCMnNzKNPymgjfNg99czqc/QknP3kF9n/MT0Z
jwPN/k77SE+BQ0VG6okvtDESjxzcpdQ4LXgq5i9+qdekCT0N2T1aPKpvR0/H
jhfSmw/0aCAwVv/waAPB4YB8yYsuGw15PgMh39yHfp/M8xkY9XZt/t35PJ+J
CnlJ2ltbns9EyAdZN3NHns9C7RGLAdM283wWMjp43ikI4vls4GLIYftons+G
846olUExPJ+Dbv1Pn+gfy/M5eC8517p9PM/noodjzeSLdPhc7JrSrfmZJJ7P
gyRy4pV9yTyfhzHPBywblc3z+cj3T3TwPcjz+YiMS5i+8zDPF+DsmfPHLP/j
+QIYZmFNJq2xEMvHF7WresfzhdhycX6uxweeL0KfV5c2nP7I80X4HJsUn/CL
5yZo+3ui7SU63AR3E4dXXGl9RjhfDN/uuebHuggOX4xmG3Jr5/Tm+RLcKlrw
ZsRoni/BmUkr/I5M4PlS5ARYFy+axvOlaHtmim2QBc9NIVrRLWyCvWCYonBK
s5O/E/l5U7S/XttqvlhwqSkCr3+qHCrh/WXY4Nn5jjONZdjad/BKLRnvL4OJ
74JBLejSZdDdJo58tJX3l+N0H9n4um28vxzv/XLOb83l/eUIs/H16l/A+8sx
NHTf1BvFvG+GqFE5ec9KeN8Mr4uL01qf4n0zLNWreTqtnPfN8NTw1aWtt3nf
HB2/vKnfS8Mcm+7+MPx1j/fN8e53RsHrB7xvjomr983795r3VyDqkTyn5C3v
r0D2bGezM3T4CnS8PW1W6EfeX4HNQy6mX6E1VqL9uhNXZ3/i/ZW4Otlfrtu0
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
5p759iPc3w/j5yr/WBRyfz/M/4Y1bse4vz8OuYcP9y7h/v4Yv2nNkVOnuL8/
bOxtNced5v7+uOc75P0SGv44eiX+3R3a1B/53gMdpKXc3x+GP52mbizj/v4Y
ZLdvhMZZ7u+P5i3eDg4q5/7+CFCZxtif5/7++PT428mZF7i/PxTD/bIPVnB/
f+zscUl0jK70R72Wl9d1us4fPbo4+va9zP39UXYmzMWf1gjAG5V0oPcV7h+A
BYvmNjG6xv0DkHhx39Y5tGEAbK0kJiE01J8/O+D+0hvcPwC1t9aFd6rk/gHo
3NGxvpj2CICp7qFpO29y/wA4mP3n2OUW9w/A8WNmyru3uX8ApkSWLfxB56vn
VbcL8rrD/QMwy/r7efd73D8AvcvKHXNquH8A7B1OFVyhGwJgmdnzpcl97h+I
xUvujIp8wP0DEfrt2cjeD7l/IMrPiIefoQ0D4bWvmWj/I+4fiCd2JUlzn3H/
QMz33Wsz7iX3D0Th8P8Ona3n/oGoat3izOLX3D8QKr1XF/e84f6BcLry+E3K
W+4fiEdlo4we0PmBGPO5/GP2e+4fCOfL446Y/OT+gXBV9DApblIu7B+IfyVP
9nVpKrghEB0LVy3rpyVYIwhDDy38Nr2FYO0gxKmyDy5oLVg/CEotzZOG7QQb
BiFlXe9fh9sLRhA6pfVNLaZNg2D3bOaKptqCbYJgUFz0dhTtEYQPvfNmdukk
ODwI677oPH5Bi4Ogd6HpWdfOgrODsLS89GgknR+EWRevNBnZRXBpEHRFsXpN
dQVXBqFH0zT/NXRdEA77j65x7879gxBgfTDqY0/uHwx3ZW5yeS/uH4x2jp/O
dunN/YOx/cS5+260YTAOphycfJVGMCpiQ6f/o02DMcJ+Zcqg/tw/GMWeBq22
D+D+wbA8P+vZlyHcPxixBt9/OQ/l/sHoYztVsYvODkZykf8kqxHcPxgfg5G7
eyT3D0ZIrs6g3wbcPxir2oV2zBvD/YPhUdZQ/5duCEZe0qotx8Zy/xB0e7Nj
WPE47h8CkceM2+7juX8IWuz9FNVzAvcPQa7x69pgGiHYnqBoqaJNQxC0M+eF
3UTuH4KGa8sjL0/i/iFoUu5c4DWZ+4dg49Uxq6NocQia9jdbMXwK9w9Bakqd
yclp3D8E8zYV3qqhS0OQMP+n5ubp3D8Erbu12yqZyf1D0HnOa9Hl2dxf/fs6
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
9l+GTke6dBpqxv6r85xrap5Bf1H371CZ43W6UYbuz20/J5mz/zJMiPyiV7uC
/ZfD6ln9it4W7L8cU/Rr2xrQLeXq33/X0o9uK8e6ghmJh2htOZIXTei2yJL9
l2Np2d64ZbSuHHPnPa/IoXvJYXwrZUwLK/ZfDr0vDaFaq9h/OXIeTR07nB4i
h9ay85lL6BFynD03P6KONpSjsTBuya017L8cP0UTXN/SRnI8LTc4OnAt+y9H
n2am2wbTkGOa/reTXuvYfznCIsYMuUrPlyOhfYarlg37r/49jsXbF9KmctRo
ulfl0+ZyNHO58bCzA/svR69Oi/ab0dZy9Pu05ZulE/svh8X8uKjftL0cKYnZ
Xls3sP9y1JX8O+Diwv7LYffcZKwr7SFH7run9tc3sv9yHBk6wrqtK/svR94t
/YAaN/ZfDk3L4IG9N7H/ckiPKd9X0tFy/CkretjUnf2XY3C3Pp8GebL/6vfD
PrFhDi2W42+bA03v0xI5Om5wdNL0Zv/leO19++deH/Zfjm27mj/9bzP7L0eH
im71+3zZf/XzDE3KM/Jj/9V5HMwp7+XP/stR8mJM9Ug6X/1+3XfonE8XyqFw
MN/eJYD9l+OgdvL1EXSJHCduz+gvokvlKN8dOGd2IPsvx16XRza76Ar18xUf
/882iP2Xo/3sogMzQ9h/OZZ83fZjIV0lx4G34lH+oey/Ov8bJ+bm0ffl+LHM
JaBdGPsvh+7ye2NAP5PDvn1kRotw9l+O6M27qtrSb9XvR/Gm0eMi2H+1/W51
cKS/yCE5f3T1RbpRjn///quRRrH/cpzvOHTrA1pDAZ0lack2Mey/AlbuNd02
x7L/CtxY+te+SsT+K7DS/GnbfonsvwJHfEyvTKV1FLg4buGXG7SuAgN/r0rq
n8L+K9Bp98W2LrS+Ak0D5oa9oQcokJRkMH+JmP1XYIpGr1OqdPZfgSYuq5Yv
y2D/Ffjdd9eyJ1L2XwHPsGg/Cxn7r4DSZHyeD22sQP1JM8cWcvZfgYVBGj1m
0bMViPrV3rSenq/Aq9O7Qp0V7L8Cmy6fH/ueNlXg8j0rUxMl+6/A7LKgTotp
SwUMv1gbOdPWCqj/NPvrGm2jfp5j2g9omcn+K+AhmZDck3ZW4O6xyZ65tKsC
4W/7dj2gYv8VKAi/se53FvuvwPAG3UGaW9h/BcoeDbjWlA5WYMSa71216HAF
VoeZiXS2sv8K+NRP+DFqG/uvgM24yQFj6CQFAnu1LQ6nxQqUlE28+3c7+6/A
6AvuI7Vz2H/1vvcfjhxJZykQGzXmde1O9l+Bqf0G+nyidyqguLbQNXU3+6/A
MmW43hU6V4GdfpHD79L5Cux3iX9incv+K/DQpPzyGrpIgf7+QRuf0SUKWPbU
yOqax/4r0Kymw09xPvuvQGP6ufQWh9l/9bxxDQU76KsKXAt0WDimgP1X4Nm0
kIKHdJUCTzfuEM0rZP/V749x7v54+r4C7Y52qUil6xQ4NOnfyAVH2X8FxJMP
LtlzjP1XYPfu5tO8T7D/6j4ZWrSrpRsUMN5g5r34JPuv7o/Dnp3vitl/dT7n
736+dIr9V6DUJ/3wiFL2X4ljE57kfipj/5VYE7bJQ/Ms+69Ev3Uec43otkpc
/ri33ofWVsJ29wyPl+XsvxINo94/1TjH/isx/knzt250LyWeOxl8/Ezrq+e3
tynYdYH9V+LPQv23R+ghSlTv3nrM6yL7r8SG609n/KENlRiX7HG6TwX7r0Sp
be6tR7SREsNGlG7Uu8b+K9Hn1e1FF66z/0r8+zZhkM8N9l+JoKMeOxNvsv9K
DPjWK+AEbaKEUbsxa9rcYv+VmCr9ZRZCmyuRm624MfM2+6+Ewr+vVEpbq5/X
tG0FM6vYf7XXB2xfTdsrof8w1HvdHfZfiSdz25rb0q5KvC0w8tlJeyjhoQqN
+nyX/Vdit9aCsnnV7L8S5r0eme6mg5Ww2ug+o6KW/VfCt/fVJ/fpaCXCN5j4
J/zH/iuRaJbc7jqdpMS0i7rGxvfZfyUevO0aM+MB+69E08/3+r2nFUoU20y6
3e0h+6/EpU8XH1yks9XP72bPqFv0TiVKXr9IOPKU/Veq/7wx+GYFnav+fXn/
VXR8zv6r5xdPnD2DLlQiP0uUX00XKSEKaD9+9Qv2X4ngDNfcpi/ZfyVMtbVf
r6pn/5V4cSrMt9Ur9l+dd9HUmoGv2X8l5OYdqgzoSiXEX/e8U9FVSgyae/j8
0Tfsv/r5l8zvqfmW/VfCpHNWVie6TokvWpIREfQzJQ6bdxanvmP/1c9nmN+W
Vu/ZfyUWH1RJutANSiyJ2LHlK/1FCSfbRu/VH9h/JczqQoNNGth/df8WRJ3Y
QWtkosK17F8Z3SwTddrfNrp+ZP8zEdd6UID9J/Y/E9t3jVl5ktbORKmrYfsS
WicT6Tfbrz/wmf3PxNshW/Onf2H/M9HVunNh+jf2PxNG/eck76QHZKKDVf+x
1d/Z/0zcz3C7YvWD/Vef77Q9fZY2zMTTxreF9j/Z/0yInr/f3+0X+5+JSw81
PBz/sP/qzy8Ki/n1l/3PxOqXYVVN/rH/mXDsWqJhRM/PhFWHSzOnaVQI/c+E
zovcqBOagk0z8dgztl7RRLB5Jn6+dbhd1VSwZSZibqY2C2sm2DpT/efFZ+Gt
mgu2yUTYtVmpL1oKts/E+D1Phj9tLdg5ExdtD490biPYNRNnsgZmbqQ9MnFB
lffWn/bJhL3zW99C2l/9e7osLsprJzg4Ew7ysx1q6fBMBB4TVde3Fxydia/u
dite06JM9JK6y9t1EJyUiXGPrTsNocWZsN2XObWHtmBJJn7bnFg2kVZkwtqu
fucqOisTayKe9J7TWXB2Jv4cyvmgoyN4ZyZmBs0qXEDvzUTV4A+Bc7oIzs1E
RMGshyvpfPXzvK45IY8uzMTh+rDBfl0FF2VixxWNE+/okkz0C7qqkddNcGkm
RpjpTdygK/hcJs66RuXO7S64Qn1/0qfiYPpqJq4lX+8h7im4MhM5pzyHRPYS
XKWeH/Z8ZUYfwdWZmNvGbfcl+r66H4vOFLyk6zKRO2xfxvS+gp9lImNin99b
6PpMFG8PLBD1F/xW/f4+nPchk27IxPw9paXrBgj+komrP2M/zB4ouFGd19XS
fl/o35n47upl9o/WUKFtqu5Pw0GCm6mwI+Pq74V0SxWmv0+eMWeI4LYqhLac
fvEXra1C13e/68KHCtZRIQzmEycNE6yrguJxVZY93UuFAWv6uPrR+iro3RD9
ejZc8AAVFs+asVhjhOAhKhwoTloooUeosDR2eMvNBoINVVhoelgvx1DwOBWK
Z1z30Bst2EgF28W5O3THCDZWoTbA6+9DGiqsKyiowljBs9Xf73e/mcV4wfNV
qJ5uk3hgIvuvtoHW5D5G7L8KBuvjV5TS5iocWuU6+Tttqf6+5wNmmUxi/1XQ
eO5Wvpy2UWHz7G1hhbS9Cu18Vn1pN5n9V6HPhMebxhqz/yo8MAvq03wa+6/C
m5p3rWtpHxU8kr4fFYP9V2GTrbzg1gz2X4UeJ5QWPrPZf/U+N6eYVM9l/1Xo
v/alst889l+FaVNDlLPms/8qjLVrvyeCFqtwybxr0OgF7L8KXZSm+zxphQoR
Kyw1zBex/yr8Z/FgtR+drcK1E5L2vibsvwpffi84XEbvVeFrnP7r5YvZfxUu
mrZsP3YJ+69C7NpOnbcuZf9VaIj5sOGvKfuvQnxIu5fOy9h/FWJW+TexWs7+
q/DKIOdILH1OhcvuJp6rzNh/Ff6ldhnhSl9V4caAxx+3mbP/Krhpmi18S1f9
7++riN28gv1XAZqN3wPp+yocC15lobuS/VehWbPPcmP6mQru575I1luw/yp8
TrF0TKDfqn+fVbf1oZbsvwqHP7XeYmnF/quf96+OyxtWsf/q/Hwmhr5ezf6r
EBxifSvWmv3PwmS7vJSha9n/LGRHbF00nW6ZhZa/onIG2bD/WVDWn62It2X/
s3Dr7qeUC7ROFtpPfNQR69n/LKRsNnziaM/+Z6HPmsriLFo/C/dnPhpg58D+
Z2HeuWbxxY7sfxayBjwZ8B89Igurpnx9v8iJ/c+Cm+jtSX1n9j8LfYd+nbyQ
NsqClY+h8gFtnIXDE168bL2B/c/C3E4lIffp2Vn4PS9qZqYL+5+FsCKx5qSN
7H8W7lwPjvpGm2bB7GaLMQPd2P8s9B+8qatiE/ufBeut2nkFtHUWNM9FNV/m
zv5nobnoxDpv2j4LNk2DY1t4sP9ZuBq9/8gsT/Y/C29zdu9cTXtk4eDQ4IpJ
vux/Fo7In8/ZQftnYcHnSSvu0sFZ2Pz0ca6LH/ufhQf7dZaL/dn/LGi9ca8r
p0VZSPzk+qpJAPufhf/hub7jav7//48n2TsrKyRCJL2zEu4ISUiRJCTZoWzJ
SnaSbDp19pbsiGQnIStZWSErWVnh+/xdfq/758/r5eSc1+v5fD6et/d7fvC0
DgF0fCLCWhQfKR/J+U9Ew/LBDYvp3YlYUqnsZJelnP9ErD6wumgCLU9E58cT
vjSL4vwnopaDvGA4rU9E7RsDJm2gzWI/O/v5/aBTxfOXvuhWdxnnPxGyVc5T
bOk08fuNOura0acS8bmOIiqbzhT74drLKT6a858Ir4n9RoSv5vwnQh08oUY+
nZOIOZbeh2fEcP4TUb3Toei59J1E/F0cqZy3lvOfiLHfl9rdoB8lou7b1LF5
9NNEfLj9sEendZz/RFzNzLseQhclwiV5vPew9Zz/RLx+2nnfmg2c/0SUPzG4
wpdNnP9E/Jzu9Gd8LOdfnJ/KR3cHb+b8J8KgzPo4bwvnX4Z61jZtmmzl/Mvw
2P+DTz5dWQaLdJ9zbRI4/zI0nVU3cMsOzr8MmtSz1fvt5PzL0HC5/EIobSOD
Z61Kc1R0UxnKhX8e824X51+GKw+XXqu0m/Mvw7VXe5c57uH8y2BzGq/j6Q4y
HD4b8eoq7Sw+n9Ivus8+zr8Mu812nw7Q3WVwjO16qox2l+HrPpu7vomcfxkS
mgW22UB7yLA0IOF7CxnnX4Z/FRq8HEN7yzDdMHvmRdpHhkl1Q269p0fK0HzW
zWN1kzj/Yn2nT5C1oYNkqHyrctAuOliG/2RdinPoUBlWn21c8aGc8y/D4lEb
h1RUcv5lmOoztWUgHS7D2LIued/p+eL5gxo5lldx/mWoEjrCoiIdJUOSfXCM
jF4pw51e1+T/1Jx/GSqGaG/t13D+ZfCb9XdoBh0rQ/L2J6MCdJx/GUY93++x
i94uw4qzS+3q6Dn/MtSt/n5XTzpRhj2F4cfrGjj/MgwbP1CVSatl2HblhWmr
kfMvw/2bnUvOmTj/Mmy9EPKx2n7Ov/g+93OlI+kjMoTd91C+pNNkuGTr/r1m
Cudfhi6+sfoWdKYMD088sfiPviDWP+NocbkDnH9x3rJraFrROTJoR075HUvn
ylD98bJUA31HhtY3ZA636XwZXh/QJhbRj2S4dypCfu4g518Gt8o/qjc9xPmX
ITO6sILqMOdfhvcnIpob6fcyfJJ9rd/5COdfBldz5x9hRzn/4n2WOs1+RP+Q
wWXwEu8fxzj/4nm0Z10mH+f8J+GS6430RbRVEqZf6+ManMb5T0KzWgvO/qKr
JyHsTvN2TU9x/pNg9W9y9nS6XhKc/haGuZ3m/CdhUcy67KMZnP8kdLoQlFjr
DOc/CRmR9y+raPsk7DtapUoe3TYJj6bNrfmb7pCEa21NDQ5kcv7F90fGO9Y/
y/lPQuwNu+DrdPck7LjWd3Xbc5z/JBw2qnrG00jCj6fDyzmd5/wn4faWxuM+
0J5JyAwJyxxzgfOfhF3+vStNvcj5T8L5pZ0c+1zi/Cfhv5WDO8rpgCTcemdq
OeIy5z8J4XGZI5fRwUkY8zlyUwYdmoRTk8PV8izOfxL6ex6beJMOS8Ju/wk/
btHhSWh6MT/sLj0/CTd+fW1y4ArnPwmLz07WrM7h/Cch7cqa42HXOP9JGFT/
vu1POiYJ38oPnqS+zvlPwuVed++bcjn/SYg59tIjl45PwqEf+zeWv8n5T8LS
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
qukpSozYcm1Y3Q/svxL/eSVc2UjPUEK3pmnjeDpMiS/bNhcn0LOV8Nrx5p6G
DlciP/Vn9IJi9l+sv/n2stMf2X8lrF8EtXhELxT7HTmytMYn9l8JK+/zaTo6
Uolcv7PJWXSUUvz3whhlzc/svxKt566aZU2vVGLSOHP4OTpaifu9lqVcpmOU
iG4d9WzNF/ZfPE/5hLqbv7L/Yh46V73/4Rv7r8TkB6G6CaXsvxIp8cWr5tBx
4vv33vLcTMcrsbTxmL6/6AQlYr94jmv0g/1Xwvm/4tO9frH/Ssy2u98pj96t
hNOGNatjyth/JbavXpezg04U523161ifP+y/Eh/fLbnzgpYr0Ta95bYjf9l/
cR95+JuzabV43mB1O4t/7L8Szyer+1SyyP7/1ovzMulM44rlJBvF55rSweG0
WYnTQ7osiaRTlJjSaHNGFJ2qxMWXzp0T6UPiPLcrafyJPiLWW+m6odBS8jFx
frruWzPWSnKaeD6L3X7L6ZNiPU6NzWhYUfIp8Xtbmpk60xni+8bJXxXTmUpk
NvQs6VxJ8jklQqba+SXTF5RoZb9pjJK+pMTtsqOFuXSWuD9mBjXbW01ytpjf
WMWXR9Ul54jzmD6uSxl9XYmr5jVj1taQnKvE56pHNzSpKfmWuL9HZNu8oe+I
+6xO14Wta0nOE9//r2cFVzpfiUZDy5X2pR8okTis7PUU+pGYlxqf+6yjC5Tw
y39216O25KdKPOk2Ie41/Vz0qqN1RK86kgtF3177PllRV/IrJYYMWhNXQheJ
++Zk0a5G9SS/FffzYlXmVPq96MO75aU5dLEShrpLkxwbSC4RPap5o8c3+rMS
Ey2O/VvYUPJXJXYFNOx4mS5VYvf02rEVbST/UKLm3TrjAuhfSox7/OXiqsaS
y5R4v/z0s/NNJf9VYuBtl/clzSRbqNCt3lfXqraSLVW4Xnn8K1vaSoVWWZne
f+iKKrhHvzkzu7nkyipUivcZVqmF5KoqxPl2l/2hq6sQ9rf/ipCWkmuq8Fv9
5MU6urYKpsi0RA1trcLRZ5GLzthJrqdC1M8Fl032khuosOmxs/+c1pJtVNB1
GT7pK91YBa8V1wcHOkhuqoLtpbUfFLStCp++/Ry0uK3kFiqE1ImdENNOsp0K
d3bazgp1lGyvQp1DXS2ndJDcRoXKM7dvNdNtVTi16WecrKPk9ioEnFx8x8NJ
cgcV5vo+SxlMO6lQxV4TM5N2VmFK3+qXt9EuKgyu0yS0hHZVoWr6zeqTnSV3
VeHxvk3Bp+juKowuarXsV2fJbios/lBZCxfJ7ioYii88Wkn3VmGfTaTVzP8k
Q4VBVVfVWUr3U+FMekRGFVfJHioEf28/tSE9UHjO7/lBXSR7qvDE4mXjzV0l
e6lwzkl3c283yd4q0WPblQ26Sx6mQvXhRYqLtI8KzWs9fnOjh2RfFca/7Tlr
l5vkkSrUjBj08Cjtr8LdWO8nPXpKDlChcbbNeCMdqILDzvZts+kgFdZllfiM
dZc8XoX3a+ImpNLB4n0j0mvV6i05RIWkiqUejfpIDlVh258zHxzoKSpYuo14
5ElPU6HhseiP/n0lz1ChS5eeKVPoMBX2PH3/7zk9W4X/Vrc3Te8nOVyF7YMe
Xkmj56pgrbK52KG/5PkqbLg3rOIQeqEKLl+tAr7Ti8V8uKVttPCQHKmCz75c
q3J0lArDD74c04FersLsss5nsgdIXinmrXPt/JuDJEeroJh85U6pp+QYFeZc
yfwcO1jyWhVq3wrfes9L8noxz7XzdjYaInmjCoWx9RY9oGNV6LWv/tjfQyXH
qVBreehJ1TDJ8eLvrdKmHKQTxPz26lTff7jk7Sq8KvvdzMtH8k4VSi5a9blJ
7xbvU6H+0SJ6rwo7i+vn/BkhOVGFuv6F+1b6Sk5SYeNtu7b9/CTLVViQ6tzd
j1aq0Cm7tW0mrVZht+zfy/EjJWtVuH2mtOF0Wq/Cw0WO09bRRrEeEXdnPqHN
4vNnO0bZj2L/VZCJ/8Byo1NVOFC6b0QpfUgFVYWdnm6j2X9x/sxLz06kj6lQ
7Wdf7zoB7L84v/MSIo/SJ8V9ljl1XblA9l+F+kNH/es5lv1XoWDXpv436EwV
/AsOnm4UxP6r8ODieofO49h/FfKPz68xlL4k1mNnn/sH6Swxr5PrVrtHZ6vw
w6VjaDGdo8JWrFozejz7r8K/ssUtd05g/1XQnOnlGxDM/qvwvPfwWx4T2X8V
mvT+74QXnSe+f7Lj+jw6X4XM4RvTLSex/yqcD+2715p+JObxzvfsZnSBCv0r
l7lVD2X/xfOvGlvahH6uws+Ln3+b6EIVskJOxX6iX6nQsUBr2W4y+y/mY6vj
gU/0W3F/OL3uEjmF/Rf3T/nIa+7T2X9xX9xTfJ5Cl6hw4XCKywP6swrD+g61
cZjB/qtQ0Ta6UchM9l+F1KN674ww9l/cj+7z39Wexf6rsCb2t01XukyFEQs8
MIf+q8Kfogsvw2az/2oYp1zqeIW2VOP3R0er2DnsvxrlN1kb9tMV1RhunBb7
MJz9V6NfNUXVwAj2X41rI2c3HzeP/VejzeDhL2Lpmmo0t16+YOR89l+N+A5G
zQzaWg3PgOrOtxax/2o8u7d/RzHdQI1hiekN2yxm/9X4PmaJsjfdWI3tnTKq
HKKbquGaEnmg8RL2X3zf47fKfnQLNXY1tDidQNupoX6zesZJ2l6sj9ukWfl0
GzVqZ7dumh/J/qvh6PG44qel7L8aS2emGiyj2H816k7o3iqEdlLjyeEdSTdp
Z7Xo7QAHm2Xsv7BmSegW2lWNjx1G35LTXdVw7zlx6dLl7L8as2a+n3KZdlPj
lFfXVT1XsP9quITe7PKT7q3GzqFdvieuZP/F/u74ZSy/iv1Xw0Jm36M+7aHG
2IPVllhGs/9qrFo7enBv2lONkVmNBnnSXmrc2tNrzkbaW43J7Zt3O0EPU6NW
b7ekWqvZfzWu57eBNe2rxoi1RRoHeqQam/pOPT6N9lfDpsDhzR06QDyf3Df6
xBr2X401gbctrqxl/9XoVnvzjm3r2H81uoQPDR67nv0X+/tud+gKOkSNtptM
DYduYP/VeNi7VWo6PUWs10uLdvEb2X81Wnm2exqwif1XI2Zgg0GVYtl/Nab/
N6SwOz1bjQHHe19Zvpn9V2N0v8PzFsax/2rMrfImYT89X8yHeZd31Bb2X43X
3ZcnnqAXq2G548rDx3Sk2J9747rO3sr+q5HWJP7mUnq5GnGDKtd9Qa9UQ6Oy
X2KfwP6rkT5J39ufjlGjrPlqxTR6rRoe/Uef2UevF/Owcsmg8/RGNXy7Vwjo
uI39V6Ppv+nB8+g4sZ5/m3wYs539V6P1nXqV++xg/9XYlvdszBB6uxqvHky1
SKN3qlG5n/pt0E72Xzx/xwvtAnax/2ocun74bAGdqEbjyH47Lfew/2qcSM+7
P4eWi/Vr6ut2h1aK31t5Jdomkf1XY0bYwaNnaa0a+f1dNjvK2H9xnm3/uxdK
G9Uo/ln75H7arEaVf4M3p9EpahRt+jx5QTL7Lz5vHJwZJGf/1XB+5LBiHX1E
jXJ9/EM7K9h/8XuubWLd6TTxPsr02U+U7L8a86etCIxQsf9iv0ad2nuDzlAj
o9uqfmVq9l+8j+ZEkaWG/Re/l727nRN9QY1j1jWzO9OXxPsN8VS/pLPU2HrE
/3eYjv0X5z3pRD0LPfuvxvKrXTfUoa+L92t/vNFCOleN4PyjH1/St9RITRlw
45WB/VfDqn73NXOM7L84v6fv6J/Q+aI/z5f/+GRi/9VIGtxP88vM/oueqO9/
GZvC/qsxM8NnTj79VA2VZ9OYiQfYf/E8M9r9TqcLxXpuqr/vKv1K+OrHBYUH
2X81WmDa5Q/0WzXWje4UU0y/F/PbPyS/wiH2X/zeZ09tzGH2Xw2HNtkbN9Cf
xfzsU1Q/Tn8V3z8yvHr/I+y/6JnVzE6L6B9qLPLJr7uB/iX6MLFChx1H2X81
gjJc7x+k/6qRmOp07ShtocGHOrUqrzvG/mswMuWh73naSoMjPocd9x9n/zWY
sbF8v0d0ZY347/W9Ca/oqhr0m3Clkm0a+6/BkJ2p7RueYP81GPZ3t4WWrq2B
5fl3a2/S1hr4bXfzyzrJ/mvg+2fUyUHp7L8Go+dYxD2hbTRISe0xOe40+6+B
XHHea2AG+y/+/md27RG0rXg/raHcPrqFBrNrT9mUSdtpkHu55quBZ9h/DRxf
DSq7QbfRwHtmZYUsk/3X4M2G27dT6fYarJn+ZZD9WfZfg/i1Z1eHnmP/Ndhc
/u2ps7SzBlW9frlZXmD/xXqUGPZfp101iB0UNiD5MvuvwSfPA88f0901aNah
Up2YLPZfgwvPJj830O4aTB2Q7X71Cvsv9udJJSeXbPZfg8vVXbNG0v00GFzx
5kMZ7aHBua4TXjTKYf/F/uzWb2lGe2pw77v8S2/aS+xHLbuUmtfZf/H7o1Y/
r0MP06BS168b3WgfDWY2vpOSTPtqcKKJ5c3/eaQGLS0uBqpofw3az3KJ8L7B
/mtw+oGy0mI6UIMNG3edvk0HabBT5vqgOJf912C8447r5W+y/xq8rjP9Ygod
okHgZr3uLB2qgc/KVnVu0FPEPEz2nVlIT9MgrO/wfta32H+xnsMtM1fSYRqU
u15vUtXb7L8GJelNL52hwzVQrj058+Fd9l+DUbfDfIPy2H8NKqR/O/ORXij2
29OrotM99l+DFfrDyk90pAa3Vv7YUPSA/RfneaQxxPoR+6+BbnzGOTd6pTjP
imdN19DRGhyydp2dSMdoUDsiJv0KvVas34svoSsfs/8a5KUN+j23gP3XQLV8
5y/3J+y/BsO/zY7uQ8dpIBs/4t5yOl6DViUF+3fTCRrgcJPJenq7BlPUZflH
6J0a1JGN8DlK7xbrH/7o2yV6rwaTXFe8KaETxTw2aJfa9xn7r8HjgbERCbRc
g+gexszU5+y/BvO3/50z7wX7L9Yn25wYTWs1OLOomre2kP0Xv/9maOQd2qhB
QZV/fVu/ZP81qJIx2GigUzQIWbB08tVX7L84Dz3Ofyr3mv3XIH36MUylj2iQ
NcNtyH76mJjfxff3VSti/zXo1vTM6B5v2H8NRqTs2RVInxLz0r3F9LC37L94
n6Sg2NV0pgal0ffO1X7H/mswruaslg+K2X8N2px32f6FviTmpXrLbz/pLHGe
7n+80KGE/dfAYuGX7B2f2H8NDjSunHqevq5Ba6+sjzU/s/8aHL/3x9GNvqWB
w95qIRW+sP9ifucNzV1N54n71qZS5Kdv7L8GY22ccqxL2X8NlnR4NWcg/Uis
1+rYA4voAg0yPg6Jf0w/1cB2yQ7H/t/Zfw2qF5c26PmD/deg6VqHLrLf7L8G
bjdnfzlCF4n7eePXOVXL2H/Rkz1fXRLp92JefHpeOkEXa3D7Xluz3V/2X4N1
bWZ19/vH/ov1bNU1taPFVan/Yj86Ne4XTJdqMKD+sZYp9A8Nnp/4teQj/UuD
FvNty6qUk1ymQaeeZQFN6L8a/Pn6x38lbaFFaFYt516Wki21aK2eV8W/vGQr
LSo+dny1kq6oxa2cbQ4WVpIra+F2Yf0cB7qqFkPCV9XpRlfXIuTK275H6Jpa
VP+99cV5urYWzYtvb1hbSbK1FmOCtqxaUllyPS2q1N4+vksVyQ20cFn0xVFN
22hRZOieeoBurIXnaUX7plUlN9VCf3KC33DaVovh89bfn0m30GJgO5ulgdUk
22mhia7z5gptr4X1McWDd3QbLXa0+Dc4qrrktuLzHn3+WdeQ3F6L8rm5XpPp
Dlrk/rPftZ120mJqf5sPn2hnLSp3+lWxlHbRYpRlXjmfWpJdtbi/dKLsC91V
i2oxI8vPri25uxbLQzNanKXdtGgQUGPQDdpdiz1PDOrfdG8tLH+v3dStjmRo
8Xe4oVIZ3U+Lpwm577vXleyhhWO2+Z8/PVCLh3fjGr+nPbWwn9/ir199yV5a
xBkSA8c2kOythbbyidhGDSUP06Khu8tFHe2jhaGJ03pbG8m+WsgHr21tokdq
oXoflnu+kWR/sb5f7HOaN5YcIPbzmG9rPR2oxUL3/fPymkgO0qLVrfmx/s0k
jxf7t97RuoGt5GAtRpdronNoITlEi0U9SuRd6VCt+P+RNf0z6Cla+Ll0a32e
nqYFVPPffqJnaHFj4YhLVnaSw7RIzvQfeZSerYXFkyGvO9lLDhfne8e2VQp6
rhZDn7WKr9ta8nwtYuc7P8iiF2rx5lVJixttJC/W4vENz09zHCRHivM0pEpC
DB0l5tPYNGB4W8nLtVgx5POCQnqlFhcvuF/4TkeL81U97X6zdpJjtGj0xnb1
VHqtFtMf7P27qL3k9VrUSPv096Cj5I1apOU9+Niqg+RYLboXF54dSsdpcTYq
vu12Ol4L96IjgyM6Sk7QYlt43JU4ersWz4aE15XRO7WIjjtV/zu9W4svTq+9
ujpJ3iv2x8bHLbqT5EQtjiyNH5dOJ2kxt2Hj3ArOkuVaRHqtamSkleJ8vX67
sXxnyWotnh+1O1eH1mpRK9BiVXtaL9735AXnV7RRi8FuFbwsXSSbxfu5WE7w
pVPE/Vi7pewenSrWw+Tou/s/yYe0aHfk4cyGrpKPaFHSaVy3610kH9NiQdUx
3U51lZymhe2yX0MbdJN8Uosm33s6L6BPid8rUW/YT2eI+9NxYFq/7pIzxX03
vv/ISfQ58Xvuxb5H6AtarMobVfE2fUk876adkXN6SM4S3x9xb2IMna1F/Cj/
gxPdJOeI9e6xX1+rp+TrWvTK/JHlQ+dqMf7uK80o+pYWJ2rtmLmNvqNFqaUq
7gudJ973dNXT1dwl52thjuh9zrOX5AdiHqsM3jC5t+RHWpR7stDKTBeI/dlx
fWQB/VSLfdVOX6jeR/Jz0bexe264QXKhFsUxk9/40q+0CLTffiSeLhLnrcOW
rQfot1pstn1z7Cb9Xszr7LKcO3Sx6OmtKWFT+0ouEe/T3vDpJf1Zi8tbDL8r
9GP/RZ9c6r8Jpku1+F75wt9v9A8tXLss7uvSn/3X4u697/f60GWi79ETnMbQ
f7UY0GLdpM4e7L8OL1YsmPmIttTBIyD+8FfaSnyes7xs2gD2X4cg13e3r9OV
ddgSdElXbxD7r8Oc1K0fp3qy/zp4znm9YBpdUwf55CdfVHRtHVakTex3i7bW
oYlxRoUzg9l/HW6/CDrg6MX+63DCTj+2P22jg7b87gP/c2MdTi50yPhvCPuv
g9WMDm1dvdl/HTo2GL62lG6hQ7nWyUf7DmX/dbBWFIdbDWP/dfAf4B/vS7fR
IcrCr87J4ey/Dn171NP/ptvr0N+/grqWD/uvg8MJz1K5L/uvw+f518/5+bH/
OgxcpW2ymHbRYVCndZZfaVcdHgyM+lxlJPuvwwWvHX3a0d11cD9XUHCYdtOh
dxNVp3qj2H8dGqY4DCqje+uwv1onTdFo9l8H44vnoxwD2H8d1O+uvtPTHjps
urp918hA9l+HeqNb6M7SnjpoPALbPqG9xH7Mq23rPpb916HtprcWo+lhYv/S
qhx9EcT+62Az7Kv5I+2rQ0jfARuqjWP/dchMP/NjFe2vQ8yJzs1HjWf/dejW
dfubBDpQh331rlv4BLP/OtjNVTrdo8fr8Cv38+h2E9l/HbqfyZxYO4T91+FN
3cs51nSoDjtbXWh5MJT916Hn7qGNhk5j/8X5cp4Tf5GeIZ6vw4FAj+nsvw5p
1Y5UCqdn65DzevbbTDpchyobys8Ln8H+67B2uL31bnq+DrUL/q15OZP918Gt
IOSbQxj7r8OuiQG12sxi/3WYUPHWi450lA7ZV8baeM1m/3W4W3y9yzh6pQ6W
w1QDJ8xh/3UYn92koEs4+6/Dx1iL0N5z2X8d7lWLKzk+j/0X571akGO7+ey/
DsuK/ZtNp2N1KLa+d3kRHaeDrdZx9gc6Xoflb0YGvFvA/uvQJ6LZ2KEL2X8d
vKvf/+a1iP3X4VVar/UR9G4d7AdFxJyj9+qwsouze4PF7L8O3xe0qTiRTtKh
7pX1+w7ScnEeesxfm0krdVBY7L88bQn7r8PPFeWr/aO1OrwfvutoaCT7L+Zp
QnNHh6Xsvw4u3xoM6RPF/uswrM8pq7rL2H8dOrybvTWcTtUht9GGJSr6kA5L
vQ+/K6aP6KB62dbJaQX7L+7bERNCe9JpOvgtu2kopE/qcK5mn9+tVrL/Opx/
rl47ks7QQdlo+Y8TdKbwHrd/P+lzOmSEdjrzl76gQ5cnAZ6jVrH/OtT0TN3t
HM3+i+c9mzN5Np2tw7SuR52P0zk6mJofqjthNfuvw8K/JYOn07k6WHypO7Nl
DPuvQ6/cq11C6Tvi/bb5hmvoPB18JrrEX6Pzxf3z+uW8RmvYfx2erHjcePQ6
9l+Hxw55l2esZ//F+RgwK7XVBvZfh4uLKzi6b2T/Rb9sNS196UIdKvaOa66j
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
6g80qaP9EoY6WPak3lEODzPkQ1O0qaNTgvLvTO1NvZMcQm5azq4n8+iOA24e
t9Sh3lkOxS0enRzJPLopt8WSmVOTg2dI99Zw1tG9vrfXitWlro7f502KaiOZ
R3/58uTygD7Uu8iheeyyImMyj97a/Kh1K+td5bDucLvn11lHd1Ry2v6yH/Vu
ctCWpraZ1Z86Wm7wquXZQOoacvAZmGxZO5g6ulx3yf5oPerd5cD1DGr4QObR
iZds79jqU9eUQ4Je1E/7IdT/82p7x1tkroccTDv6uDsbUUdHnJq19gSZ05LD
qMafu+XG1NFzTB3CqslcTzk4RnxNHzCUOrrHk/aTf5K5XnK49mZLov8w6uhw
95t/tU2oa8thnhpn2WsEdXSxZtEJZzLXWw6B4nPLF6yjd+Q+s9xhSl1HDvG5
YcETzKmj/bdkCHfInK4cHnktnvLEgjo6ekiFjd5o6n3kkPq4n3/6GOroEdvr
bnaypN4XxzvxeM/3ZB5d3bVEOWcs9X5ymPlWKbGUzKOf1emarxpHvb8cdkaH
qq0m8+ifSp1ik8dTHyCHX78aXmlaU0fvKRIM7pG5gXLIvfx6WDnr6E+q/aWL
E6gPwr+/ONm8gMyjf+vZnu49ifpgOagdzVhgTObRMxIMHkbYUtfD9aMxIm7e
ZOpop3Xblxwgc/r4e+xa1/SeQh3dY7Z1T4HMDZHD1dQOb3McqKNTP214IZI5
AznsNxZm1k+ljv5zxbKnmyN1Qzm82OLqfnYadfT9rj7xz8ickRwONj1a38GJ
Onq4X1hwjjN1Y/z9WflqETOoo6//rl6USuaGykF/4V0NZRfq6AXrir/UzaQ+
TA6W5VvHDnSjjl7m8+zyEDI3XA7dvmn9muNOHf3qvPG/CbOom8jhn/6LU5vJ
PPrh2/mHHntSH4Hje2fTxkYyj140qWBwdy/qI+XwbkPeNm0yj94oN3Y0Zd0U
96cFk/eeZx1tNHV9mcS6mRx0WiKVR8+mji6ZOc1uCpkbhedHyWU/U2/q6G7n
x8ndfaiby6HStf/UK2Qevafrk+zZc6lboBeUm9eQeXQr7JFVzqM+Wg5mI5eF
vyDzaKezlu23zKc+Bve7yo2rei6gju6+z8Y4nsxZyiEm/8G1jX7U0VFXdx3W
96duhc/jqP3ct2QevWXjpMr4IOpjcT0vnvzNbjF1tK/Rzl3Hydw4OYQNmBl5
jnX0v/hBwS2sj5dDVZpk3WYJdbTRpmq9LDJnjfvT1D/FwcHU0a5W54bsJnMT
cDwGWK3+wjo69MDIuWbLqAPuV9Oi9g9bTh197tTMcaGh1G3k4PDgWu5BMo+W
V37u9GYF9Ym4nppb2y5cSR0d3/ViXAOZm4Tz52tHqzFh1NEfn5ipOJE5WzkM
6wtVE1ZTR5fbOcxRWUfdTg4nN8b7LCfzaDWbn+myKOqT5eAdV/zvE5lHFw1W
HjE4mrq9HO5UTn7adj11dEhxzQgzMjdFDrND/lQcYx2tq9354UXWHeTQVT07
0ZGnjj6QBuBD5qbi/pBxyT6I9f98Iu12JuuOclA2XrHFaAN1dNjMzZf4jdSn
yWHzc7WCi2Qe/dkx41DVZupOOP6Zep0MtlBHR82rXbeMzDnjflUQldQzhjo6
eoftIK846tPxvjB9iUELmUcrV1l1bdlKfQae/yejH/RJoI4uGhrQuoXMucih
TUO+ZizraGeNtJqF26i7yuH10N/puWQe7XL6YkOn7dRnyqHdx8xxp8g8Wlep
Z7rBDupueN9z84jNJvNold4pU97vpO6Ov9/ju0rCLupo6x+6+q8SqXvg8/9t
tcp/N3X05bYJmr7J1Gfh/XXvHrcbZB59tn/R310p1D3loH7uw/JkMo8u0oly
HZVK3UsOdqMyyyeQefR6jflRNqzPxvV+5HrIH9bROVumBsXtp+4th6fz76lc
IfPovLbTNfMOUveRw0uPIy2jj1BHT+23wmVGGvU5crg1w7TNlqPU0edzfFRj
yNxcOWTPmbct8Dh19CP7yam/yJwv3ufPb/f+m04dvfF5aPflGdTnyWFsplny
t5PU0QV5L7NKz1CfLwf7wqTcn2QerRhdbn/7LPUFeJ9xKQnRPEcdLeS5rMsj
c354fz5z59qLC9TRt/sld1pyhfpCvC+873PqAplHB5kvuO+dTd0f1+vWZbVT
rlJHZ2ZvHRRH5gLweW3xnLv4GnW02fJ1hrvIXKAcZO6b+va/Th19fbNG3gMy
FySHv1t8bxSwjt41b/6jNzeoL5LDqUkT/GxvUkc7vrtQoHuL+mI5jD5knzOa
zKNr49o3DhOoL5GDV2jVuNlkHn185PF3qawvxc9/mxmvIqeOVt67w/oJmQvG
+RZ1b0rPO9TR/w728z9O5pbh+0byjZTbd6mjT5rc9Zp0n3oIrt++8q09H1BH
e97aHaxL5pbLYa+uzGsS6+gp/S6MymY9VA6RH3Y1zsuljm7c8jC6gMytwP24
eeenLo+po8Os/pRZkbmVcpjwbuHV8gLq6IqMewMPF1IPw/21w+ikdUXU0Q9e
mN2+QebC8X1svF+ft0+oo9UGfTZILqa+Sg5KAzNq9Uupo3eZPV33jMytxn9/
ziZpWDl1dGf13dsDK6hH4PuQx/CnXyupo+3GtD3TWEV9jRxuVte/zHtGHb3n
Yerjumrqa+WQ9XHacXhJHW3f8fZBLzIXiftLjYnQ7hV1tE7PiRGjydw6Obyp
7WyUWkMdndDf913ua+pRcjiycnvxXzKPrp/T8P7WG+rRuB60g+zH1VNHa04Z
dHH0e+rr5bAyte2fWWQePfrKs/wDrPO4/z9WXfrhA3V0p+KFSyd/or5BDoO6
fVhztZE6elfH6FGVX6hvlMO3DJdgza/U0eP/GGZ1bKa+SQ4GC5YPXUzm0bc1
Rj3gWd8shw1l67okfqeODvJLfJnUQn0Lzu87wtfHP6ijTxuZ9flK5mLw960I
KJ70kzo64O7VqyN+UY/F+3CXN4sO/6aO/pbiWdr7D/U4OTQ4dbNbS+bR0sDN
pw+zvhXvK8ncnHrW0ZsWTTE99Zd6PL5/qu5tgX/U0a1HX904QuYS5NA765Tl
NdbR73t/XNKFK/tf3yYHw+NjNYrb/M88+tr7T9dPK1HfjvOrJLDjfWXq6Fnb
hcDKdtR3yCH2V0zrGhXq6C5d9mQ8InM75eDGV0f+VaWO7lUWUtetI/Vd+L5R
nbbgD5lHuxaNGMl3op4oh5Zi/8DCztTRc1oe3f9A5pLwPjuiKMJQjTo6fULj
Zjcytxufn+WP5qXq1NFXNZc6detCPVkOfV/3cO5N5tH7ji1TGLC+B89z19nn
FnWjjh4/u/jCTy3qe+Ww8NAdWzdt6ugNaxqHxJG5FDzP/rSvq2cd3Tmq0X1g
b+qpON+GpjjZknl09UzblStY3ycHWDH4hJkOdbT9Vvv3z3Sp78fzaeWUN/p9
qKN3Hr202KIv9QO4n06IObeiH3X0puVTK9sOoH5QDhE9uYnXyDza71/3102s
H5JD8fS5GzYNpI7uH1jy5yuZOywH9+9Jm6L1qaMv7b50pprMHZHD8sy4WX2G
UEfHTc99mGpAPQ1/z6IpKnIyj940+vGCCkPqR+Uw/eMjzx9kHj1YNTx4lhH1
Y7jevn5Lfz+UOtrH0sV/5TDqx+Uw6Z2K9bvh1NHPg7u1PTeC+gm8v3Xr6OYy
kjq651p7G38yl473Ie1Vqbqm1NHnjx1xHk/mMuRwdMwF+zIz6uiPFR3GPCdz
mfj+1H+qevAo6mjrbc2W1ebUT2JXjyvrN4Y62mBF1o+RVtRPyUHP7e/Gz2Qe
3dtF2a9xLPXTeN+de//DmnHU0ResptrXkLksvG/tP6FiZk0dPT/F58sWoH4G
72eLYvu9IvPo3QscnT6yfhbPm0mhvKENdbTnvlAD+STq5/B+UjfTopctdfSw
8Tc+RZO583i+l1utPsY6evfpuB9Z9tQv4H31zFB7Twfq6E7WXW/eI3MXcf0F
ae9v60gd3dGs2TqPzF2Sg4n/pHaSE3X0XJex6VOdqV/G+eppemU9mUcrCQ3O
/tOpX8H3lX/374fMoI72UpqgHeBCPRvvy/pe18+5UUdPHacxsdid+lXc77KW
nXf3oI6uv+GxM4rMXcPnuz+nQmMWdXTyJPv1pmTuOs5Pm0vFPWdTRw9Rin3a
QOZu4H5T4H1cz5s6eug03WEpPtRv4v6/2fej+Rzq6MZb357vnEs9Rw4/1ofs
tF1AHb3y+7mkD2Tulhx+jXnfa54fdXRo8faLfmROhudv46/z1/2po9ds970f
EEBdwPe/jZyGUSB19PQxZjt3LaEu4ucd3zC5YSl1tJS90YkLpi7J4cmGne4j
yDy69IW2djTrcjk8yxu+PGoZdbT/4qtnO4VQV+D7g1KAh+py6uh+r7nj6mTu
Nu4Hcy4W7mId/eEtL21bSf2OHJoV+2tWhFFHr38dWRZO5u7i+1rtkLnjw6mj
h52pFKLJ3D18norZhV1WUUevapzg/oLM3cfzJO/v0cbV1NHunvVPjCOoP5DD
5I43+DZrqKOLvS/4dCdzD+VQmZ53yph19HCvDolNrOfi+r7XvbXTOurog9I2
jRIyl4frL1+qtYuijt5w/16vLdHUH8nhROy9pNPrqaN1v77rcZ7MPZbDjphu
hm146mjV83tP222gni+Htsqrj1WTefSXgVOL526kXiAHi7gNi5+QeXQPtZz+
R7dQL8T31+hP4w/EUEfvcb9zaEYs9SI5lNWFu50l8+jAHlpZBaw/wfn7wHez
21bq6FyZpY47mXsqB63n1X91E6ijmy/MfqK2nXoxvp8X9tlRSebR20t0QkJ3
Ui9B9975/RCZR3MRiSdyWS/F88f/kqHhLurozfkDjJ2TqJfh+8vu3vobd1NH
H+8yOUYtmXo5nt/cEA9LMo8e53NoZI891CvkYHwv8dpZMo9OOp3xtySFeiWe
n676fRxSqaNNOjcujiRzVfg+VHb/e+/91NEeD+dD5wPUn+F8KOye++0wdfTR
GcYh59KoP//v/0/a+m0+Th1d+2WAb5sT1Kvl8GJVvLNvOnW0qodS/tYM6i/w
PA1caxl9kjp6gNLK8munqL/E/fan0r9/p6mja5wa1KzOUH+F+7X21ytA5tEn
TIzczM5Tr5FDu5OaZpPJPLpS+fLHfReo18rhyn2Dn/uvUEdPfeQ1zuAq9ddy
KLyxuXQ9mUd3GlY6c08O9Tf4/jrgQsvgW9TRmWN9YSqZe4vPc3b2k30y6ug1
zf6rS8hcHb5fVpgGDBGoo4+GN74eIVF/h/ffBrdbs8g8Or3/OZercur1cojZ
176broI6+ufEIJWvZO49jk+827xrt6mjE6u77utxh3qDHEyLB4y0uUcdXePl
WnLiAfUPcnj5ebDRTTKPXhZ0zljzIfWPeH5ts+pgn0sd7d/ipf8gj/onObR/
cf619SPqaJM9D5oekLnPOP8Hmpw1fkwd7Zi9aORpMteI83uKyYFO+dTRokq6
UjGZ+4Ln77NFKvcLqKNbA86vOVNE/SveX9rPnuVeTB3tP1p5TQ6Za8Je7vPp
J+touy3XGkxKqDfjfepdlc7eUurojDO9jNuUU/8mhw62GQnuZB5dGW7n9Jj1
77geK0R9k0rq6OlPDW0ryFyLHMyNCl95v6KODk/bolpdQ/0H/p4e+RuMX1NH
Z0c/cw8lcz/lcNLdVOMK62gIWrv461vqv/B5X233+eA76uiPhgdOHvpM/bcc
RhQ2lpQ2UkdXd77+ftgX6n/w/cVGvZ8pmUd7+j90aNNEvVUOv5vsepWRebRk
Lm9sbqb+F9fznSVjFN+oo1s8/nzt8pP6Pzlo16kb65F59JqibcU2v6lzCvjc
pB3qQObRewZ77unwh3obBXjJ355XI/PowqrhJhtYb6uAG8E3k8e2Ukdbf1vj
UE7mlBTQ5vAoB9W/1NF3VeYttyFzygrQfDun6Qnr6K/RQ2O/sN5OAbrBM698
Yx3tPGWpz8K25f/r7RUgdUir7KT0P/PoCfrR4YvInIoCdnTot3UL6+g7n3v5
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
RnMuPEtut5d+/QlOfcvtXqTsZ7grzau/thq7tcGpdaZebBnfAXej/cKi4MSQ
73Bqg9ZE49U/4Vt49mam4Y5/OuHUTbtNLS/9grvzLE/7MRfwG06trCwj9+cP
fCvdRwqrXF93w6llxTpeenIve3wbnb/xi29/Qouox43PFGaJw7fT+otx0b7f
B049YvQDqW/94Dt4ZnbEc7RSfzi1XfnoSTVo7l+ePbtq+b5eAk4tr/5HWlMS
7kHz6ei+8tbScOph980mC2jOk/azr/Vna2Tg1GuWTpKrQ3M7eTaxPGH4JFk4
tZbOdjuFwXAver4ZYd5FaBF1ZPEyuYwh8F08YxkWMQ5D4dTxeUF/zsrBvXl2
fZT4atNhcOp1/T9ufDMc7kPPy21jIFOEU39t8Hd1Vob70u9xW/Kw5mg4tco4
1+2hKnA/2m8zfu6MHAenXtQ5yqd8PHw3z9Y3RkzvNwFO/amyO8VQFb6H5rvM
vipnNeDUj+aPtLg5Ge5P738/C9k0TTj13mF508W04XvpvN/398YwtIi6+fjg
muipcBHtj8uCgy/NgFNPD1n4PF8XHsCzMK/31W/nwakN4uQCz/4DD6T3u76w
IxUtor7+KV/2lD58H8+6lJOPmzA49ZWc13tvo7kgnnm+j9vT1uvU0WvWvVBY
AA+m+VveuVB+EZz686Dvvl1obj+t/5i+rpMM4NQ3h2VLZKG5A7QfL0su/GUI
py7xv7Fl12J4CM9a1PL++KBF1I/9flz50uuhNJ+/dqs2NoJTWzZaqx9Ecwd5
ljrlW2VTr1Mr7yl2Dl8KD6PfK2fY6gZjOLWzhlyHgQk8nGev/2So/DWDU2/a
fEj2gTn8EM1TzZJSb9Ai6k2qbbaWK+GHeVYb4RImtwpOPXuDslTTavgRnvFC
2O4ha+DUe9co66iguaM8O7f0e+31Xqe2ETuwUs0KHkHz9XRFL3u0iHpq6QI/
Mxt4JJ2fxeu3ZtnCqYUihzPydvAoup/blplNQYuolYvEYkfaw6PpfjFGRXG4
A5z6xY6GkSc2wY/R/Sp4cNq4zXDqmthq71loLoZnUXKPNJud4NRdXS9v626B
H6f9LL3rxUd3OHW10qzkJi94LO1Xm/bVGPnCqVdmjjr0FM3F0f7bEX4kyB9O
/fh/TXMPo7kT9H49OK0T2+vUWnsldn3p9ZN0H7XxieoIgFPvVrv8ZNk++Cma
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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 10000.}, {0, 0.5283095557215169}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6649082425911207`*^9, 3.664908253154352*^9}, 
   3.664909468139143*^9, 3.664910165957448*^9, 
   3.664964520053709*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXXt4lNWZH8xFvNuu6K7ttvTuulbr1u5uu7Xu/rPdp8+zz/65/61QNUKt
oyKddrsdRYyihltEjchQcRRGxHiJJiEkIQEGyOQiDJcBAwQYYEKACQwMYUgG
331/73fOl4l+CRMn8336NPFhTM538p3f+55z3vs5+c+pM6fd9+DUmdPvmTr5
lzOmPjxt+j2PTv73h2ZwU8EEl2vCNJfLdWCyC98Tf6s+5Gs6PtQPFt//l/yv
gFLJJKXS8sR1iWqjdIqSyZT+6TP9fpxlP6v33Wr2Hv3vWvW7NaPN6Jb971r1
+5FFW1EO+CYY7P6lfhStoZKSEvzjV+CzgLyBCD9MUFWZ22yrjMTl9xORKtVW
SCWlVaRa0ffTXTHALSbeFFV6SilscGQ0rxnsWpDRlVx/L5+XUqKzhtwGBVTi
8VFX0nxVruhvVkPwGFThKdGMovKaCKXHhoq/UwxKdVZSiTtASfo0g4oz++un
Iw9hjWYCeg6Z/htkXprLwTg/RWVu0pRm0nqC5dxWRWgylkgpdaVjVM7UV3VJ
K9V4S8hb0zVMX829G+Sd0UgHhUIh6gg1U5nbTf76MCVG9T7LvmoR8BjpKJXJ
c4OBYb+b3P7ImNBhjHE9dQY8VOLrMGYg1UneEjeFkznTYLDpMkpGAtxNrwBr
co1Nfm2uZE0Qulz/oQhD745AKT/xUqgnrRjooYqQXnVx8pV4qONYmDwlPnMt
JjoqyOMLW/dN0uD8JymAnVPqp/r6SuFbeaCeenpH8TrroQfnPxkRIdCh9k+c
iXaP7l3DkWHOf0TWVNh4zOOBjlG9y7qvOf+dGfOftCZXz3+OZE0Quly/krdd
Rz0dGNktcx/xezN6J8jv9sqbve6MN4d98mbLvknS/DIWWzn18P6v8ngN2Z8c
xaushzWnPBVheiG6yikQqBDBHAjHx4ICc8p5UqgUY7g98n5PZWQsSNBTnu4a
OuUWXc0pz5EsNeWm3E/HKVgfMn8zXMFE+sNqjUeMxjQYzDKOR3HzAoso3S1y
cLi+Sa3zJ1FXDYsUbwWVQe8nDQqzfo/1mBn7HYu9nDp7YhTpCFNnV5TiyfSY
4NeTb2xIH69f3jZhv6Gec6fhJnn9FbJ+y3jtVkHyugcXgRXZg4sgJ/ImCH0Z
yj8qqxu7RgwFaIyqLl5GfiE8xm+MBX2CLsH/BdwlVBGMMfIYS5ES8kcSw/Qd
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
wy7kwMz1i1gqMqJVvCVhECNi9W1n4U5SDE6cPU+NbQcY8m74xjqlhCwMdARy
ZmfP9X9zdGCt8lpaAablctm0Gn5sifob9VbUPiPu+RJTMGUwT/ZHXjEIKLZG
utEl25ihDtliF42c/8Lz5gqPeRmtr1lfimqyZKxI/bpiKrY00rA1G/eJ8h4U
m4US1YcngzBYX6rfyq7OLTuWUtfMGVyIk78E93clsw1TZ0urDlNCGCDgCxfe
y/6Pe16DKWth2kKsYcohjxEosSqRyCFnVqQyLkT6qjNfOOEaa2INR7lQoilL
q7aJ3rtbp2UKJUL4yMJGFoq7sTGvzfKtWefPPlw8y1jeM1+i9RfLn2Wb37pJ
PgupOdhCvlXrqfz1Jpox3yxuuH9ODT1eUU/v1W2iUGvblVm+dXRZM0r2UKQz
Jk9TsSC5ca4klXVKJdvpu0XxsSd+VlRpxTsfZU4fqiOQddnA/jDbhlZeTI5Z
snrCfagdcd6dsWbJmOWBytsUlcm+85LvQOLg0eebClRdHWwJCJ3uE0mXVQHI
502M4VmawlXlpgT2B2NjrkV0ZTRMu5YdR+iJJUGXpozNO8mCwK4vyPJ9edLg
us79HDv8CMwveLNtSBHFwwsaRVLCPsJ2sSoLyRM0HaFG8B25Y3bhTA5Of7ZW
fGZWWnZyyyghuYxS/QPUujMmcYYpT1abVd0IvG/YekhcC6uDKXk5sBxqbZW8
K/JXuiYV9TDIDiFoahXpz+sx3qG1Hq2RGD2+JAjdqtGVsteAyh2wyeqghY2H
jLVFhST3irqdGaEMo7AXHhm2qVUpio0wDbv3UonJ+dhdmTLbLOukF1Z1wKBx
/YOzEHWGEbbket4Df6xYb3ISiZ2OXUfFd7U68WAjTH3i4c36iIRddMH+r0tr
ERa3OvFgI7orFStxhmve8lYTHWrZEIY5cvyM5YkHGyHqEw8ohUeycTorM30s
CCmxM33nLU885P2yhmsVMNQ2VzZ9TL9XswtraRHvERjzP3CWd4Z7bxy3gV03
RVVnowThYHfCKvhgI7rrFLrjJ/vkfJKeVSgTnm2rIxg2orteoUPVC0xDrXPh
izM/rSIhNqK7QaFDaLyupcs8gIkjS5H9J6zOhdiIzghpGEUCf3rZOOkI7dYW
6XZZpSVthKaLnjZvPyx2sT5vHT2aUEk0m8WIjokgNv/4kg2mmt20/Yh5FsQh
XhnDG4sMhQnIYgAeKqB7E31WoSgb0X1TMS6e6MNxHuMcIQs4LLIbLfrbCE3H
flLnB8hXFZbIL0yoxrYDam84Bu3bChqSKFqsQXMh9W4Va7MRmk4GI4Wnlxo0
FesHy5pDG6F9V0FDVQDyDWLB8Vpr4U06yaJ/3qWGoboLpURBn7latyV6nbNs
+oFChTIlIEJ8k7ejVUjTRlQ6W4+0gF7yEGHxU+fM8R2Cpv8aGcId+kA5QiBw
Aa2ipA7fR3Wzghs/1Sc1O4CLuC6ExzXDw734XVU6KtUZ8CIWr37KP0G3yGeh
pJ1BzANlayi084hVeUn2CYZENEIdHSEK8b8A01zqr6doIm0HPT9U9KxYEzEN
CRafVscEL5o/0NHZzoBbSKxprqEKr5s85QEK92R9hiF3corExcLZQpCEUiBW
+eZ6t6ZpmISBeblUukv+fN2ypnaqXfQHmvvu5jze3GWcvCmULAJIeHRBHW1q
ab3Comt26QF9HCoVrZKp8ZV5yB9O2HE9lg6iwybEYTHQs+itDqtK9YvG/zVe
+cNVjDkQSdpyxdePFA3Q5lPU1T6Hek5fPgINF7lJC3eVeY0/lmQHAfqAKE4B
AzyOrrJPapWYsVGZ6YAggh9y7c6qDsuKN9shFUp9IYLCgMWO1URnUf1YocI9
I/eU1ogfyiLO6sxE3g1JHWhGYQq4s7xup+XhDRvZc4diD+rhH5zXIJ4TKzGr
nJyNqHS1GeJBYBTbP5ZpQhsh6VwGqqLApL2HT1qWbDoACYkDcAk3gjgMSR9W
nqX2P0+gKaQdhoS6eEDCHR8OQ/pn1YaoP4KwMOmtcsV5F0gaCMoqwRvWcRcF
YgtvCnGCkOV1LVJNKOuxOixmIyqdZ0V9KRi1cdthy/NrDkDCiVJA8r0fdhqS
vr0BYWh41uomGjG2r7EfxmvVxmTtP3LSSRiopwUMFNtZwcjLztaDI2OLmBXS
oQ7wwCiUKKTn3pASc+N0QXu7Awj0vYsHuxMOIUC9nrrY1CEECJErH9JmBPp+
FlzFicSezctQD4+aSJmCphYnhm+LdMvwb1UH8y8B9KD6ctb5rzU5QTN0AJLM
vyuvs3N4fZ8zKn5xYQt+MiKNjtWejwQTxxRgCaJqSsHMspq8PqOa3LgDRH59
rKvJRwKPA/9YYQika/AXj9xm/gVyXRruC2d9Sc1YANcuAa4g18AvGqJFgWlq
sM6bOirc5K3pshM3zt5p72oQ94hhWBT+Ngu4WQsW0+IFRg33ssaQjJCXSOyd
qq26YbOgXfbOeqN8MMuK7CL5Gwr4i9CBYIiCzSGKJdO27krELIGcrf4MPl+k
wBrxSZT++zuiFI/3UCwaG83NPLng1v3ufapGKgfx08hB1ULF6c6qwauEsFEj
GX+mwA7EuEMLpcgZiO3QErofzhfgmiOHhp/2TK2k+Bwa/oHnakVPfnr4vJgl
ut/D81ZLLM0hmh+ZXyfFBQ4NP2NBncTIHRp+5sI6uR/CoeGhEboMp9yJ4TPb
xoe3Zbd/QWkeH358ePuHd034f6HvjIc=\
\>"]]
}, Open  ]],

Cell["\<\
There are a range of distances and some of them are quite close. Let\
\[CloseCurlyQuote]s see which xprimeProbs result in low distances. \
\>", "Text",
 CellChangeTimes->{{3.66490996782104*^9, 3.664909978600046*^9}, {
  3.664910175249322*^9, 3.6649102283413363`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"minED", " ", "=", " ", 
  RowBox[{"Min", "[", "euclid", "]"}]}]], "Input",
 CellChangeTimes->{{3.664910231536759*^9, 3.6649102409248743`*^9}, {
  3.664910507753284*^9, 3.6649105119354763`*^9}}],

Cell[BoxData["0.10940557572628555`"], "Output",
 CellChangeTimes->{3.664910241793236*^9, 3.664910512950667*^9, 
  3.664964541021406*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"minxprimeProbs", " ", "=", " ", 
  RowBox[{"xprimeProbs", "[", 
   RowBox[{"[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Position", "[", 
      RowBox[{"euclid", ",", " ", "minED"}], "]"}], "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.664965854272627*^9, 3.664965949647565*^9}, {
  3.66496597992065*^9, 3.664966036821435*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0.26`", ",", "0.27`", ",", "0.24`", ",", "0.23`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6649659153534813`*^9, 3.664965952472609*^9, {3.664966000953444*^9, 
   3.664966037993589*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xprimeProbs", "[", 
  RowBox[{"[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Position", "[", 
     RowBox[{"euclid", ",", " ", 
      RowBox[{"x_", " ", "/;", " ", 
       RowBox[{
        RowBox[{"x", " ", "\[GreaterEqual]", " ", "minED"}], " ", "&&", " ", 
        RowBox[{"x", "\[LessEqual]", " ", 
         RowBox[{"minED", "+", "0.01"}]}]}]}]}], "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.664910248468562*^9, 3.664910300571525*^9}, 
   3.6649104963459272`*^9, 3.6649105316831512`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "0.27`", ",", "0.29`", ",", "0.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28`", ",", "0.22`", ",", "0.25`", ",", "0.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.32`", ",", "0.24`", ",", "0.22`", ",", "0.22`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24`", ",", "0.31`", ",", "0.24`", ",", "0.21`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.22`", ",", "0.27`", ",", "0.25`", ",", "0.26`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24`", ",", "0.26`", ",", "0.25`", ",", "0.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28`", ",", "0.23`", ",", "0.23`", ",", "0.26`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24`", ",", "0.2`", ",", "0.28`", ",", "0.28`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3`", ",", "0.26`", ",", "0.22`", ",", "0.22`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23`", ",", "0.26`", ",", "0.31`", ",", "0.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.31`", ",", "0.25`", ",", "0.24`", ",", "0.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "0.28`", ",", "0.25`", ",", "0.27`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28`", ",", "0.24`", ",", "0.26`", ",", "0.22`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3`", ",", "0.23`", ",", "0.27`", ",", "0.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23`", ",", "0.28`", ",", "0.24`", ",", "0.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.26`", ",", "0.27`", ",", "0.26`", ",", "0.21`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.26`", ",", "0.22`", ",", "0.27`", ",", "0.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19`", ",", "0.27`", ",", "0.29`", ",", "0.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24`", ",", "0.27`", ",", "0.27`", ",", "0.22`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24`", ",", "0.21`", ",", "0.29`", ",", "0.26`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24`", ",", "0.25`", ",", "0.24`", ",", "0.27`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28`", ",", "0.19`", ",", "0.25`", ",", "0.28`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.22`", ",", "0.23`", ",", "0.24`", ",", "0.31`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19`", ",", "0.29`", ",", "0.27`", ",", "0.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19`", ",", "0.25`", ",", "0.3`", ",", "0.26`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28`", ",", "0.26`", ",", "0.21`", ",", "0.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24`", ",", "0.24`", ",", "0.26`", ",", "0.26`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3`", ",", "0.24`", ",", "0.19`", ",", "0.27`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.26`", ",", "0.27`", ",", "0.24`", ",", "0.23`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23`", ",", "0.3`", ",", "0.24`", ",", "0.23`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23`", ",", "0.25`", ",", "0.23`", ",", "0.29`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3`", ",", "0.28`", ",", "0.2`", ",", "0.22`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.26`", ",", "0.22`", ",", "0.29`", ",", "0.23`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3`", ",", "0.27`", ",", "0.24`", ",", "0.19`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.29`", ",", "0.26`", ",", "0.22`", ",", "0.23`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.29`", ",", "0.22`", ",", "0.25`", ",", "0.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.26`", ",", "0.19`", ",", "0.27`", ",", "0.28`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.29`", ",", "0.26`", ",", "0.26`", ",", "0.19`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18`", ",", "0.26`", ",", "0.28`", ",", "0.28`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.27`", ",", "0.2`", ",", "0.31`", ",", "0.22`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.27`", ",", "0.24`", ",", "0.25`", ",", "0.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.22`", ",", "0.21`", ",", "0.28`", ",", "0.29`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.26`", ",", "0.31`", ",", "0.19`", ",", "0.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.26`", ",", "0.29`", ",", "0.25`", ",", "0.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.29`", ",", "0.24`", ",", "0.23`", ",", "0.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24`", ",", "0.28`", ",", "0.24`", ",", "0.24`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.664910270109573*^9, 3.664910301829743*^9}, {
   3.6649105247461233`*^9, 3.664910532978438*^9}, 3.664964824623201*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test a Candidate Probability Distribution for X\[CloseCurlyQuote]", \
"Subsection",
 CellChangeTimes->{{3.604831954205748*^9, 3.604831957880233*^9}, {
   3.604834786528846*^9, 3.604834799677415*^9}, {3.6048364956162558`*^9, 
   3.60483649652623*^9}, 3.6048488352250547`*^9}],

Cell[TextData[{
 "Take the first value of xPrimeProbs. Generate nTrials representing a \
measurement of X\[CloseCurlyQuote] ",
 StyleBox["nTrials",
  FontSlant->"Italic"],
 " times."
}], "Text",
 CellChangeTimes->{{3.604786485096883*^9, 3.604786498703326*^9}, {
  3.6048315807352324`*^9, 3.6048316152046967`*^9}, {3.604832458636447*^9, 
  3.6048324629369173`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xPrimeOutcomes", " ", "=", " ", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"xPrimeProbs", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "\[Rule]", " ", "xprimeVals"}], 
     ",", " ", "nTrials"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.604831632280838*^9, 3.60483168568104*^9}, {
   3.6048317286111107`*^9, 3.604831778561675*^9}, {3.604832004110952*^9, 
   3.604832029782605*^9}, {3.604832472675047*^9, 3.6048324730533457`*^9}, 
   3.604832506116056*^9, {3.6048346943126717`*^9, 3.6048347031045713`*^9}, 
   3.604836617949945*^9}],

Cell["Create the set of joint outcomes XX\[CloseCurlyQuote]", "Text",
 CellChangeTimes->{{3.604831922947172*^9, 3.604831972144782*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"jointDistribution", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"xOutcomes", ",", " ", "xPrimeOutcomes"}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6048325271485367`*^9, 3.604832550795578*^9}, 
   3.604836622619718*^9}],

Cell["\<\
Count the number of times each combination of X and X\[CloseCurlyQuote] \
outcomes in the jointOutcomeSpace occurs and divide each count by the number \
of trials to calculate a probability of occurrence of that joint outcome.\
\>", "Text",
 CellChangeTimes->{{3.6048325679409227`*^9, 3.604832616214799*^9}, {
  3.604832711810547*^9, 3.604832747428667*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jointOutcomeProbs", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{"jointDistribution", ",", " ", "#"}], "]"}], "/", "nTrials"}], 
     "]"}], " ", "&"}], " ", "/@", " ", "jointOutcomeSpace"}]}]], "Input",
 CellChangeTimes->{{3.6048326538829927`*^9, 3.6048326972965727`*^9}, {
   3.6048327596397057`*^9, 3.604832768913742*^9}, {3.604833091099646*^9, 
   3.6048330949874763`*^9}, 3.604833369007121*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.02375`", ",", "0.06905`", ",", "0.0936`", ",", "0.0158`", ",", "0.0372`",
    ",", "0.10105`", ",", "0.13745`", ",", "0.02375`", ",", "0.01835`", ",", 
   "0.0535`", ",", "0.06805`", ",", "0.0116`", ",", "0.0407`", ",", "0.1186`",
    ",", "0.1593`", ",", "0.02825`"}], "}"}]], "Output",
 CellChangeTimes->{3.604832699437522*^9, 3.6048327708271847`*^9, 
  3.604833096078347*^9, 3.604833370830308*^9, 3.604836607593772*^9, 
  3.6048371144940653`*^9, 3.6048386557443333`*^9, 3.6048408121777763`*^9, 
  3.604842028781534*^9, 3.604853106272716*^9, 3.604855763271504*^9, 
  3.604856690453053*^9, 3.604996886372457*^9, 3.604998292110223*^9, 
  3.6170361079550962`*^9, 3.617878712071068*^9}]
}, {2}]],

Cell["\<\
For this joint distribution to be uniform the joinOutcomeProbs must be equal. \
The value each of the joint outcomes must satisfy is the reciprocal of the \
number of possible outcomes of X times the number of possible outcomes for X\
\[CloseCurlyQuote]. In this case, \
\>", "Text",
 CellChangeTimes->{{3.604833677857855*^9, 3.604833827457327*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"uniformP", " ", "=", " ", 
   RowBox[{"1.", "/", "16."}]}], ";"}]], "Input",
 CellChangeTimes->{{3.604834479625718*^9, 3.604834494840003*^9}, {
  3.604996896008271*^9, 3.604996897359253*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uniformProbs", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{"uniformP", ",", " ", 
    RowBox[{"{", "16", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.604833625531258*^9, 3.604833642626442*^9}, {
  3.604834386047495*^9, 3.604834394774107*^9}, {3.60483446740989*^9, 
  3.604834502623386*^9}, {3.604996907672468*^9, 3.6049969084310617`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.604833644905624*^9, 3.604834396942923*^9, {3.604834474162854*^9, 
   3.60483450396738*^9}, 3.604836607640203*^9, 3.604837114561693*^9, 
   3.604838655794763*^9, 3.6048408122449636`*^9, 3.604842028829207*^9, 
   3.6048531063112917`*^9, 3.604855763390123*^9, 3.604856690520462*^9, 
   3.6049969095897617`*^9, 3.604998292152649*^9, 3.617036108005176*^9, 
   3.6178787448539543`*^9}]
}, {2}]],

Cell["\<\
Now measure how far away these jointOutcomeProbs are from the required joint \
probabilities for a uniform joint distribution. There are a handful of \
options that make sense for measuring distance. One distance measure is \
Euclidean distance which is defined as:\
\>", "Text",
 CellChangeTimes->{{3.604833073126151*^9, 3.604833078009653*^9}, {
   3.60483335227465*^9, 3.604833376852433*^9}, {3.604833582048565*^9, 
   3.6048336131080713`*^9}, {3.604833877211138*^9, 3.604833906796109*^9}, {
   3.604834009548712*^9, 3.604834009644228*^9}, {3.6048341696200647`*^9, 
   3.604834185725964*^9}, {3.604834248468522*^9, 3.604834270910329*^9}, 
   3.604866368221933*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EuclideanDistance", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.617879075852356*^9, 3.617879082211687*^9}},
 CellID->196650888],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"a", "-", "w"}], "]"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"b", "-", "x"}], "]"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"c", "-", "y"}], "]"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"d", "-", "z"}], "]"}], "2"]}]]], "Output",
 CellChangeTimes->{3.604836607693413*^9, 3.604837114594366*^9, 
  3.604838655828463*^9, 3.604840812279163*^9, 3.604842028881302*^9, 
  3.6048531063445883`*^9, 3.6048557634301367`*^9, 3.6048566905529423`*^9, 
  3.604998292191889*^9, 3.617036108038126*^9, 3.617878758774119*^9, 
  3.617879083300805*^9},
 ImageSize->{252, 23},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]],

Cell["\<\
Another example is Bray-Curtis distance which is defined as: \
\>", "Text",
 CellChangeTimes->{{3.6048342766694603`*^9, 3.6048342879901247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BrayCurtisDistance", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6178790872933083`*^9, 3.617879091635561*^9}},
 CellID->361901413],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"a", "-", "w"}], "]"}], "+", 
   RowBox[{"Abs", "[", 
    RowBox[{"b", "-", "x"}], "]"}], "+", 
   RowBox[{"Abs", "[", 
    RowBox[{"c", "-", "y"}], "]"}], "+", 
   RowBox[{"Abs", "[", 
    RowBox[{"d", "-", "z"}], "]"}]}], 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"a", "+", "w"}], "]"}], "+", 
   RowBox[{"Abs", "[", 
    RowBox[{"b", "+", "x"}], "]"}], "+", 
   RowBox[{"Abs", "[", 
    RowBox[{"c", "+", "y"}], "]"}], "+", 
   RowBox[{"Abs", "[", 
    RowBox[{"d", "+", "z"}], "]"}]}]]], "Output",
 CellChangeTimes->{3.6048366077242737`*^9, 3.604837114627693*^9, 
  3.604838655861689*^9, 3.604840812346003*^9, 3.6048420289146557`*^9, 
  3.604853106377619*^9, 3.6048557634761963`*^9, 3.604856690622361*^9, 
  3.6049982922081747`*^9, 3.617036108071498*^9, 3.6178787647731524`*^9, 
  3.617879092610589*^9},
 ImageSize->{221, 34},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}}]
}, Open  ]],

Cell["\<\
The Euclidean distance between a list and itself should be zero as we expect.\
\
\>", "Text",
 CellChangeTimes->{{3.617878786815009*^9, 3.617878814780271*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"euclideanD", " ", "=", " ", 
  RowBox[{"EuclideanDistance", "[", 
   RowBox[{"uniformProbs", ",", " ", "uniformProbs"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6048344071834383`*^9, 3.604834436414173*^9}, 
   3.604834511230337*^9, {3.6048370480050898`*^9, 3.604837051040607*^9}}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.604837052085137*^9, 3.604837114713722*^9, 
  3.60483865589531*^9, 3.604840812373522*^9, 3.604842028947946*^9, 
  3.604853106431115*^9, 3.6048557635006733`*^9, 3.604856690804693*^9, 
  3.6049969235231543`*^9, 3.604998292241638*^9, 3.617036108120717*^9, 
  3.617879102564691*^9}]
}, {2}]],

Cell["\<\
The Euclidean distance between the joint outcome probabilities based on our \
candidate distribution for X\[CloseCurlyQuote] is:\
\>", "Text",
 CellChangeTimes->{{3.617878820123663*^9, 3.6178788816347723`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"euclideanD", " ", "=", " ", 
  RowBox[{"EuclideanDistance", "[", 
   RowBox[{"jointOutcomeProbs", ",", " ", "uniformProbs"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.6048344071834383`*^9, 3.604834436414173*^9}, 
   3.604834511230337*^9}],

Cell[BoxData["0.1870866911354199`"], "Output",
 CellChangeTimes->{3.6048344379836893`*^9, 3.604834512310396*^9, 
  3.604836607760816*^9, 3.604837114765873*^9, 3.6048386559281807`*^9, 
  3.604840812427923*^9, 3.604842028982695*^9, 3.604853106461412*^9, 
  3.604855763526209*^9, 3.6048566909389257`*^9, 3.604996930270399*^9, 
  3.604998292259981*^9, 3.617036108158761*^9}]
}, {2}]],

Cell["The same relations hold for the Bray-Curtis distances. ", "Text",
 CellChangeTimes->{{3.6178788868585567`*^9, 3.6178789167463903`*^9}, 
   3.61787896915233*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"braycurtisD", " ", "=", " ", 
  RowBox[{"BrayCurtisDistance", "[", 
   RowBox[{"uniformProbs", ",", " ", "uniformProbs"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.604834442951247*^9, 3.6048344582996407`*^9}, {
  3.604834515829651*^9, 3.6048345199084044`*^9}, {3.604837067167822*^9, 
  3.6048370702799883`*^9}}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.6048370711543207`*^9, 3.604837114798932*^9, 
  3.6048386559615717`*^9, 3.604840812462201*^9, 3.604842029016082*^9, 
  3.604853106515108*^9, 3.604855763566908*^9, 3.6048566910561047`*^9, 
  3.604996933261612*^9, 3.6049982922920218`*^9, 3.617036108190975*^9, 
  3.617879107351179*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"braycurtisD", " ", "=", " ", 
  RowBox[{"BrayCurtisDistance", "[", 
   RowBox[{"jointOutcomeProbs", ",", " ", "uniformProbs"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.604834442951247*^9, 3.6048344582996407`*^9}, {
  3.604834515829651*^9, 3.6048345199084044`*^9}}],

Cell[BoxData["0.3096`"], "Output",
 CellChangeTimes->{3.604834521141323*^9, 3.604836607790821*^9, 
  3.6048371148302183`*^9, 3.604838655995471*^9, 3.604840812546582*^9, 
  3.6048420290499153`*^9, 3.604853106548561*^9, 3.604855763592902*^9, 
  3.604856691173745*^9, 3.6049969388110857`*^9, 3.6049982923090878`*^9, 
  3.617036108221911*^9, 3.6178791113743134`*^9}]
}, {2}]],

Cell["\<\
The Bray-Curtis distance is higher than the Euclidean distance (0.3096 versus \
0.1871) but it doesn\[CloseCurlyQuote]t matter which one we pick as long as \
we\[CloseCurlyQuote]re consistent. For our purposes, let\[CloseCurlyQuote]s \
stick with the Euclidean distance.\
\>", "Text",
 CellChangeTimes->{{3.617878973752296*^9, 3.617879054679159*^9}, {
  3.617879119721767*^9, 3.617879137079503*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test All Candidate X\[CloseCurlyQuote] Distributions", "Subsection",
 CellChangeTimes->{{3.604836517660331*^9, 3.60483652846157*^9}, {
  3.60484902179646*^9, 3.6048490432335033`*^9}}],

Cell["\<\
For a given distance measure, the goal is to find distances between \
jointOutcomeProbs -- the probabilities generated by the candidate \
probabilities for X\[CloseCurlyQuote] -- and uniformProbs. Let\
\[CloseCurlyQuote]s use the Euclidean distance as our measure of distance \
between jointOutcomeProbs and uniformProbs.\
\>", "Text",
 CellChangeTimes->{{3.604834598944944*^9, 3.604834627502768*^9}, {
  3.604834844620129*^9, 3.6048349143237047`*^9}, {3.6048350361737423`*^9, 
  3.6048350804571743`*^9}, {3.6048351144772997`*^9, 3.604835129349328*^9}, {
  3.604996965038617*^9, 3.6049969718350277`*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s find the Euclidean distance between uniformProbs and \
the XX\[CloseCurlyQuote] distributions generated by each candidate \
distribution of X\[CloseCurlyQuote].\
\>", "Text",
 CellChangeTimes->{{3.60483515099093*^9, 3.6048351545366096`*^9}, {
   3.604835228937366*^9, 3.604835244637478*^9}, {3.604835339158258*^9, 
   3.604835372550316*^9}, {3.604836134593605*^9, 3.604836138523489*^9}, 
   3.604866386605548*^9, {3.604996982497971*^9, 3.6049970737348633`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xPrimeOutcomesAll", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomChoice", "[", 
      RowBox[{
       RowBox[{"#", " ", "\[Rule]", " ", "xprimeVals"}], ",", " ", 
       "nTrials"}], "]"}], "&"}], " ", "/@", " ", "xPrimeProbs"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.60483540027676*^9, 3.604835404656768*^9}, {
   3.604835447916225*^9, 3.604835561337237*^9}, 3.6048355992379704`*^9, {
   3.604835671771502*^9, 3.6048357140687923`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"jointDistributionAll", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"xOutcomes", ",", "#"}], "}"}], "]"}], " ", "&"}], " ", "/@", 
    "  ", "xPrimeOutcomesAll"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6048325271485367`*^9, 3.604832550795578*^9}, {
  3.60483563195295*^9, 3.604835655338791*^9}, {3.604835728621295*^9, 
  3.604835769071464*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"jointOutcomeProbsAll", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{
           RowBox[{"jointDistributionAll", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", " ", "#"}], "]"}], "/", 
         "nTrials"}], "]"}], " ", "&"}], " ", "/@", " ", 
      "jointOutcomeSpace"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "jointDistributionAll", "]"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6048326538829927`*^9, 3.6048326972965727`*^9}, {
   3.6048327596397057`*^9, 3.604832768913742*^9}, {3.604833091099646*^9, 
   3.6048330949874763`*^9}, 3.604833369007121*^9, {3.6048358753890457`*^9, 
   3.604835875818886*^9}, {3.6048359456591673`*^9, 3.60483597694764*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"euclideanDAll", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"#", ",", " ", "uniformProbs"}], "]"}], " ", "&"}], " ", "/@", 
    " ", "jointOutcomeProbsAll"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.604836152995792*^9, 3.604836169325245*^9}, 
   3.6048365393598413`*^9}],

Cell["\<\
Here is the plot of Euclidean distances for each of the candidate X\
\[CloseCurlyQuote] distributions we\[CloseCurlyQuote]ve tried.\
\>", "Text",
 CellChangeTimes->{{3.604845321386278*^9, 3.604845343824942*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gED", " ", "=", " ", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"euclideanDAll", ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.604836204701911*^9, 3.604836245648603*^9}, {
  3.604836784541377*^9, 3.6048367964615393`*^9}, {3.617879994970994*^9, 
  3.617880001505907*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
+kl426/iQd0zPj9Igv+GtxdNJxI+Jkno2zjw7dUczv8l4cP7ARNsO9F6VkkY
qjZhevtozq8nweSLQF/1AsXvzklwLQj/qjeX+Z8EW52176I0SN/8kzB31MzP
pyw4/ktC52VX31m50fj4JFzs9DTZ5xHhL0hC755xy84e4fgvCbuHCjXCm1j/
kyBzvmKzMJzj/yRErfcYvSub938K/IPl5lWc7ytKgkhV/4fJOvb/SfieUzNP
VkjwlCfBZ/gklx3PeP+noGdB8vlx83j/l4TnWemrNg2j8XVJ2FbWP7gfy299
EtKNzzY+38v1LkmoGb5q2sk49v9JUNeaCb17fP8hGWu80kyGH6b4RjkZUS+X
u+nY83loMjTcDtrW2xF91JPh4D+tqj3Xj2slo8tuuWAG1yPoJKPPTyOfiYu4
XjAZM+WxVm1cr6GfjH67Nr2YcIrri5MRmhP1WncA+QeTZCiJLw1wHsDn6cmI
ERwoF1YQ/lbJUA8JyrFMY/+fjBcjcwqUUgh+52S4a738eJnz8+7J8Jxz8GIF
30fzV8DfR/vifzlcv6n43lj2sfUu2ZP4ZGS/OvjnvQ2fRyajesm8omi+LyBN
xoSvhfa90lj/k1G3K2/I4wkc/yWjYfTrn1PlbP+TMfSv74mLc2h8UTIkmx8I
5g2m84LSZPhObt9NwPF5eTK+dTlc8WI+53+Scf7y9HaHTxC9apJh+HwU5nO9
cV0yDqw9tEJnCY2vT8bY17ZHFxnR+o3JMK96pzPgLslbSzLGvTuWu9WB838p
OOk3Vr9qNc2vnALjmJZ3WM32PwVf+53qvoP9iXoKtt0P7PvGkuuVU3Dfo3PT
9C4kXzopWPjd77xmHM2vm4I+jYNmaYXR+vop+K7y3ma4Gsf/KXg4+Xe35McE
v0kKCmOP2X2YRP1mKfjUvWL7SiPW/xSYFLxa/mUdyZdNCorfe8058oPazikY
u8xn3n2uH3ZPgZqkzTx4M8HvnwLJ0oI1z5fy/a4UXFy+7luXYQRvfAoMB4S1
/mggfgsU+Fql6/5zIv5JU7Bl0a5N6ss4/5sC78nDNdKGsf6n4Hf67sSXHUie
8lNQprS6f60DyWNRCsbt27TzAPv30hS8/3jm7FquFyhX0Otx6oYBdnyemYIp
Rz+HruZ8e00KLruf1+7yv/q2FMxbPN0Rmwj/+hSk1n1I1/rJ+Z8U3LhjFzhF
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
TpzvlsCu03DN0Aaid7AECaNv627ifEW4BFe0J1q2ysjeREuQPN160jauF42X
4EhI2pl2R2l8sgSNi6SzbaRcHyXB6NZOOsuPEb0kEswYssnwPN9/lEpwsXuF
MGgD8SdbgtPGpmvCuL45R4KW44NOmH2meHGvBK8apdt6D+d8qgQaae8i/Nk/
HZbgr3Lf6tNZrP8SdBk0RWfBX8o3n1LI6yXl5ryBnG+T4MMQ+6d3l5I8Fksw
ed1pm4hzXH8hwYvWq4fn+JI8XJFg1xODTcrjOB8vwe/LP6quOFH8cEuCfc1h
DSNH8vm8BJ3vdm0fGE7yVSXBjZx7B6/VUj1IjQRX5y8+834c8b9Wgl9ef86G
p9H6dRLEnons9aiV/b8E21cdO61Xw/VcEpTGb3i27xCdFzVI4NZ5vU4r7zca
JbAd9rDE2Zvk8ZsE55zKW9aWcb2XBJKdju8f8XtebQr6xT1ufnGE63/T4ZbQ
nC6/QvagYzou/dhuU3aH2srpOKPcW/pYh+itkg6/xf0iWhP5vlQ6jm/+2eVe
DPFHLR3+TdKpp1Zx/J+OvSeXqKmmUTynmQ5h2fThvU7x+UE6/oueeVApl9bT
Tsf+aU2bOqtTWycdgc33l73tSfwZn47N/z2++bcL3y9KR9LSnC/fP5G86qXj
dfqsk4nlZL/003F2+dhhJd14/5+OurHTRC8nc/1hOponeRoqhdJ889KxwL5p
4H+dCH6TdKhaRVSd8KK2aTqC4lXPgs9TzdLxXd10aWQt+TOLdMRfnDC9gxKf
V6bjrWj7+YNDSf6s03FtaqutK9sTm3RgpdeG1fw+jYNive7PhzgFEr2c09Hy
d4S3Wgp975oOa5UOj3s68Pl2Orat2e7lI+b4Px27atV1/MJIHvzT8eGqwY/X
HuQPgtOx1vbqowgJ339RrD/2z8nqKMIvOh2lR4Pdxr7meph02Ox1cOjF/jI5
HQUTBb9b+f0nQTpuTejmKuN6Pkk65JND+w2PoXhEmo6bC7dV+v4lfLPTkVWY
cNmY6z9yFPxN7+pyYyjNvzcd3dZP33Guge9TKej55vbYh15knw6nw7eom8G0
rlxfmY4t80NeV3D8eyodPZKbTihxvVJROlYO+tu9sBvn/9Ixya1dG/g91FIF
f76Mv/JXlf1/OtTHeXkHveN8fDoSaoV7HrvQ+rfSYXs9p+P5fVyfpaD3x8DO
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
0sr2V44bfe8hwT8P2cU8rn/nJcFby5EvpZ6kTz4S+HzVOPdKpe9nSCBvZ5kZ
xviOsyUoCplxyaQh45dI8GfNs+IG1mQ/AoT+k3/O68T1LhdLUJt/e952xq9c
LkHD9bbzyr/y/b8E06fX258iY/2XIPVU1Y5PjH8RIoHj7Qn975nR/MMk+H4/
Iia0Hft/CUZPnpk52JrGHyXBgrh+5b0sWf8lOF0jtYjjeNFdEqxaUpplyeeD
ewV5cR66/1It9Z8gwX8Wa6JOvOL4XwmOvrrSKpDroYskGBQoTf77jfgpleB+
7/ZnxjJ+pVKCEW887jaW0npUK4Eq6sidLM5XTZXgr82mm9fGkL08LgEuXhx0
Mpj+T5fALXV0ceMJfP8njM/w0dcqnfVfoG/F8fp/m7H/l6Cp5cI2/6yJXnkS
5J1Kda5ay/d/Ar8OaF+fvc76L4FpVPOrhZxfXijBhe/hc7z7Ej+LJBhW0OL5
pXuM1yeBu9ubt4/4vK9Eglnxe0pWHmf8LgnatbzaePdWml+ZBPMnPHIw4fq2
byUIv7hi50cR7/8l2Po4fZYPxxd9lqDLl9/hz3JY/yW4EjI4J4XPH2okOPZy
wNjIAez/JejeylI1dzzf/0txoCCjs4jjx+tKcWnxsh/655wPJEV4/H/FPtFk
f0ykCGqwfdVq3s80lGJ4SeCgKcNovKZSzA7asH7nXuKfmdD+c83M74yXZi6F
34/Tl1b8D19Yin4X+sQ3eEL8aC7F1HXtHkQe5HxiKfT1+yYv5HocVlIsPny4
Zuozzi+SwtfNRGrcjcZnLcX77EFWS0HybCP872pbfJzPb2ylyN3T/POXdXSf
2UGK1O59I9yXU/t2UhTuqDsokesfdZZimOnKdjEnqf2uUgyuRKmc63V3l6LV
wB8zt9tQvIS9FD3qDO8bmUj67yBFlytDb/RaQfRylKLzXxd9+TSupyFFaOnN
h+uUxN++UiTeMv1i/Y3tmRRGDiVBw7l+xwApnjYeO3D7cMZTkaLPk8Nd9KdI
foZIYeNx/cyV3fS9ixR7g7/NVPN611UKPD2madOH8x+kePRjh4vJDJq/uxTB
jzRpLR1ofCOl+NJ8y8B8Z2pvtBSTe90KXMDyNlaKLIuHW4rvk3yPl0JeNGFL
KOO7eEixqSD2fBjjoXhK4RnSJkx+lu9PpZi1aE0zm8HUnrcUV6Y5FgRJiZ4+
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
mPOlizSIbVvxPd2Uxv9AsM92W6wieX1UrMHI+bHHTuTR948F+/43t0W+F+Nt
CvR+NcEy4ibNr1SQ33vFns9j+fxfsAee+zY5zOL8Pw1OH/7ok8L1Scs0KAy6
0dazA71/rcHGMc13VTak57cadLPLir/sQ/akQoNX5x9dH72d/b8w3geBLu9O
0/NHDb7XX/K5rDn7fw0uThxu1vg7/f9VsMflPZd9ymI8fw1K2nTKrDQh+nzX
ILT8Wrt2+7i+twaTJp0Oqeb6Eb80qDyatVzJ5zO1gn9e9KfWjPM3/mpgurNe
Wkgx2XsjLXa0ti7f1Y/4U1eL11NrZN/30vyNtQjeZN6x1//y/7To93RJXtZA
kueGWvRaYnQxIpvem2px9u/kuKYS+t9Mi9jDhW1WZhI/zLW48U1nd4rxxC20
UI567XGR4zWaa9FyrLt30gXGE9bi6ISzbpPH8f5fi8Tm6O0byPiiWogG2JyI
dCf6Wmuxtfx4s9mcz2ejRZHyRv8uY9j/a/H1ldnYk4yH3UGLacsnu278Rfpn
p8WuMTs8vssZj0iL34ebvG9zjeP/tHBZ80/zvYLxSbQYmxbxfTXj29trkdt/
0NrOfD7voMXw60vdrJ9z/L8W50ZNr/yP69E4aXG+R/k1948c/y+8D346VNWI
7/+1cN7/fNuUP3z+r0X+ku87PTowvpEW4wYXhI1jfRuixemR978XMf6OizDe
5zmKn+fIP7tqsaltcNivCs7/02JUh72P144ne+uuxS+p1ccz4YyHrIVZiJvl
q+bU32gtPnXrU6li/R+rxf42ahOdC9FvvDDf5cXPAgbS+sxDC/efQytNuV6R
pxb2xywH+HG9cy8t1qVnmhxqRfzyFuafYVJ4ge8TfbRod/Fm9JdpRJ9pWtwZ
eOzWAL5PnKHF02y7Z8OH8/5fi5XNf+hvT+P4fy12Hxz8sjvfj/tp0b7f8CQn
b47/0+Lnme0Jy0qo//kCve99mz+T890DBP0Y/djappz6DxT0weeaR/grotdi
LeJ67i6330DyvVSLFVF7yzcs53oNWkwe5X3iAdejWKlF66+av48mcfyfFk4L
i0pfj+f8Py2OtLx+ZfkTWq+s1WKMS6PhM0dRvPR6ob28Qbduybm+oxbfjmxe
48XnNaECvZ89ndnxP6JHmBar1zya6zOansO12Ob38vXRMo7/1yInwnWDWML5
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
DaT7f/a98/SME/44HyslnN0/PrSVo/N/JSwZUqWloHz2uUrYk3vUbh7Vv5jH
xufd2G+6P47XTgkfkv/N2Ev3PfZK2Dxr4bShqfh+kRJydu6V18xGfixRwueN
YTHVASivDkqYGfI1uv8ClOdlSihbHzY6eCDOZzmj53rY+06Xzv+V4LR+ckSn
LzheVyVU1ZXEzBWQPivZ+D+s2plB+rtaCT+qfqVuIrx3dyUY/2oquJ2F4/Vk
8h855fivT7T+M3nTvBZlr0n3/0pYrPsw93oh6qOvEv7rvCrjFk/7fyUknRse
u5rq3/kr4Z9517y+V9A+BirB7ltE2JoOdP7P2l+y+vTJI9hfsBKeuSQarSV8
+81KkK8Mvhq4EN+HKcHr4KV0azq/DFeCReaniqznlP+nhBsBje+fbEB67lDC
E8uioMXk70Qoodw08fDFEqR/pBJqlH0fbWlE/kSx8S6903Mi4RfuUcKqU/8a
j9ShPsUoYWKPwI3581Be9ithIX+4UynFux9QgvPgb73mTMJ88DglnFGcnx50
k+L/lDDsxbn93j8J/0cJdcIIn4wWwv9RwqbQ4dPmayD9TihBJj90NIXOS04p
YUaC3p/bven+Xwmhp3Z/vTsU/z+rhNITL1T3/K/+jxLyzit2t/lL+L9KeKc5
Yd4QOp+8qIR4HbcIG4rnS1ZClNr4gr9H0P6lKCEzIWPCMqpHKVPCG5XOD898
IvwfJajNbzXdHo/2n2Pyu6PAfPgZwv9Twt/oLnW7/HD8ErOfg8bWvJFR/p8S
riZavMj+gPTNUMKYPXoqjmOwvUwlbE8Zt3ZPGPafzeRdgAwtwru7zug/ytYt
sjfKyw1mfxZPfedP630ua097SbU23V/nKyGRX/4oagM+31bC0Hy3BUnTkT4F
SritKC/PW0X5/0rgJ1xPDRpF8f9MPkqPnvCgeggPlGD755OdSSfkZ7ESemQn
ScfIXyxh9sbq8Ot7hJ/zRAkrHmub/0fnv0+VcMIxW3PAJ8L/ZfRPUtU++wL5
Ua6EF1237B0RivpboYSgoJyyUEfK/1PC7+qvD8eo4P+vlbDS3buzH9m/N4xe
GY3Dcgh//a0SLp+84h3RA9t7p4TmP1dddgTT+q8EHXcuJeww7sc+Mn1Z2tjl
OOHB1DP74RjTzv0kyttnJUzrNfrGBapf8VUJ50fEDea1cX6NzB66rx9xZgTS
+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
dyP6I7kSVG58mJpwAL/PY/Zu6TO3rcuQXvkS7I/QbTm6FvXjFuvP8tOR25S/
fpvZv1RXY32qZ36H2bPCXxsdgin/n+lDpsNsvdlIr7vMHnu/uhf0G/lZyPyB
xlejC3bj/0USzNyVv/PTEMKXk2B6x82r/6P8gPtM31+Xzkmh+88HEmT+aI5R
T8TxPmT2MGztuiU5VH9GgmU7+F/7XHB+jxg93QtNDG7ieEqYfbzs3TiiLbb3
mPm3p+JXTOuL/tUTCZ5JV8en3MT3pWy9Or7P3i+R8OrY/kiet/FVKvL3GfNX
fb6XdKf4gOfMPx73rMP6Chx/mQTbJve+Np3Or8slOPdo7rd9S/D7F2z9fJm3
8U4r1bdj63sX3yO3HVBfXjL7EWxhdHAjvq9k81d1e6j1GfX1FZOPV1fcJ1G9
r9eMHglv1PbS+l3F5O1g0TZbyj96I4GP7rPgu6Po/p+tB/XmK/rPwf7eMvtf
tfFhWiWOr4bJ846NLl80kJ7vJLg4R+tdV9ovv5fg85Q51f8OUP6/BHsylrya
EYvPH5h/eLO3xuPJeF/zkflPSdrBoeco/l8C+7JjlyYRnny9BN4O5oPjTuH/
n5j/6vHItaAD5f8z+1AQvqNLJeX/S3Ai55bsBcVHfWX+S+bgz0Z7UT8amP2a
2SvR0RjfNzJ/599s+wO70H58k0Cn07iJL2g/8V2Cr+acl5zip35IoMgoaqfq
gfT+yeR1QLhn9EJs75cE5x1f5cyWcH3+LcGfBbNG5bYgvf4w/2JNwwk/JX7f
xPQp5dzL4R9w/n8luNBrehYPVN9Xgu0DpmRvMMLvW9h6ObX0wL5HKL//JPDL
d3lmbIH2s5XJ5/CEu0V/UN/bpELKBwf/K7S+qKRC6TQX/7BwqgeUChlD9etU
M1Df2qVC7bPI1Yl/sL/2qZC277DJPsKTVE2FGQ6ve9iSf9shFVYEBJ9siMH1
qmMqtPIL0/60w/GrpYIyba14ivZznVIhwKit62+K5+2cCoFyTd0eX1A+u6TC
qo7CrkiKR1RPhdPL7vxqasD3GqnQu6Veb3UzvtdMhbgGnfoP+1E+uqaC3uu6
eT31cDzdUsGoW7uH7QnfpnsqnHo4sCTNGeffIxWeZ34Yd/UFzr9nKiwYedO7
vSG23ysV7LVTjqTfxfFqpUJDzrbJt3xwPr0ZfTYO9c+dgvTokwor5V/P7/VH
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
s2/LvG9dNEH7spqDrluHGU58g/Rfw/R9tmb5oimU/zN7+29shM8u1C9/Dk7r
jde7moTjr+Ogw+sZfUszEZ/1zN9k/NZZeg75EcDBtVcZ725QvhrI7I/O9r9f
qX7mBiZ/63pdMZhG9f+ZfKnvap9I+z+bOJg+dmNcfTnm35sZvbwqHv02RXsY
xEG+88tz2zLR32zhYPgao7Wp+uiPgjlo/8BU2juMzv8z/ibOTKjeSPv/jH/W
f2b85fE5jPFvU4KxVw8cbyvz1+MDvn9pxP/DOejxeHNWhRXyP4KD67/Ttj+9
Ruf/GX0u3DNqr0L5P7PHFtZ6GvXUH5SDwU5zp1sMx+93Mv+dmPlnG52XjeSg
dveEdlFUPz2Kgz/XRvzaUIz82cXBrrbzw0/EojzvZvb1oUmSvT3V/+cg7NOT
rzllKI97OXjXdU2uvh71F+XAa4vTf1Hj0Z7sY/p0Z2ygSRriE8NBTNl/Yg+q
9xTLQfT8OD7Bk87/c1CT0LVjpDc+xzN/n36xvccShGc/BytbW4249xzlM4HZ
I693nXtSv4IDHFSd2BxoMBrlK5GDmV30TX/U0vl/Zi9Tem5M0Kfz/xxUvBK8
z6gg/oc5gFmmGrHU7zeJg5D79uB8HfFL5iDqyZcFlr1QXlM48LaaHtg/CvFJ
5WBj/8rmpHsIz38czNtsqP5rBY53hPFLpUP4ALpfdJSDl947xfxgxO8Yo08V
RA7viuMd50Bhekqr7Czmg2ns/eLTnYfq4frTCQ7Sjnp9TztP9f84eNHzzb8P
FD9lsPfNu+x86LzjSQ4kM7M1kyfg+JkcLOic6Jp/E/Upi/mb0cvTYxOo/j8H
fZcJxyz9UX5Oc3D7XLDllDQ6/8/ktdfqIWm1VP+PxUMD/zYptVG+znKw4u3r
ChWqL3WOg+BVb98s10X+5XCwvsE+tqKRzv8zfX11XHvYT9SvXA5sk5NctlzC
+fI4sMhZsas79R/K56DLIMP296mfwQWGz0F9C4NQ/F7B5nvx9G0D9ZvkmL1s
aVXRoxr/51l8NeDZ1sg1yA+B0S9r1dtKPYRH5OBcYZTL15/4XmL2bfOAr4Op
/7HM5pvg1PFPOo6vZPHAp14HulP98wKmHxsyA+5Sv+yLjJ4PtqVa0H7tJQ4m
rvygXkXrAYVMvu+FRSjofl4RB+PstlWdpXqylzmwyrCenEb3Q68w/55dGbDt
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
/+KI
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 7258.}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.604836233477276*^9, 3.604836246557527*^9}, 
   3.604836612941778*^9, 3.604836797944265*^9, 3.604837180519362*^9, 
   3.604842378431816*^9, 3.604855754585693*^9, 3.60485707951472*^9, 
   3.604997746875101*^9, 3.6049986031627073`*^9, 3.61703639322834*^9, 
   3.617879716758686*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfVt0XVWW3cV6+QUUUDw7ndBVne50d/KRSjJGfvKRj6Q+Mjr5yOivZODi
pYKqsuiGiqgA6gIjTIEwhcqAikJgWjxkoMRDhWUbPxD4Yixs2ciGi5FBtgXI
yFjYwtfmGgQ7a+695j77nHvuS7hGqG6fMfS4556zH2utOdfaa++zz19f+tOr
rlx86U+vvvzSi79/7aV/e9XVl1938X+95lo5VXdaJnPaVZlM5vDFGfxv5F/9
ZY+r8Us/VPj/W/ZPnSnk86YwY7/J/Cs9Z2YKJp8v8FPRdXP8NzNyXV5+m8zF
Ze6dKeRN3t2ceu8f8bp8+euqLe/iKu9N69tFKW0pK4MKsrrIf1OlTCuUd3G5
eyv0d75T/Rn2T4P8mjb9HS2mubnZ/vTlpjLf1e8Ko32muaXX5I07pnP9Uo1c
lak3ze39Zsqdxf3udBNu57WmQ4tsbu4wI9Mmc34ghXUd9jstrk5+t5mRfKkq
jMn1d7CK9r5cySousFWcbls12NXqe9XWPShnUu9h8Zlqyv8jFeFob5vpyeVL
XRdvcn1UZCisukhYUuZ59vdce8m6sOU9WZV/6q0VVRKvxamgyUyPDpgWtrm1
24zl/W2Zk1KFaDk/YlqbW02uQNs8Pc3YKonQNyeSoROTt+FGM5ntlF70GwCm
MD4gN7SbsRnzHfv1uSaf65VTNOMJ0ym19I/Zi81Am4h4YKxEETMmK3ba1j9m
7xwbaDfNbQO4Rnt5vly7zra6Z2jcXjMzM1OyDjM5aMsdxemZMdMu1wyMH6tc
xyja362CnzI9qC83nX7fLOuYHs+Z4eEhMyQ/vaKh9p51Znz6RA11FEqpwdeR
135MBv3oFlWn31eLnqI6zMy4taR+Z9FmpKfFtPTkTkodF9CyVb+DkzNq2WfV
Zj/p8svMi1v1SE+r6RoisKZMt4BpOB9Z9Whg1RZr3Z4tp4e7TGv3SIkipk1P
S6sZmubFQ6a1pQf0qD1caAoTQ7ZVbT1DZqZM+fmRHtPSNTRHQTksvNU98kGp
4ln6DHEsJ3tbmkvecqCm0p0FnC7U3GKlOzA4YLraWkxrZ68ZmTxYroZMvIrp
UqL3RiZdKES9kNtarOGk3nawFtUEhpzPWYYeViczJQbWUuq+Guu40NZxlhnu
bjYtvZ5WazKXuOjqvOhMMT3netqCYlFcW2jIM2NxQ25rCXoy0m17kl6EmE9r
0LL8sLSs1xqy6+EC+TUp10gvu8WQS5Sdz/WY1q5hbwQj3W3WzkqUzaLHBjrV
ffbJ6fSmHKitaJowSAEkNihNHe9rF7Iv2F5XX8V0KaHTvGYmBm3rO3sHzECv
64nwWfptB2tRSmDChZyYJSTUaXp7u2wdvSNTJ6UOmvCM5dI2YyUkRy2GEhdd
nRddqgk7N2KPGXSrBeHqxUFPO6SX/b3tUcAs5tbi4h97jPZKUNczUqKovOm1
Xt2hvaDcPh146KnRrMmOas8Kw/K93HcwvQ6YdBTxFEyfsGzPyIGKdZj8pMmN
TrjvJ7JSNiSb3rYDNdbh2P888Y79lp+7O1rleki7lvKnS6kiCgBGTRsMLTtk
soNDZiI/o4aRclsJ8ZWoIhAT+LbTjE5OmNzwiBkdGzdT+ZmTUocbKn7bBi7N
ndnSbS9hMiXElogtpkd6bCg2Ia2ayHZboxVV/In9+lwzMdzruY2DD3jqruwE
DEMcg4tASxRjHUlLV1aqL5hst2281//EujZ73ZToZXq0XyOl9PLFk9nOZqUC
Z4+tdpSYUj6Ln5lYZ6ExLOUXLMk52afcUkvxF6lkbAwH88oxvqy+2BLSiswK
SIC6hsWcpibNxPiElX76fTVpJFZHXyti0lH7f7/839o/fpLrKEjbx834xISZ
GHN+pmd4qhZrKSXDeIzcYKvKCm27gWObGRzPa/bi2xIg9/sqLBbGs5YZXD4g
awqKkMT9vNj0tEbjYxnd+NSCjBr6gjFsT3a8TPHiwLPdPrXQrdemFB+kLmbM
SH9nUP5EqXtqKt9Z8AKn9TbFV63lpoj7QkXGaH+HbzMw7QCSLt4qVeHLnpka
MZ0tWnZbj7bx65Xt5H2O9d3tvt0SKko9LtdQtWkk5FUXyMtHEvZDDanZ8P/5
rigp+xL8Os2dPcv+qbMNYWWNJ/lc0x9gHafa/I+nDlveaaeM/lSb/wnVUZXR
/9U36NzZf/DNtL//5hv0ffT1N6lVNX5/pp57IfuueXzNW/bTGXrusxNfmB3v
fGQOfnLMBr0499bYIbN34oh+cr/HPjxitrz5of00Pzj33Muj5sjRQuY/6LmZ
L780J75wU5wL9Nwbo5Pm7b2H7Ke/tL8b7TWbd31oxj+aRt1m884PzKfHTvwX
vWX/gWnz3geH7SfOSH80lTeffPqZ/fS90r2t13Mosfn2Nebd9w9LQPjVV185
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
rFsu5xKOTpxXF/+fOe3/AYHgW70=\
\>"]]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysis", "Section",
 CellChangeTimes->{{3.604836742776473*^9, 3.604836743694099*^9}}],

Cell[TextData[{
 "We\[CloseCurlyQuote]ve tested about 7,250 candidate probability \
distributions for X\[CloseCurlyQuote]. The graphs above show that none of the \
distances is zero, and hence that none of these distributions for X\
\[CloseCurlyQuote] make the joint probability distribution uniform. Now this \
doesn\[CloseCurlyQuote]t ",
 StyleBox["disprove ",
  FontSlant->"Italic"],
 "Colbeck and Renner\[CloseCurlyQuote]s claim, but it should give us pause. \
(And look on the bright side -- there seems to be a limit to how far off you \
can be from a uniform distribution -- the plots have a clear upper bound \
too!) "
}], "Text",
 CellChangeTimes->{{3.604836748490651*^9, 3.604836769122006*^9}, {
   3.604837004018798*^9, 3.604837015163666*^9}, {3.60483708309063*^9, 
   3.60483709153153*^9}, {3.604837219779852*^9, 3.604837329141161*^9}, {
   3.604837362948286*^9, 3.604837407411922*^9}, {3.6048374866828814`*^9, 
   3.604837539624408*^9}, {3.6048417073164577`*^9, 3.604841734227059*^9}, {
   3.604844227004448*^9, 3.6048442288799553`*^9}, {3.60484450657241*^9, 
   3.604844527930833*^9}, {3.60486640996581*^9, 3.604866417066711*^9}, 
   3.604997825740246*^9, {3.604999342500424*^9, 3.604999343176865*^9}, {
   3.6178797406865807`*^9, 3.6178797435769787`*^9}, {3.6649037189666853`*^9, 
   3.664903721047937*^9}}],

Cell[CellGroupData[{

Cell["The Minimum Distance and Its Vicinity", "Subsection",
 CellChangeTimes->{{3.604849076791541*^9, 3.604849079452197*^9}, {
  3.604849111311719*^9, 3.604849118380447*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s focus on Euclidean distance and see which probability \
distributions for X\[CloseCurlyQuote] resulted in the smallest distance from \
the uniform distribution. \
\>", "Text",
 CellChangeTimes->{{3.604837566361951*^9, 3.604837615159916*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"minED", " ", "=", " ", 
  RowBox[{"Min", "[", "euclideanDAll", "]"}]}]], "Input",
 CellChangeTimes->{{3.604837671552722*^9, 3.604837685614835*^9}}],

Cell[BoxData["0.07768114314297904`"], "Output",
 CellChangeTimes->{3.604837686651252*^9, 3.60484237941918*^9, 
  3.604855758827142*^9, 3.604857080621719*^9, 3.604997847383967*^9, 
  3.604998603280016*^9, 3.617036393620183*^9, 3.617880128528975*^9}]
}, {2}]],

Cell["\<\
In our generation of about 7,250 candidate distributions for X\
\[CloseCurlyQuote], this minimum value occurred in the following position:\
\>", "Text",
 CellChangeTimes->{{3.604997875157449*^9, 3.60499792315698*^9}, {
  3.6178801475967197`*^9, 3.617880150123693*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"minEDPos", " ", "=", " ", 
  RowBox[{"Position", "[", 
   RowBox[{"euclideanDAll", ",", " ", "minED"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.604843294578586*^9, 3.604843306935437*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "403", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.60484330810358*^9, 3.604855758913001*^9, 
  3.6048570807109203`*^9, 3.6049978634158*^9, 3.604998603316567*^9, 
  3.617036393649734*^9, 3.617880155050695*^9}]
}, {2}]],

Cell["\<\
So now we can see which probability distribution for X\[CloseCurlyQuote], \
i.e., {p(R), p(S), p(T)}, generates this minimum distance. The X\
\[CloseCurlyQuote] distribution that is the closest to giving us a uniform XX\
\[CloseCurlyQuote] distribution is: \
\>", "Text",
 CellChangeTimes->{{3.604838228032609*^9, 3.60483826839755*^9}, {
  3.604845554022208*^9, 3.604845591223516*^9}, {3.6049979394909554`*^9, 
  3.604997988908059*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"minProb", " ", "=", " ", 
  RowBox[{"xPrimeProbs", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"euclideanDAll", ",", " ", "minED"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.604838287385754*^9, 3.604838421846365*^9}, {
  3.6048433354185877`*^9, 3.6048433668410883`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.2556732846802465`", ",", "0.2417710783012632`", ",", 
   "0.24701853829008558`", ",", "0.2555370987284047`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6048383132480783`*^9, 3.6048383257999*^9}, 
   3.604838423752829*^9, 3.604842379456258*^9, {3.6048433382928257`*^9, 
   3.604843367900694*^9}, 3.604855759013191*^9, 3.604857080739985*^9, 
   3.6049979930165462`*^9, 3.60499860337951*^9, 3.6170363936766653`*^9, 
   3.6178801785883827`*^9}]
}, {2}]],

Cell["\<\
We can see from the above X\[CloseCurlyQuote] distribution that it is pretty \
close to being uniform. Later we\[CloseCurlyQuote]ll try the uniform case for \
X\[CloseCurlyQuote] to see if it indeed generates a uniform XX\
\[CloseCurlyQuote].\
\>", "Text",
 CellChangeTimes->{{3.604998015934355*^9, 3.604998097323844*^9}}],

Cell["\<\
To get a better sense of how the distributions of XX\[CloseCurlyQuote] \
behave, let\[CloseCurlyQuote]s find some of the probability distributions \
around the minimum distance value. To be more precise, where are the values \
that are within 0.001 of the minimum distance?\
\>", "Text",
 CellChangeTimes->{{3.604842539340898*^9, 3.604842604667264*^9}, {
  3.604842922467758*^9, 3.6048429366202517`*^9}, {3.604845908946398*^9, 
  3.604845975261836*^9}, {3.604998107359007*^9, 3.604998203769599*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"minProbsPos", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Position", "[", 
    RowBox[{"euclideanDAll", ",", " ", 
     RowBox[{"x_", " ", "/;", " ", 
      RowBox[{
       RowBox[{"x", " ", "\[GreaterEqual]", " ", "minED"}], " ", "&&", " ", 
       RowBox[{"x", "\[LessEqual]", " ", 
        RowBox[{"minED", "+", "0.001"}]}]}]}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.604843070275484*^9, 3.604843228144133*^9}, {
  3.6048435246704893`*^9, 3.6048435490143433`*^9}, {3.604843638165127*^9, 
  3.604843664663018*^9}, {3.604843697995224*^9, 3.604843710507422*^9}, {
  3.6048438432431583`*^9, 3.604843847159878*^9}, {3.604998168709034*^9, 
  3.6049981982147617`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"403", ",", "1538"}], "}"}]], "Output",
 CellChangeTimes->{{3.604843151795745*^9, 3.6048432294864063`*^9}, 
   3.604843528522594*^9, 3.60484366737293*^9, 3.6048437114642076`*^9, 
   3.604843847816028*^9, 3.604843927529241*^9, 3.6048557590977592`*^9, 
   3.6048570807651033`*^9, {3.604998159266775*^9, 3.6049982077670317`*^9}, 
   3.604998603465096*^9, 3.617036393758478*^9, 3.617880202357872*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"minProbs", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"xPrimeProbs", "[", 
     RowBox[{"[", "#", "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
   "minProbsPos"}]}]], "Input",
 CellChangeTimes->{{3.604843716283553*^9, 3.604843823375737*^9}, {
  3.604843919613751*^9, 3.604843921369791*^9}, {3.604846487382296*^9, 
  3.604846505800832*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.2556732846802465`", ",", "0.2417710783012632`", ",", 
     "0.24701853829008558`", ",", "0.2555370987284047`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2495036173164087`", ",", "0.2691742660965313`", ",", 
     "0.22512078642430655`", ",", "0.2562013301627535`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.604843762382079*^9, 3.604843827092149*^9, 3.604843931734317*^9, {
   3.604846491939033*^9, 3.604846506707954*^9}, 3.60485575922272*^9, 
   3.604857080793665*^9, 3.604998217413316*^9, 3.604998603571725*^9, 
   3.617036393793931*^9, 3.617880215282996*^9}]
}, {2}]],

Cell["\<\
And how close to uniform are the joint probability distributions generated by \
these probability distributions for X\[CloseCurlyQuote]? \
\>", "Text",
 CellChangeTimes->{{3.6048439577994432`*^9, 3.604843993542099*^9}, {
  3.604998630677475*^9, 3.604998631253677*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"minJointProbs", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"jointOutcomeProbsAll", "[", 
     RowBox[{"[", "#", "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
   "minProbsPos"}]}]], "Input",
 CellChangeTimes->{{3.604844032667231*^9, 3.604844085657819*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.0525`", ",", "0.0481`", ",", "0.0505`", ",", "0.0511`", ",", 
     "0.07775`", ",", "0.07135`", ",", "0.07665`", ",", "0.0737`", ",", 
     "0.03745`", ",", "0.03565`", ",", "0.03815`", ",", "0.04025`", ",", 
     "0.089`", ",", "0.0822`", ",", "0.08595`", ",", "0.0897`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
    "0.04885`", ",", "0.0548`", ",", "0.0462`", ",", "0.05235`", ",", 
     "0.07505`", ",", "0.07605`", ",", "0.07015`", ",", "0.0782`", ",", 
     "0.0366`", ",", "0.04115`", ",", "0.035`", ",", "0.03875`", ",", 
     "0.08605`", ",", "0.09175`", ",", "0.07935`", ",", "0.0897`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.604844087369671*^9, 3.60485575930899*^9, 
  3.604857080824534*^9, 3.604998603616802*^9, 3.6170363938235397`*^9, 
  3.61788023049641*^9}]
}, {2}]],

Cell["\<\
Not that uniform -- some of the joint outcomes are more than twice as likely \
as some others in each of these joint distributions. Nevertheless, in picking \
distributions for X\[CloseCurlyQuote] we should stick as closely as we can to \
the minProbs values above.\
\>", "Text",
 CellChangeTimes->{{3.6048445479455433`*^9, 3.604844572125472*^9}, {
  3.604844617659704*^9, 3.604844659083178*^9}, {3.604998658544093*^9, 
  3.604998691572427*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Maximum Distance and Its Vicinity", "Subsection",
 CellChangeTimes->{{3.6048490967813883`*^9, 3.6048491301662807`*^9}}],

Cell["\<\
Which distributions for X\[CloseCurlyQuote] should we avoid? Obviously the \
ones that generate the biggest distances from the required uniform \
distribution. \
\>", "Text",
 CellChangeTimes->{{3.6048451086425447`*^9, 3.604845182204691*^9}, {
  3.604845868505999*^9, 3.604845869759974*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxED", " ", "=", " ", 
  RowBox[{"Max", "[", "euclideanDAll", "]"}]}]], "Input",
 CellChangeTimes->{{3.6048454602145443`*^9, 3.60484548373481*^9}}],

Cell[BoxData["0.4251969778820165`"], "Output",
 CellChangeTimes->{3.604845485085556*^9, 3.604855759384212*^9, 
  3.604857080856295*^9, 3.604998603733445*^9, 3.6170363938406067`*^9, 
  3.617880293879353*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxEDPos", " ", "=", " ", 
  RowBox[{"Position", "[", 
   RowBox[{"euclideanDAll", ",", " ", "maxED"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6048455110916767`*^9, 3.6048455175106077`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "6569", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.60484551849236*^9, 3.6048557594171133`*^9, 
  3.604857080884009*^9, 3.6049986037821817`*^9, 3.617036393857937*^9, 
  3.617880298433674*^9}]
}, {2}]],

Cell["\<\
Which probability distribution for X\[CloseCurlyQuote], i.e., {p(R), p(S), \
p(T)}, generates this maximum distance? \
\>", "Text",
 CellChangeTimes->{{3.604838228032609*^9, 3.60483826839755*^9}, {
  3.604845554022208*^9, 3.604845591223516*^9}, {3.604845761934279*^9, 
  3.6048457633879013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxProb", " ", "=", " ", 
  RowBox[{"xPrimeProbs", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"euclideanDAll", ",", " ", "maxED"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.604838287385754*^9, 3.604838421846365*^9}, {
  3.6048433354185877`*^9, 3.6048433668410883`*^9}, {3.6048457674200373`*^9, 
  3.6048457767510777`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.03205189054223356`", ",", "0.9451498017842701`", ",", 
   "0.0040491574347540915`", ",", "0.01874915023874224`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6048383132480783`*^9, 3.6048383257999*^9}, 
   3.604838423752829*^9, 3.604842379456258*^9, {3.6048433382928257`*^9, 
   3.604843367900694*^9}, 3.6048457787746487`*^9, 3.604855759442181*^9, 
   3.6048570809121113`*^9, 3.604998603815124*^9, 3.617036393874151*^9, 
   3.617880304739633*^9}]
}, {2}]],

Cell["\<\
We see immediately that this is a very imbalanced X\[CloseCurlyQuote] \
distribution. The probability of outcome S swamps all the other probabilities \
by at least an order of magnitude.\
\>", "Text",
 CellChangeTimes->{{3.604998717605269*^9, 3.604998774538763*^9}, {
  3.617880321881528*^9, 3.617880324991301*^9}}],

Cell["\<\
What are some of the probability distributions around the maximum distance \
value? To be more precise, where are the values that are within 0.02 of the \
maximum value? \
\>", "Text",
 CellChangeTimes->{{3.604842539340898*^9, 3.604842604667264*^9}, {
   3.604842922467758*^9, 3.6048429366202517`*^9}, {3.604845797128747*^9, 
   3.604845799198065*^9}, {3.604845950191774*^9, 3.6048459978608932`*^9}, 
   3.6048465486271353`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxProbsPos", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Position", "[", 
    RowBox[{"euclideanDAll", ",", " ", 
     RowBox[{"x_", " ", "/;", " ", 
      RowBox[{
       RowBox[{"x", " ", "\[LessEqual]", "  ", "maxED"}], " ", "&&", " ", 
       RowBox[{"x", "\[GreaterEqual]", "  ", 
        RowBox[{"maxED", "-", "0.02"}]}]}]}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.604843070275484*^9, 3.604843228144133*^9}, {
   3.6048435246704893`*^9, 3.6048435490143433`*^9}, {3.604843638165127*^9, 
   3.604843664663018*^9}, {3.604843697995224*^9, 3.604843710507422*^9}, {
   3.6048438432431583`*^9, 3.604843847159878*^9}, {3.604845802311541*^9, 
   3.6048458892590027`*^9}, 3.604846529099709*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "47", ",", "1198", ",", "4348", ",", "4517", ",", "6569", ",", "6867"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.604843151795745*^9, 3.6048432294864063`*^9}, 
   3.604843528522594*^9, 3.60484366737293*^9, 3.6048437114642076`*^9, 
   3.604843847816028*^9, 3.604843927529241*^9, {3.604845845261305*^9, 
   3.604845890201543*^9}, 3.604846530908998*^9, 3.604855759500484*^9, 
   3.6048570809371443`*^9, 3.6049986038525763`*^9, 3.617036393907583*^9, 
   3.617880334889867*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxProbs", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"xPrimeProbs", "[", 
     RowBox[{"[", "#", "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
   "maxProbsPos"}]}]], "Input",
 CellChangeTimes->{{3.604843716283553*^9, 3.604843823375737*^9}, {
  3.604843919613751*^9, 3.604843921369791*^9}, {3.6048460090905943`*^9, 
  3.604846016325884*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.011714361153187802`", ",", "0.0007123959003538793`", ",", 
     "0.0796145119988072`", ",", "0.9079587309476511`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.04409824884034097`", ",", "0.9108823205669228`", ",", 
     "0.015049436963723073`", ",", "0.029969993629013203`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.010203457178188158`", ",", "0.03149359371280891`", ",", 
     "0.9309187805028654`", ",", "0.02738416860613757`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.019298773675705982`", ",", "0.02943009672415675`", ",", 
     "0.010789670729895562`", ",", "0.9404814588702417`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.03205189054223356`", ",", "0.9451498017842701`", ",", 
     "0.0040491574347540915`", ",", "0.01874915023874224`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01579138883510911`", ",", "0.0013516615022266532`", ",", 
     "0.0718255296644601`", ",", "0.9110314199982041`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.604843762382079*^9, 3.604843827092149*^9, 
  3.604843931734317*^9, 3.6048460173740797`*^9, 3.604846535013364*^9, 
  3.6048557595283422`*^9, 3.604857080965929*^9, 3.604998603899208*^9, 
  3.617036393925123*^9, 3.617880340482177*^9}]
}, {2}]],

Cell["\<\
It\[CloseCurlyQuote]s apparent that the distributions that are far away from \
the required uniform distribution are highly imbalanced -- there is one very \
large probability value around 0.9 and the other three probabilities are \
consequently very small. 

And finally, what kinds of distributions are generated for XX\
\[CloseCurlyQuote] when we use these highly imbalanced distributions for X\
\[CloseCurlyQuote]?  \
\>", "Text",
 CellChangeTimes->{{3.6048439577994432`*^9, 3.604843993542099*^9}, {
  3.604846093878478*^9, 3.604846132892063*^9}, {3.6048462730484343`*^9, 
  3.604846295343802*^9}, {3.604846345716261*^9, 3.604846448692181*^9}, {
  3.604998794005176*^9, 3.604998800666665*^9}, {3.6178803572761297`*^9, 
  3.617880374026558*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxJointProbs", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"jointOutcomeProbsAll", "[", 
     RowBox[{"[", "#", "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
   "maxProbsPos"}]}]], "Input",
 CellChangeTimes->{{3.604844032667231*^9, 3.604844085657819*^9}, {
  3.604846454551511*^9, 3.604846462593066*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.0021`", ",", "0.`", ",", "0.0162`", ",", "0.1839`", ",", "0.00335`", 
     ",", "0.00005`", ",", "0.02445`", ",", "0.2716`", ",", "0.002`", ",", 
     "0.0001`", ",", "0.0109`", ",", "0.1385`", ",", "0.0036`", ",", 
     "0.00025`", ",", "0.028`", ",", "0.315`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00855`", ",", "0.18445`", ",", "0.00345`", ",", "0.00575`", ",", 
     "0.0137`", ",", "0.2705`", ",", "0.00445`", ",", "0.0108`", ",", 
     "0.00645`", ",", "0.13885`", ",", "0.0017`", ",", "0.0045`", ",", 
     "0.0151`", ",", "0.31535`", ",", "0.00545`", ",", "0.01095`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0019`", ",", "0.00655`", ",", "0.1886`", ",", "0.00515`", ",", 
     "0.0037`", ",", "0.00925`", ",", "0.278`", ",", "0.0085`", ",", 
     "0.0011`", ",", "0.00435`", ",", "0.1421`", ",", "0.00395`", ",", 
     "0.0031`", ",", "0.01185`", ",", "0.3221`", ",", "0.0098`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00325`", ",", "0.006`", ",", "0.0018`", ",", "0.19115`", ",", 
     "0.00625`", ",", "0.00905`", ",", "0.0033`", ",", "0.28085`", ",", 
     "0.00315`", ",", "0.0053`", ",", "0.00125`", ",", "0.1418`", ",", 
     "0.00655`", ",", "0.01065`", ",", "0.00395`", ",", "0.3257`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0058`", ",", "0.19075`", ",", "0.0006`", ",", "0.00505`", ",", 
     "0.0109`", ",", "0.28055`", ",", "0.0012`", ",", "0.0068`", ",", 
     "0.00445`", ",", "0.14345`", ",", "0.0006`", ",", "0.003`", ",", 
     "0.01105`", ",", "0.3274`", ",", "0.00125`", ",", "0.00715`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00335`", ",", "0.0003`", ",", "0.01455`", ",", "0.184`", ",", 
     "0.0048`", ",", "0.00055`", ",", "0.0206`", ",", "0.2735`", ",", 
     "0.0023`", ",", "0.00015`", ",", "0.01025`", ",", "0.1388`", ",", 
     "0.00585`", ",", "0.0005`", ",", "0.0249`", ",", "0.3156`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.604844087369671*^9, 3.604846463448656*^9, 
  3.604846542391012*^9, 3.604855759643249*^9, 3.6048570810404253`*^9, 
  3.604998603934338*^9, 3.617036393942144*^9, 3.617880401872711*^9}]
}, {2}]],

Cell["\<\
Again, we can see that each of the above are nowhere near uniform.\
\>", "Text",
 CellChangeTimes->{{3.604998818275598*^9, 3.604998858345091*^9}, {
  3.617880418746799*^9, 3.617880424314867*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["One More Test", "Section",
 CellChangeTimes->{{3.604849152606833*^9, 3.604849164809915*^9}}],

Cell["\<\
Our analysis has pointed us in the direction of a potential answer. Perhaps \
the probability distribution for X\[CloseCurlyQuote] that produces a zero \
distance, i.e., a uniformly distributed XX\[CloseCurlyQuote] is simply a \
uniform distribution of X\[CloseCurlyQuote]. In this case, that distribution \
will be X\[CloseCurlyQuote] = {0.25, 0.25, 0.25, 0.25}. 

Let\[CloseCurlyQuote]s try this out. \
\>", "Text",
 CellChangeTimes->{{3.604846579888528*^9, 3.604846693001742*^9}, {
  3.6049988744762897`*^9, 3.6049988896327353`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"xTest", " ", "=", " ", 
    RowBox[{"RandomChoice", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pa", ",", " ", "pb", ",", " ", "pc", ",", " ", "pd"}], "}"}],
        " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"a", ",", " ", "b", ",", " ", "c", ",", " ", "d"}], "}"}]}], 
      ",", " ", "nTrials"}], "]"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.604846715804573*^9, 3.604846722235498*^9}, {
  3.604846772281679*^9, 3.6048467786002083`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xPrimeTest", " ", "=", " ", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.25", ",", " ", "0.25", ",", " ", "0.25", ",", "0.25"}], 
       "}"}], " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"R", ",", " ", "S", ",", " ", "T", ",", "U"}], "}"}]}], ",", 
     " ", "nTrials"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.604846805724702*^9, 3.604846816040925*^9}, {
  3.6048472237399607`*^9, 3.604847251846591*^9}, {3.604998897314809*^9, 
  3.604998914722673*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"jointTest", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"xTest", ",", " ", "xPrimeTest"}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.604847263846146*^9, 3.604847307025805*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testjointOutcomeProbs", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{"jointTest", ",", " ", "#"}], "]"}], "/", "nTrials"}], "]"}], 
    " ", "&"}], " ", "/@", " ", "jointOutcomeSpace"}]}]], "Input",
 CellChangeTimes->{{3.604847376973753*^9, 3.604847388906603*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.04795`", ",", "0.04705`", ",", "0.0512`", ",", "0.0488`", ",", "0.0748`",
    ",", "0.0735`", ",", "0.07515`", ",", "0.07775`", ",", "0.03885`", ",", 
   "0.0365`", ",", "0.0389`", ",", "0.0352`", ",", "0.0909`", ",", "0.08985`",
    ",", "0.0889`", ",", "0.0847`"}], "}"}]], "Output",
 CellChangeTimes->{3.604847410614011*^9, 3.604855759988879*^9, 
  3.604857081163987*^9, 3.604998604043601*^9, 3.604998931592366*^9, 
  3.617036394043158*^9, 3.617880456436578*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testEuclideanD", " ", "=", " ", 
  RowBox[{"EuclideanDistance", "[", 
   RowBox[{"testjointOutcomeProbs", ",", " ", "uniformProbs"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.604847538529881*^9, 3.604847551660227*^9}, {
  3.60484766773846*^9, 3.6048476880349407`*^9}}],

Cell[BoxData["0.08193054985779114`"], "Output",
 CellChangeTimes->{3.604847689856595*^9, 3.604855760038927*^9, 
  3.604857081192875*^9, 3.604998604067527*^9, 3.604998945361133*^9, 
  3.617036394078512*^9, 3.617880463781844*^9}]
}, {2}]],

Cell["\<\
Unfortunately, just making the X\[CloseCurlyQuote] a uniform distribution won\
\[CloseCurlyQuote]t work. \
\>", "Text",
 CellChangeTimes->{{3.60484770990352*^9, 3.604847721008919*^9}, {
  3.6048477719512043`*^9, 3.604847772622911*^9}, {3.604848229034368*^9, 
  3.604848249866798*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusion and Caveats", "Section",
 CellChangeTimes->{{3.604848332380681*^9, 3.604848339575241*^9}}],

Cell["\<\
The simulation approach we\[CloseCurlyQuote]ve taken is limited and nothing \
definitive can be said (without a lot more work) about the truth of Colbeck \
and Renner\[CloseCurlyQuote]s claim. However, the simulations do give us a \
feel for how the distributions behave in the simple case that we\
\[CloseCurlyQuote]ve considered where X has the outcomes {a, b, c, d} and X\
\[CloseCurlyQuote] has the outcomes {R, S, T, U}. Based on our evidence it \
doesn\[CloseCurlyQuote]t seem likely that there is an X\[CloseCurlyQuote] \
distribution that will make the joint distribution of XX\[CloseCurlyQuote] \
uniform. Clearly, an uniform distribution for X\[CloseCurlyQuote] isn\
\[CloseCurlyQuote]t the solution, nor are any of the 7,250 or so other \
distributions we\[CloseCurlyQuote]ve tried. 

Therefore, for the simple case we\[CloseCurlyQuote]ve constructed, the \
evidence generated by the simulations points to the claim being false. The \
best cases for constructing the X\[CloseCurlyQuote] probabilities is to keep \
them balanced and roughly equal (but making them exactly equal is not a \
solution).  And given the pattern we\[CloseCurlyQuote]ve seen developing with \
the distances, it would be surprising to see how increasing the number of \
outcomes of X or of X\[CloseCurlyQuote] will make it any better for the claim.

That said, our conclusion is still tentative and might be wrong as we \
mentioned right up front for one or more of the following reasons: (1) We \
misinterpreted what Colbeck and Renner mean by the joint probability \
distribution of XX\[CloseCurlyQuote], or (2) The set of candidates we \
generated for the X\[CloseCurlyQuote] distributions is not representative or \
simply didn\[CloseCurlyQuote]t include the distribution that would have \
satisfied the claim. This might be the case because there might be something \
amiss in the procedure for converting a randomly generated 4-tuple of Reals \
between 0 and 1 into a 4-tuple that meets the condition of a probability \
distribution -- i.e. that the sum of the elements of the 4-tuple add exactly \
to 1.

Nevertheless, our simulations have given us some important information about \
how joint probability distributions behave. \
\>", "Text",
 CellChangeTimes->{{3.6048492524330482`*^9, 3.6048496453066072`*^9}, {
  3.604849678515225*^9, 3.604849710423254*^9}, {3.6048498293311157`*^9, 
  3.6048498551156054`*^9}, {3.6048521662173243`*^9, 3.604852346889323*^9}, {
  3.604852383719164*^9, 3.604852529554594*^9}, {3.604852573765594*^9, 
  3.6048525843361387`*^9}, {3.604852624628757*^9, 3.604852916307508*^9}, {
  3.604852952653616*^9, 3.6048530072710047`*^9}, {3.6049989735429*^9, 
  3.6049990541663713`*^9}, {3.604999117988865*^9, 3.604999197091454*^9}, {
  3.606985625342578*^9, 3.6069856269497757`*^9}, {3.617036301724287*^9, 
  3.617036309699326*^9}, {3.6178804966812973`*^9, 3.617880498887764*^9}, {
  3.6178805506116543`*^9, 3.6178806054575377`*^9}, {3.617880703789709*^9, 
  3.6178808554366713`*^9}}]
}, Open  ]]
},
WindowSize->{585, 851},
WindowMargins->{{Automatic, 0}, {Automatic, 1}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 9, \
2015)",
StyleDefinitions->"JSNotepad.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 543, 13, 158, "Section"],
Cell[CellGroupData[{
Cell[1125, 37, 97, 1, 45, "Section"],
Cell[1225, 40, 1211, 20, 279, "Text"],
Cell[2439, 62, 1357, 21, 353, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3833, 88, 155, 2, 65, "Section"],
Cell[CellGroupData[{
Cell[4013, 94, 174, 2, 44, "Subsection"],
Cell[4190, 98, 518, 9, 71, "Text"],
Cell[4711, 109, 220, 5, 28, "Input"],
Cell[4934, 116, 713, 16, 45, "Input"],
Cell[5650, 134, 377, 7, 50, "Text"],
Cell[CellGroupData[{
Cell[6052, 145, 482, 9, 29, "Input"],
Cell[6537, 156, 1464, 37, 44, "Output"]
}, Open  ]],
Cell[8016, 196, 835, 12, 134, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8888, 213, 266, 5, 44, "Subsection"],
Cell[9157, 220, 309, 6, 71, "Text"],
Cell[9469, 228, 350, 7, 29, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9856, 240, 173, 2, 44, "Subsection"],
Cell[10032, 244, 429, 7, 71, "Text"],
Cell[10464, 253, 339, 6, 44, "Input"],
Cell[10806, 261, 632, 15, 29, "Input"],
Cell[11441, 278, 291, 5, 92, "Text"],
Cell[CellGroupData[{
Cell[11757, 287, 162, 3, 28, "Input"],
Cell[11922, 292, 427, 8, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12398, 306, 304, 4, 44, "Subsection"],
Cell[12705, 312, 864, 14, 238, "Text"],
Cell[13572, 328, 1994, 40, 93, "Input"],
Cell[15569, 370, 969, 15, 176, "Text"],
Cell[16541, 387, 6079, 137, 301, "Input"],
Cell[22623, 526, 350, 6, 71, "Text"],
Cell[22976, 534, 1627, 30, 45, "Input"],
Cell[24606, 566, 162, 2, 29, "Text"],
Cell[CellGroupData[{
Cell[24793, 572, 191, 3, 28, "Input"],
Cell[24987, 577, 334, 5, 28, "Output"]
}, {2}]],
Cell[25333, 585, 277, 3, 29, "Text"],
Cell[25613, 590, 532, 12, 28, "Input"],
Cell[26148, 604, 335, 6, 50, "Text"],
Cell[CellGroupData[{
Cell[26508, 614, 315, 5, 29, "Input"],
Cell[26826, 621, 13134, 371, 235, "Output"]
}, Open  ]],
Cell[39975, 995, 369, 6, 113, "Text"],
Cell[40347, 1003, 73, 0, 29, "Text"],
Cell[40423, 1005, 3300, 72, 253, "Input"],
Cell[CellGroupData[{
Cell[43748, 1081, 208, 4, 29, "Input"],
Cell[43959, 1087, 306, 5, 28, "Output"]
}, Open  ]],
Cell[44280, 1095, 1790, 39, 157, "Input"],
Cell[46073, 1136, 4139, 91, 365, "Input"],
Cell[CellGroupData[{
Cell[50237, 1231, 408, 9, 28, "Input"],
Cell[50648, 1242, 161, 4, 28, "Output"]
}, Open  ]],
Cell[50824, 1249, 241, 5, 29, "Input"],
Cell[CellGroupData[{
Cell[51090, 1258, 135, 2, 29, "Input"],
Cell[51228, 1262, 120, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51385, 1269, 160, 3, 29, "Input"],
Cell[51548, 1274, 969, 25, 59, "Output"]
}, Open  ]],
Cell[52532, 1302, 352, 7, 71, "Text"],
Cell[52887, 1311, 273, 6, 29, "Text"],
Cell[53163, 1319, 285, 7, 29, "Input"],
Cell[CellGroupData[{
Cell[53473, 1330, 337, 8, 29, "Input"],
Cell[53813, 1340, 53913, 1544, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107763, 2889, 284, 6, 29, "Input"],
Cell[108050, 2897, 13502, 386, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121589, 3288, 250, 6, 29, "Input"],
Cell[121842, 3296, 10216, 261, 240, "Output"]
}, Open  ]],
Cell[132073, 3560, 317, 6, 71, "Text"],
Cell[132393, 3568, 196, 2, 29, "Text"],
Cell[132592, 3572, 256, 7, 29, "Input"],
Cell[CellGroupData[{
Cell[132873, 3583, 181, 4, 29, "Input"],
Cell[133057, 3589, 1134, 27, 89, "Output"]
}, Open  ]],
Cell[134206, 3619, 153, 2, 29, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134408, 3627, 92, 1, 65, "Section"],
Cell[134503, 3630, 532, 8, 155, "Text"],
Cell[135038, 3640, 164, 3, 29, "Input"],
Cell[135205, 3645, 1323, 31, 93, "Input"],
Cell[136531, 3678, 421, 9, 92, "Text"],
Cell[136955, 3689, 2059, 46, 139, "Input"],
Cell[CellGroupData[{
Cell[139039, 3739, 286, 6, 29, "Input"],
Cell[139328, 3747, 490, 9, 44, "Output"]
}, Open  ]],
Cell[139833, 3759, 257, 5, 50, "Text"],
Cell[140093, 3766, 355, 9, 45, "Input"],
Cell[CellGroupData[{
Cell[140473, 3779, 242, 5, 28, "Input"],
Cell[140718, 3786, 130269, 2147, 239, 122413, 2017, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[271002, 5936, 277, 5, 71, "Text"],
Cell[CellGroupData[{
Cell[271304, 5945, 217, 4, 28, "Input"],
Cell[271524, 5951, 136, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271697, 5958, 367, 9, 29, "Input"],
Cell[272067, 5969, 255, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272359, 5981, 533, 13, 45, "Input"],
Cell[272895, 5996, 4550, 97, 359, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277482, 6098, 280, 4, 44, "Subsection"],
Cell[277765, 6104, 364, 9, 50, "Text"],
Cell[278132, 6115, 610, 13, 45, "Input"],
Cell[278745, 6130, 135, 1, 29, "Text"],
Cell[278883, 6133, 304, 8, 29, "Input"],
Cell[279190, 6143, 367, 6, 92, "Text"],
Cell[CellGroupData[{
Cell[279582, 6153, 498, 11, 46, "Input"],
Cell[280083, 6166, 729, 12, 59, "Output"]
}, {2}]],
Cell[280824, 6181, 359, 6, 113, "Text"],
Cell[281186, 6189, 226, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[281437, 6198, 375, 7, 28, "Input"],
Cell[281815, 6207, 728, 13, 44, "Output"]
}, {2}]],
Cell[282555, 6223, 676, 11, 113, "Text"],
Cell[CellGroupData[{
Cell[283256, 6238, 322, 8, 29, "Input",
 CellID->196650888],
Cell[283581, 6248, 804, 22, 39, "Output"]
}, Open  ]],
Cell[284400, 6273, 155, 3, 50, "Text"],
Cell[CellGroupData[{
Cell[284580, 6280, 325, 8, 29, "Input",
 CellID->361901413],
Cell[284908, 6290, 976, 27, 48, "Output"]
}, Open  ]],
Cell[285899, 6320, 169, 4, 50, "Text"],
Cell[CellGroupData[{
Cell[286093, 6328, 305, 5, 28, "Input"],
Cell[286401, 6335, 329, 5, 28, "Output"]
}, {2}]],
Cell[286742, 6343, 220, 4, 71, "Text"],
Cell[CellGroupData[{
Cell[286987, 6351, 264, 6, 28, "Input"],
Cell[287254, 6359, 370, 5, 28, "Output"]
}, {2}]],
Cell[287636, 6367, 166, 2, 29, "Text"],
Cell[CellGroupData[{
Cell[287827, 6373, 335, 6, 28, "Input"],
Cell[288165, 6381, 334, 5, 28, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[288533, 6391, 291, 6, 28, "Input"],
Cell[288827, 6399, 362, 5, 28, "Output"]
}, {2}]],
Cell[289201, 6407, 409, 7, 92, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289647, 6419, 189, 2, 44, "Subsection"],
Cell[289839, 6423, 614, 10, 134, "Text"],
Cell[290456, 6435, 494, 8, 71, "Text"],
Cell[290953, 6445, 493, 12, 45, "Input"],
Cell[291449, 6459, 445, 11, 45, "Input"],
Cell[291897, 6472, 918, 22, 61, "Input"],
Cell[292818, 6496, 357, 9, 45, "Input"],
Cell[293178, 6507, 221, 4, 50, "Text"],
Cell[CellGroupData[{
Cell[293424, 6515, 404, 9, 28, "Input"],
Cell[293831, 6526, 120368, 1984, 254, 102535, 1691, "CachedBoxData", \
"BoxData", "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[414257, 8517, 93, 1, 65, "Section"],
Cell[414353, 8520, 1322, 22, 197, "Text"],
Cell[CellGroupData[{
Cell[415700, 8546, 174, 2, 44, "Subsection"],
Cell[415877, 8550, 274, 5, 71, "Text"],
Cell[CellGroupData[{
Cell[416176, 8559, 171, 3, 28, "Input"],
Cell[416350, 8564, 248, 3, 28, "Output"]
}, {2}]],
Cell[416610, 8570, 278, 5, 71, "Text"],
Cell[CellGroupData[{
Cell[416913, 8579, 212, 4, 28, "Input"],
Cell[417128, 8585, 254, 5, 28, "Output"]
}, {2}]],
Cell[417394, 8593, 446, 8, 92, "Text"],
Cell[CellGroupData[{
Cell[417865, 8605, 448, 11, 28, "Input"],
Cell[418316, 8618, 484, 9, 28, "Output"]
}, {2}]],
Cell[418812, 8630, 332, 6, 71, "Text"],
Cell[419147, 8638, 509, 8, 113, "Text"],
Cell[CellGroupData[{
Cell[419681, 8650, 710, 14, 60, "Input"],
Cell[420394, 8666, 435, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[420866, 8678, 368, 9, 28, "Input"],
Cell[421237, 8689, 660, 16, 44, "Output"]
}, {2}]],
Cell[421909, 8708, 278, 5, 71, "Text"],
Cell[CellGroupData[{
Cell[422212, 8717, 284, 7, 28, "Input"],
Cell[422499, 8726, 870, 19, 104, "Output"]
}, {2}]],
Cell[423381, 8748, 455, 8, 113, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[423873, 8761, 129, 1, 44, "Subsection"],
Cell[424005, 8764, 301, 6, 71, "Text"],
Cell[CellGroupData[{
Cell[424331, 8774, 172, 3, 28, "Input"],
Cell[424506, 8779, 206, 3, 28, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[424746, 8787, 216, 4, 28, "Input"],
Cell[424965, 8793, 237, 5, 28, "Output"]
}, {2}]],
Cell[425214, 8801, 306, 6, 50, "Text"],
Cell[CellGroupData[{
Cell[425545, 8811, 501, 12, 28, "Input"],
Cell[426049, 8825, 487, 9, 28, "Output"]
}, {2}]],
Cell[426548, 8837, 325, 6, 71, "Text"],
Cell[426876, 8845, 438, 8, 71, "Text"],
Cell[CellGroupData[{
Cell[427339, 8857, 737, 14, 46, "Input"],
Cell[428079, 8873, 516, 10, 28, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[428629, 8888, 370, 9, 28, "Input"],
Cell[429002, 8899, 1309, 31, 104, "Output"]
}, {2}]],
Cell[430323, 8933, 758, 14, 217, "Text"],
Cell[CellGroupData[{
Cell[431106, 8951, 333, 8, 28, "Input"],
Cell[431442, 8961, 2213, 45, 194, "Output"]
}, {2}]],
Cell[433667, 9009, 205, 4, 29, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[433921, 9019, 98, 1, 65, "Section"],
Cell[434022, 9022, 546, 10, 154, "Text"],
Cell[434571, 9034, 541, 14, 29, "Input"],
Cell[435115, 9050, 566, 14, 28, "Input"],
Cell[435684, 9066, 260, 7, 29, "Input"],
Cell[CellGroupData[{
Cell[435969, 9077, 363, 9, 28, "Input"],
Cell[436335, 9088, 510, 9, 44, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[436879, 9102, 296, 6, 28, "Input"],
Cell[437178, 9110, 227, 3, 28, "Output"]
}, {2}]],
Cell[437417, 9116, 294, 6, 29, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437748, 9127, 107, 1, 65, "Section"],
Cell[437858, 9130, 3008, 46, 719, "Text"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
